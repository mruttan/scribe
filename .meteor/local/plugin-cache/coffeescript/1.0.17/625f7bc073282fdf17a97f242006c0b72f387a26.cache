{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar MirrorReporter, ObjectLogger, log;\n\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;\n\nlog = new ObjectLogger('MirrorReporter', 'info');\n\nMirrorReporter = (function() {\n  function MirrorReporter(mochaReporter, options) {\n    var clientRunner, ref;\n    this.mochaReporter = mochaReporter;\n    clientRunner = (ref = options.reporterOptions) != null ? ref.clientRunner : void 0;\n    expect(clientRunner, \"clientRunner\").to.be.ok;\n    clientRunner.total = this.mochaReporter.total;\n    this.mochaReporter.on('start', (function(_this) {\n      return function() {\n        try {\n          log.enter('onStart', arguments);\n          return clientRunner.emit.call(clientRunner, 'start');\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('suite', (function(_this) {\n      return function(suite) {\n        try {\n          log.enter('onSuite', arguments);\n          return clientRunner.emit.call(clientRunner, 'suite', suite);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('suite end', (function(_this) {\n      return function(suite) {\n        try {\n          log.enter('onSuiteEnd', arguments);\n          return clientRunner.emit.call(clientRunner, 'suite end', suite);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('test end', (function(_this) {\n      return function(test) {\n        try {\n          log.enter('onTestEnd', arguments);\n          return clientRunner.emit.call(clientRunner, 'test end', test);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('pass', (function(_this) {\n      return function(test) {\n        try {\n          log.enter('onPass', arguments);\n          return clientRunner.emit.call(clientRunner, 'pass', test);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('fail', (function(_this) {\n      return function(test, error) {\n        try {\n          log.enter('onFail', arguments);\n          return clientRunner.emit.call(clientRunner, 'fail', test, error);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('end', (function(_this) {\n      return function() {\n        try {\n          log.enter('onEnd', arguments);\n          return clientRunner.emit.call(clientRunner, 'end');\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n    this.mochaReporter.on('pending', (function(_this) {\n      return function(test) {\n        try {\n          log.enter('onPending', arguments);\n          return clientRunner.emit.call(clientRunner, 'pending', test);\n        } finally {\n          log[\"return\"]();\n        }\n      };\n    })(this));\n  }\n\n  return MirrorReporter;\n\n})();\n\nmodule.exports = MirrorReporter;\n","sourceMap":{"version":3,"file":"/meteor/src/reporters/MirrorReporter.coffee.js","sourceRoot":"","sources":["/packages/practicalmeteor_mocha/meteor/src/reporters/MirrorReporter.coffee"],"names":[],"mappings":"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","sourcesContent":["{ObjectLogger}  = require(\"meteor/practicalmeteor:loglevel\")\nlog = new ObjectLogger('MirrorReporter', 'info')\n\nclass MirrorReporter\n\n  constructor:(@mochaReporter, options)->\n\n    clientRunner = options.reporterOptions?.clientRunner\n    expect(clientRunner, \"clientRunner\").to.be.ok\n\n    # The in order to calculate the progress\n    clientRunner.total = @mochaReporter.total\n\n    @mochaReporter.on 'start', =>\n      try\n        log.enter 'onStart', arguments\n        clientRunner.emit.call(clientRunner, 'start')\n      finally\n        log.return()\n\n    @mochaReporter.on 'suite', (suite)=>\n      try\n        log.enter 'onSuite', arguments\n        clientRunner.emit.call(clientRunner, 'suite',suite)\n      finally\n        log.return()\n\n    @mochaReporter.on 'suite end', (suite)=>\n      try\n        log.enter 'onSuiteEnd', arguments\n        clientRunner.emit.call(clientRunner, 'suite end',suite)\n      finally\n        log.return()\n\n    @mochaReporter.on 'test end', (test)=>\n      try\n        log.enter 'onTestEnd', arguments\n        clientRunner.emit.call(clientRunner, 'test end', test)\n      finally\n        log.return()\n\n    @mochaReporter.on 'pass', (test)=>\n      try\n        log.enter 'onPass', arguments\n        clientRunner.emit.call(clientRunner, 'pass', test)\n      finally\n        log.return()\n\n    @mochaReporter.on 'fail', (test, error)=>\n      try\n        log.enter 'onFail', arguments\n        clientRunner.emit.call(clientRunner, 'fail', test, error)\n      finally\n        log.return()\n\n    @mochaReporter.on 'end', =>\n      try\n        log.enter 'onEnd', arguments\n        clientRunner.emit.call(clientRunner, 'end')\n      finally\n        log.return()\n\n    @mochaReporter.on 'pending', (test)=>\n      try\n        log.enter 'onPending', arguments\n        clientRunner.emit.call(clientRunner, 'pending', test)\n\n      finally\n        log.return()\n\n\nmodule.exports = MirrorReporter\n"]}}