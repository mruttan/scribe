{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar BaseReporter, MeteorPublishReporter, ObjectLogger, _, log,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\n_ = require(\"underscore\")._;\n\nBaseReporter = require(\"./BaseReporter\");\n\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;\n\nlog = new ObjectLogger('MeteorPublishReporter', 'info');\n\nMeteorPublishReporter = (function(superClass) {\n  extend(MeteorPublishReporter, superClass);\n\n  MeteorPublishReporter.publisher = null;\n\n  function MeteorPublishReporter(runner, options) {\n    this.errorJSON = bind(this.errorJSON, this);\n    this.added = bind(this.added, this);\n    var HTML_REPORTER, REPORTERS, mochaReporter, ref;\n    try {\n      log.enter('constructor', arguments);\n      expect(options.reporterOptions, 'options.reporterOptions').to.be.an('object');\n      runner.grep(options.reporterOptions.grep);\n      MeteorPublishReporter.__super__.constructor.call(this, runner, options);\n      this.publisher = options.reporterOptions.publisher;\n      expect(this.publisher, '@publisher').to.be.an('object');\n      expect(this.publisher.ready, '@publisher.ready').to.be.a('function');\n      expect(this.publisher.added, '@publisher.added').to.be.a('function');\n      expect(this.publisher.onStop, '@publisher.onStop').to.be.a('function');\n      this.publisher.onStop((function(_this) {\n        return function() {\n          return _this.stopped = true;\n        };\n      })(this));\n      this.stopped = false;\n      this.sequence = 0;\n      this.added = Meteor.bindEnvironment(this.added, null, this);\n      ref = require(\"./index\"), REPORTERS = ref.REPORTERS, HTML_REPORTER = ref.HTML_REPORTER;\n      mochaReporter = process.env.MOCHA_REPORTER || HTML_REPORTER;\n      if (mochaReporter && !_.contains(REPORTERS, mochaReporter)) {\n        log.info(\"Can't find '\" + mochaReporter + \"' reporter. Using '\" + HTML_REPORTER + \"' instead.\");\n        mochaReporter = HTML_REPORTER;\n      }\n      this.added('run mocha', {\n        reporter: mochaReporter,\n        runOrder: process.env.MOCHA_RUN_ORDER || 'parallel'\n      });\n      this.runner.on('start', (function(_this) {\n        return function() {\n          try {\n            log.enter('onStart', arguments);\n            return _this.added('start', _this.stats);\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('suite', (function(_this) {\n        return function(suite) {\n          try {\n            log.enter('onSuite', arguments);\n            return _this.added('suite', _this.cleanSuite(suite));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('suite end', (function(_this) {\n        return function(suite) {\n          try {\n            log.enter('onSuiteEnd', arguments);\n            return _this.added('suite end', _this.cleanSuite(suite));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('test end', (function(_this) {\n        return function(test) {\n          try {\n            log.enter('onTestEnd', arguments);\n            return _this.added('test end', _this.cleanTest(test));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('pass', (function(_this) {\n        return function(test) {\n          try {\n            log.enter('onPass', arguments);\n            return _this.added('pass', _this.cleanTest(test));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('fail', (function(_this) {\n        return function(test, error) {\n          try {\n            log.enter('onFail', arguments);\n            return _this.added('fail', _this.cleanTest(test));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('end', (function(_this) {\n        return function() {\n          try {\n            log.enter('onEnd', arguments);\n            return _this.added('end', _this.stats);\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n      this.runner.on('pending', (function(_this) {\n        return function(test) {\n          try {\n            log.enter('onPending', arguments);\n            log.debug(\"test\", test);\n            return _this.added('pending', _this.cleanTest(test));\n          } finally {\n            log[\"return\"]();\n          }\n        };\n      })(this));\n    } finally {\n      log[\"return\"]();\n    }\n  }\n\n  MeteorPublishReporter.prototype.added = function(event, data) {\n    var doc, ex;\n    try {\n      log.enter('added', arguments);\n      if (this.stopped === true) {\n        return;\n      }\n      this.sequence++;\n      doc = {\n        _id: \"\" + this.sequence,\n        event: event,\n        data: data\n      };\n      return this.publisher.added('mochaServerRunEvents', doc._id, doc);\n    } catch (_error) {\n      ex = _error;\n      log.error(\"Can't send report data to client.\");\n      log.error(\"Error:\", ex.stack || ex.message);\n      return log.error(\"Document:\", doc);\n    } finally {\n      log[\"return\"]();\n    }\n  };\n\n\n  /**\n   * Return a plain-object representation of `test`\n   * free of cyclic properties etc.\n  #\n   * @param {Object} test\n   * @return {Object}\n   * @api private\n   */\n\n  MeteorPublishReporter.prototype.cleanTest = function(test) {\n    var ex, properties, ref;\n    try {\n      log.enter(\"cleanTest\", arguments);\n      properties = [\"title\", \"type\", \"state\", \"speed\", \"pending\", \"duration\", \"async\", \"sync\", \"_timeout\", \"_slow\", \"body\"];\n      return _.extend(_.pick(test, properties), {\n        _fullTitle: test.fullTitle(),\n        parent: this.cleanSuite(test.parent),\n        fn: (ref = test.fn) != null ? ref.toString() : void 0,\n        err: this.errorJSON(test.err),\n        isServer: true\n      });\n    } catch (_error) {\n      ex = _error;\n      return log.error(ex);\n    } finally {\n      log[\"return\"]();\n    }\n  };\n\n  MeteorPublishReporter.prototype.cleanSuite = function(suite) {\n    var ex;\n    try {\n      log.enter(\"cleanSuite\", arguments);\n      return _.extend(_.pick(suite, [\"title\", \"root\", \"pending\"]), {\n        _fullTitle: suite.fullTitle(),\n        isServer: true\n      });\n    } catch (_error) {\n      ex = _error;\n      return log.error(ex);\n    } finally {\n      log[\"return\"]();\n    }\n  };\n\n\n  /**\n   * Transform `error` into a JSON object.\n   * @param {Error} err\n   * @return {Object}\n   */\n\n  MeteorPublishReporter.prototype.errorJSON = function(err) {\n    if (!err) {\n      return;\n    }\n\n    /*\n      Only picking the defaults properties define by ECMAScript to avoid problems\n      with custom error that may have properties that can't be stringify such as functions.\n      See https://goo.gl/bsZh3B and https://goo.gl/AFp6KB\n     */\n    return _.pick(err, [\"name\", \"message\", \"stack\"]);\n  };\n\n  return MeteorPublishReporter;\n\n})(BaseReporter);\n\nmodule.exports = MeteorPublishReporter;\n","sourceMap":{"version":3,"file":"/meteor/src/reporters/MeteorPublishReporter.coffee.js","sourceRoot":"","sources":["/packages/practicalmeteor_mocha/meteor/src/reporters/MeteorPublishReporter.coffee"],"names":[],"mappings":"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","sourcesContent":["{_}            = require(\"underscore\")\nBaseReporter   = require(\"./BaseReporter\")\n{ObjectLogger} = require(\"meteor/practicalmeteor:loglevel\")\n\nlog = new ObjectLogger('MeteorPublishReporter', 'info')\n\nclass MeteorPublishReporter extends BaseReporter\n\n  @publisher: null \n\n  constructor: (runner, options)->\n    try\n      log.enter 'constructor', arguments\n      expect(options.reporterOptions, 'options.reporterOptions').to.be.an('object')\n\n      # Update runner tests\n      runner.grep(options.reporterOptions.grep)\n\n      super(runner, options)\n\n#      @publisher = practical.mocha.MeteorPublishReporter.publisher\n      @publisher = options.reporterOptions.publisher\n      expect(@publisher, '@publisher').to.be.an('object')\n      expect(@publisher.ready, '@publisher.ready').to.be.a('function')\n      expect(@publisher.added, '@publisher.added').to.be.a('function')\n      expect(@publisher.onStop, '@publisher.onStop').to.be.a('function')\n\n\n      @publisher.onStop =>\n        @stopped = true\n      @stopped = false\n      @sequence = 0\n\n      # Make sure we always run within a Fiber\n      @added = Meteor.bindEnvironment(@added, null, @)\n\n      {REPORTERS, HTML_REPORTER} = require(\"./index\")\n      mochaReporter = process.env.MOCHA_REPORTER || HTML_REPORTER\n      if mochaReporter and not _.contains(REPORTERS, mochaReporter)\n        log.info \"Can't find '#{mochaReporter}' reporter. Using '#{HTML_REPORTER}' instead.\"\n        mochaReporter = HTML_REPORTER\n# \n#      # Specify how to run tests 'serial' or 'parallel'\n#      # Running in 'serial' will start server tests first and then client tests\n      @added 'run mocha', { reporter: mochaReporter,   runOrder: process.env.MOCHA_RUN_ORDER || 'parallel' }\n\n      @runner.on 'start', =>\n        try\n          log.enter 'onStart', arguments\n#          @added 'start', {total: @stats.total}\n          @added 'start', @stats\n        finally\n          log.return()\n\n      @runner.on 'suite', (suite)=>\n        try\n          log.enter 'onSuite', arguments\n#          log.info \"suite:\", suite.title\n#          @added 'suite', {title: suite.title, _fullTitle: suite.fullTitle(), root: suite.root}\n\n          @added 'suite', @cleanSuite(suite)\n        finally\n          log.return()\n\n      @runner.on 'suite end', (suite)=>\n        try\n          log.enter 'onSuiteEnd', arguments\n          @added 'suite end', @cleanSuite(suite)\n        finally\n          log.return()\n\n      @runner.on 'test end', (test)=>\n        try\n          log.enter 'onTestEnd', arguments\n          @added 'test end', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'pass', (test)=>\n        try\n          log.enter 'onPass', arguments\n          @added 'pass', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'fail', (test, error)=>\n        try\n          log.enter 'onFail', arguments\n          @added 'fail', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'end', =>\n        try\n          log.enter 'onEnd', arguments\n          @added 'end', @stats\n        finally\n          log.return()\n\n      @runner.on 'pending', (test)=>\n        try\n          log.enter 'onPending', arguments\n          log.debug \"test\", test\n          @added 'pending', @cleanTest(test)\n        finally\n          log.return()\n    finally\n      log.return()\n\n\n  added: (event, data)=>\n    try\n      log.enter 'added', arguments\n#      log.info event, data\n      return if @stopped is true\n      @sequence++\n      doc =\n        _id: \"#{@sequence}\"\n        event: event\n        data: data\n      @publisher.added('mochaServerRunEvents', doc._id, doc)\n    catch ex\n      log.error \"Can't send report data to client.\"\n      log.error \"Error:\", (ex.stack || ex.message)\n      log.error \"Document:\", doc\n    finally\n      log.return()\n\n\n  ###*\n  # Return a plain-object representation of `test`\n  # free of cyclic properties etc.\n  #\n  # @param {Object} test\n  # @return {Object}\n  # @api private\n  ###\n  cleanTest: (test)->\n    try\n      log.enter(\"cleanTest\", arguments)\n\n      properties = [\"title\", \"type\", \"state\",\"speed\", \"pending\",\n        \"duration\", \"async\", \"sync\", \"_timeout\", \"_slow\", \"body\"]\n      return  _.extend(_.pick(test, properties),{\n        _fullTitle: test.fullTitle()\n        parent: @cleanSuite(test.parent)\n        # So we can show the server side test code in the reporter. This property is null ff the test or suite is pending\n        fn: test.fn?.toString()\n        err: @errorJSON(test.err)\n        isServer: true\n      })\n    catch ex\n      log.error(ex)\n\n    finally\n      log.return()\n\n\n  cleanSuite: (suite)->\n    try\n      log.enter(\"cleanSuite\", arguments)\n      return _.extend(_.pick(suite, [\"title\", \"root\", \"pending\"]),{\n        _fullTitle: suite.fullTitle()\n        isServer: true\n      })\n    catch ex\n      log.error(ex)\n    finally\n      log.return()\n\n  ###*\n  # Transform `error` into a JSON object.\n  # @param {Error} err\n  # @return {Object}\n  ###\n\n  errorJSON: (err) =>\n    return if not err\n    ###\n      Only picking the defaults properties define by ECMAScript to avoid problems\n      with custom error that may have properties that can't be stringify such as functions.\n      See https://goo.gl/bsZh3B and https://goo.gl/AFp6KB\n    ###\n    return _.pick(err, [\"name\", \"message\", \"stack\"])\n\n\n\nmodule.exports = MeteorPublishReporter\n"]}}