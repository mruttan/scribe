{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar BaseReporter, JsonStreamReporter,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBaseReporter = require(\"./BaseReporter\");\n\nJsonStreamReporter = (function(superClass) {\n  extend(JsonStreamReporter, superClass);\n\n  function JsonStreamReporter(runner, options) {\n    JsonStreamReporter.__super__.constructor.call(this, runner, options);\n    this.runner.on('start', (function(_this) {\n      return function(total) {\n        return console.log(JSON.stringify([\n          'start', {\n            total: _this.stats.total\n          }\n        ]));\n      };\n    })(this));\n    this.runner.on('pass', (function(_this) {\n      return function(test) {\n        return console.log(JSON.stringify(['pass', _this.clean(test)]));\n      };\n    })(this));\n    this.runner.on('fail', (function(_this) {\n      return function(test, err) {\n        test = _this.clean(test);\n        test.err = err.message;\n        return console.log(JSON.stringify(['fail', test]));\n      };\n    })(this));\n    this.runner.on('end', (function(_this) {\n      return function() {\n        return console.log(JSON.stringify(['end', _this.stats]));\n      };\n    })(this));\n  }\n\n  JsonStreamReporter.prototype.clean = function(test) {\n    return {\n      title: test.title,\n      fullTitle: test.fullTitle(),\n      duration: test.duration\n    };\n  };\n\n  return JsonStreamReporter;\n\n})(BaseReporter);\n\nmodule.exports = JsonStreamReporter;\n","sourceMap":{"version":3,"file":"/meteor/src/reporters/JsonStreamReporter.coffee.js","sourceRoot":"","sources":["/packages/practicalmeteor_mocha/meteor/src/reporters/JsonStreamReporter.coffee"],"names":[],"mappings":";AAAA,IAAA,gCAAA;EAAA;6BAAA;;AAAA,YAAA,GAAkB,OAAA,CAAQ,gBAAR,CAAlB,CAAA;;AAAA;AAIE,wCAAA,CAAA;;AAAa,EAAA,4BAAC,MAAD,EAAS,OAAT,GAAA;AACX,IAAA,oDAAM,MAAN,EAAc,OAAd,CAAA,CAAA;AAAA,IAEA,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,OAAX,EAAoB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAC,KAAD,GAAA;eAClB,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe;UAAC,OAAD,EAAU;AAAA,YAAE,KAAA,EAAO,KAAC,CAAA,KAAK,CAAC,KAAhB;WAAV;SAAf,CAAZ,EADkB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAApB,CAFA,CAAA;AAAA,IAKA,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,MAAX,EAAmB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAC,IAAD,GAAA;eACjB,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,CAAC,MAAD,EAAS,KAAC,CAAA,KAAD,CAAO,IAAP,CAAT,CAAf,CAAZ,EADiB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAnB,CALA,CAAA;AAAA,IAQA,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,MAAX,EAAmB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAC,IAAD,EAAO,GAAP,GAAA;AACjB,QAAA,IAAA,GAAO,KAAC,CAAA,KAAD,CAAO,IAAP,CAAP,CAAA;AAAA,QACA,IAAI,CAAC,GAAL,GAAW,GAAG,CAAC,OADf,CAAA;eAEA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,CAAC,MAAD,EAAS,IAAT,CAAf,CAAZ,EAHiB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAnB,CARA,CAAA;AAAA,IAaA,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,KAAX,EAAkB,CAAA,SAAA,KAAA,GAAA;aAAA,SAAA,GAAA;eAChB,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,CAAC,KAAD,EAAQ,KAAC,CAAA,KAAT,CAAf,CAAZ,EADgB;MAAA,EAAA;IAAA,CAAA,CAAA,CAAA,IAAA,CAAlB,CAbA,CADW;EAAA,CAAb;;AAAA,+BA0BA,KAAA,GAAO,SAAC,IAAD,GAAA;AACL,WAAO;AAAA,MACL,KAAA,EAAO,IAAI,CAAC,KADP;AAAA,MAEL,SAAA,EAAW,IAAI,CAAC,SAAL,CAAA,CAFN;AAAA,MAGL,QAAA,EAAU,IAAI,CAAC,QAHV;KAAP,CADK;EAAA,CA1BP,CAAA;;4BAAA;;GAF+B,aAFjC,CAAA;;AAAA,MAqCM,CAAC,OAAP,GAAiB,kBArCjB,CAAA","sourcesContent":["BaseReporter    = require(\"./BaseReporter\")\n\nclass JsonStreamReporter extends BaseReporter\n\n  constructor: (runner, options)->\n    super(runner, options)\n\n    @runner.on 'start', (total)=>\n      console.log(JSON.stringify(['start', { total: @stats.total }]))\n\n    @runner.on 'pass', (test)=>\n      console.log(JSON.stringify(['pass', @clean(test)]))\n\n    @runner.on 'fail', (test, err)=>\n      test = @clean(test)\n      test.err = err.message\n      console.log(JSON.stringify(['fail', test]))\n\n    @runner.on 'end', =>\n      console.log(JSON.stringify(['end', @stats]))\n\n  #/**\n  # * Return a plain-object representation of `test`\n  # * free of cyclic properties etc.\n  # *\n  # * @param {Object} test\n  # * @return {Object}\n  # * @api private\n  # */\n\n  clean: (test)->\n    return {\n      title: test.title\n      fullTitle: test.fullTitle()\n      duration: test.duration\n    }\n\nmodule.exports = JsonStreamReporter\n"]}}