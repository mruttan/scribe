{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/bin/options.js","filenameRelative":"packages/practicalmeteor:mocha/bin/options.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/bin/options.js.map","sourceFileName":"packages/practicalmeteor:mocha/bin/options.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"options"},"ignored":false,"code":"/**\n * Dependencies.\n */var fs = require('fs'); /**\n                            * Export `getOptions`.\n                            */\n\nmodule.exports = getOptions; /**\n                              * Get options.\n                              */\n\nfunction getOptions() {\n  var optsPath = process.argv.indexOf('--opts') !== -1 ? process.argv[process.argv.indexOf('--opts') + 1] : 'test/mocha.opts';\n\n  try {\n    var opts = fs.readFileSync(optsPath, 'utf8').replace(/\\\\\\s/g, '%20').split(/\\s/).filter(Boolean).map(function (value) {\n      return value.replace(/%20/g, ' ');\n    });\n    process.argv = process.argv.slice(0, 2).concat(opts.concat(process.argv.slice(2)));\n  } catch (err) {// ignore\n  }\n\n  process.env.LOADED_MOCHA_OPTS = true;\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/bin/options.js"],"names":["fs","require","module","exports","getOptions","optsPath","process","argv","indexOf","opts","readFileSync","replace","split","filter","Boolean","map","value","slice","concat","err","env","LOADED_MOCHA_OPTS"],"mappings":"AAAA;;GAIA,IAAIA,KAAKC,QAAQ,IAAR,CAAT,C,CAEA;;;;AAIAC,OAAOC,OAAP,GAAiBC,UAAjB,C,CAEA;;;;AAIA,SAASA,UAAT,GAAsB;AACpB,MAAIC,WAAWC,QAAQC,IAAR,CAAaC,OAAb,CAAqB,QAArB,MAAmC,CAAC,CAApC,GACPF,QAAQC,IAAR,CAAaD,QAAQC,IAAR,CAAaC,OAAb,CAAqB,QAArB,IAAiC,CAA9C,CADO,GAEP,iBAFR;;AAIA,MAAI;AACF,QAAIC,OAAOT,GAAGU,YAAH,CAAgBL,QAAhB,EAA0B,MAA1B,EACRM,OADQ,CACA,OADA,EACS,KADT,EAERC,KAFQ,CAEF,IAFE,EAGRC,MAHQ,CAGDC,OAHC,EAIRC,GAJQ,CAIJ,UAASC,KAAT,EAAgB;AACnB,aAAOA,MAAML,OAAN,CAAc,MAAd,EAAsB,GAAtB,CAAP;AACD,KANQ,CAAX;AAQAL,YAAQC,IAAR,GAAeD,QAAQC,IAAR,CACZU,KADY,CACN,CADM,EACH,CADG,EAEZC,MAFY,CAELT,KAAKS,MAAL,CAAYZ,QAAQC,IAAR,CAAaU,KAAb,CAAmB,CAAnB,CAAZ,CAFK,CAAf;AAGD,GAZD,CAYE,OAAOE,GAAP,EAAY,CACZ;AACD;;AAEDb,UAAQc,GAAR,CAAYC,iBAAZ,GAAgC,IAAhC;AACD","file":"packages/practicalmeteor:mocha/bin/options.js.map","sourcesContent":["/**\n * Dependencies.\n */\n\nvar fs = require('fs');\n\n/**\n * Export `getOptions`.\n */\n\nmodule.exports = getOptions;\n\n/**\n * Get options.\n */\n\nfunction getOptions() {\n  var optsPath = process.argv.indexOf('--opts') !== -1\n        ? process.argv[process.argv.indexOf('--opts') + 1]\n        : 'test/mocha.opts';\n\n  try {\n    var opts = fs.readFileSync(optsPath, 'utf8')\n      .replace(/\\\\\\s/g, '%20')\n      .split(/\\s/)\n      .filter(Boolean)\n      .map(function(value) {\n        return value.replace(/%20/g, ' ');\n      });\n\n    process.argv = process.argv\n      .slice(0, 2)\n      .concat(opts.concat(process.argv.slice(2)));\n  } catch (err) {\n    // ignore\n  }\n\n  process.env.LOADED_MOCHA_OPTS = true;\n}\n"]},"hash":"af72dbff7edfa7e205be13cc63b180467881b87e"}
