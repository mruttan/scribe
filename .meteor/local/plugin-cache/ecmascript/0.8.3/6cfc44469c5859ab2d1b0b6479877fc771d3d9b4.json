{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-router","imported":["Router","Route","browserHistory"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"},{"kind":"named","imported":"Route","local":"Route"},{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"../ui/Signup","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Signup"}]},{"source":"../ui/Dashboard","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Dashboard"}]},{"source":"../ui/NotFound","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"NotFound"}]},{"source":"../ui/Login","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Login"}]},{"source":"../ui/UserEdit","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"UserEdit"}]}],"exports":{"exported":["onAuthChange","globalOnChange","globalOnEnter","routes"],"specifiers":[{"kind":"local","local":"onAuthChange","exported":"onAuthChange"},{"kind":"local","local":"globalOnChange","exported":"globalOnChange"},{"kind":"local","local":"globalOnEnter","exported":"globalOnEnter"},{"kind":"local","local":"routes","exported":"routes"}]}}},"options":{"filename":"imports/routes/routes.js","filenameRelative":"imports/routes/routes.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/routes/routes.js.map","sourceFileName":"imports/routes/routes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"routes"},"ignored":false,"code":"module.export({\n\tonAuthChange: function () {\n\t\treturn onAuthChange;\n\t},\n\tglobalOnChange: function () {\n\t\treturn globalOnChange;\n\t},\n\tglobalOnEnter: function () {\n\t\treturn globalOnEnter;\n\t},\n\troutes: function () {\n\t\treturn routes;\n\t}\n});\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n\tMeteor: function (v) {\n\t\tMeteor = v;\n\t}\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n\t\"default\": function (v) {\n\t\tReact = v;\n\t}\n}, 1);\nvar Router = void 0,\n    Route = void 0,\n    browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n\tRouter: function (v) {\n\t\tRouter = v;\n\t},\n\tRoute: function (v) {\n\t\tRoute = v;\n\t},\n\tbrowserHistory: function (v) {\n\t\tbrowserHistory = v;\n\t}\n}, 2);\nvar Session = void 0;\nmodule.watch(require(\"meteor/session\"), {\n\tSession: function (v) {\n\t\tSession = v;\n\t}\n}, 3);\nvar Signup = void 0;\nmodule.watch(require(\"../ui/Signup\"), {\n\t\"default\": function (v) {\n\t\tSignup = v;\n\t}\n}, 4);\nvar Dashboard = void 0;\nmodule.watch(require(\"../ui/Dashboard\"), {\n\t\"default\": function (v) {\n\t\tDashboard = v;\n\t}\n}, 5);\nvar NotFound = void 0;\nmodule.watch(require(\"../ui/NotFound\"), {\n\t\"default\": function (v) {\n\t\tNotFound = v;\n\t}\n}, 6);\nvar Login = void 0;\nmodule.watch(require(\"../ui/Login\"), {\n\t\"default\": function (v) {\n\t\tLogin = v;\n\t}\n}, 7);\nvar UserEdit = void 0;\nmodule.watch(require(\"../ui/UserEdit\"), {\n\t\"default\": function (v) {\n\t\tUserEdit = v;\n\t}\n}, 8);\n\nvar onEnterNotePage = function (nextState) {\n\t// Uses nextState object to assign selectedNoteId to Id in url, allowing note to be already selected on page enter/refresh\n\tSession.set('selectedNoteId', nextState.params.id);\n};\n\nvar onLeaveNotePage = function () {\n\t// Clear session variable so when logging back in, no auto selected note\n\tSession.set('selectedNoteId', undefined);\n};\n\nvar onAuthChange = function (isAuthenticated, currentPagePrivacy) {\n\tvar isUnauthenticatedPage = currentPagePrivacy === 'unauth';\n\tvar isAuthenticatedPage = currentPagePrivacy === 'auth';\n\t; // console.log('isAuthenticated', isAuthenticated);\n\t// logs true to browser if currently logged in, false otherwise, great for dev\n\n\tif (isUnauthenticatedPage && isAuthenticated) {\n\t\tbrowserHistory.replace('/dashboard');\n\t} else if (isAuthenticatedPage && !isAuthenticated) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\n\nvar globalOnChange = function (prevState, nextState) {\n\tglobalOnEnter(nextState);\n};\n\nvar globalOnEnter = function (nextState) {\n\tvar lastRoute = nextState.routes[nextState.routes.length - 1];\n\tSession.set('currentPagePrivacy', lastRoute.privacy); //currentPagePrivacy is set to \"privacy\" prop of whatever Route it is on\n};\n\nvar routes = React.createElement(\n\tRouter,\n\t{\n\t\thistory: browserHistory\n\t},\n\tReact.createElement(\n\t\tRoute,\n\t\t{\n\t\t\tonEnter: globalOnEnter,\n\t\t\tonChange: globalOnChange\n\t\t},\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"/\",\n\t\t\tcomponent: Login,\n\t\t\tprivacy: \"unauth\"\n\t\t}),\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"/signup\",\n\t\t\tcomponent: Signup,\n\t\t\tprivacy: \"unauth\"\n\t\t}),\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"/dashboard\",\n\t\t\tcomponent: Dashboard,\n\t\t\tprivacy: \"auth\"\n\t\t}),\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"/dashboard/:id\",\n\t\t\tcomponent: Dashboard,\n\t\t\tprivacy: \"auth\",\n\t\t\tonEnter: onEnterNotePage,\n\t\t\tonLeave: onLeaveNotePage\n\t\t}),\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"/useredit\",\n\t\t\tcomponent: UserEdit,\n\t\t\tprivacy: \"auth\"\n\t\t}),\n\t\tReact.createElement(Route, {\n\t\t\tpath: \"*\",\n\t\t\tcomponent: NotFound\n\t\t})\n\t)\n);","map":{"version":3,"sources":["imports/routes/routes.js"],"names":["module","export","onAuthChange","globalOnChange","globalOnEnter","routes","Meteor","watch","require","v","React","Router","Route","browserHistory","Session","Signup","Dashboard","NotFound","Login","UserEdit","onEnterNotePage","nextState","set","params","id","onLeaveNotePage","undefined","isAuthenticated","currentPagePrivacy","isUnauthenticatedPage","isAuthenticatedPage","replace","prevState","lastRoute","length","privacy"],"mappings":"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","file":"imports/routes/routes.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { Session } from 'meteor/session';\n\nimport Signup from '../ui/Signup';\nimport Dashboard from '../ui/Dashboard';\nimport NotFound from '../ui/NotFound';\nimport Login from '../ui/Login';\nimport UserEdit from '../ui/UserEdit';\n\nconst onEnterNotePage = (nextState) => {\n\t// Uses nextState object to assign selectedNoteId to Id in url, allowing note to be already selected on page enter/refresh\n\tSession.set('selectedNoteId', nextState.params.id);\n};\nconst onLeaveNotePage = () => {\n\t// Clear session variable so when logging back in, no auto selected note\n\tSession.set('selectedNoteId', undefined);\n};\nexport const onAuthChange = (isAuthenticated, currentPagePrivacy) => {\n\tconst isUnauthenticatedPage = currentPagePrivacy === 'unauth';\n\tconst isAuthenticatedPage = currentPagePrivacy === 'auth';;\n\t// console.log('isAuthenticated', isAuthenticated);\n\t// logs true to browser if currently logged in, false otherwise, great for dev\n\n\tif (isUnauthenticatedPage && isAuthenticated) {\n\t\tbrowserHistory.replace('/dashboard');\n\t} else if (isAuthenticatedPage && !isAuthenticated) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\n//use nextState object routes array to set privacy value of last page visited (lastRoute)\nexport const globalOnChange = (prevState, nextState) => {\n\tglobalOnEnter(nextState);\n};\nexport const globalOnEnter = (nextState) => {\n\tconst lastRoute = nextState.routes[nextState.routes.length - 1];\n\tSession.set('currentPagePrivacy', lastRoute.privacy);\n\t//currentPagePrivacy is set to \"privacy\" prop of whatever Route it is on\n}\n//adding a custom \"privacy\" prop - we are making this up to set up authorization\nexport const routes = (\n\t<Router history={browserHistory}>\n\t\t<Route onEnter={globalOnEnter} onChange={globalOnChange}>\n\t\t\t<Route path=\"/\" component={Login} privacy=\"unauth\" />\n\t\t\t<Route path=\"/signup\" component={Signup} privacy=\"unauth\" />\n\t\t\t<Route path=\"/dashboard\" component={Dashboard} privacy=\"auth\" />\n\t\t\t<Route path=\"/dashboard/:id\" component={Dashboard} privacy=\"auth\" onEnter={onEnterNotePage} onLeave={onLeaveNotePage}/>\n\t\t\t<Route path=\"/useredit\" component={UserEdit} privacy=\"auth\" />\n\t\t\t<Route path=\"*\" component={NotFound}/>\n\t\t</Route>\n\t</Router>\n);\n"]},"hash":"6cfc44469c5859ab2d1b0b6479877fc771d3d9b4"}
