{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/html-cov.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/html-cov.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/html-cov.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/html-cov.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"html-cov"},"ignored":false,"code":"/**\n * Module dependencies.\n */var JSONCov = require('./json-cov');\n\nvar readFileSync = require('fs').readFileSync;\n\nvar join = require('path').join; /**\n                                  * Expose `HTMLCov`.\n                                  */\n\nexports = module.exports = HTMLCov; /**\n                                     * Initialize a new `JsCoverage` reporter.\n                                     *\n                                     * @api public\n                                     * @param {Runner} runner\n                                     */\n\nfunction HTMLCov(runner) {\n  var jade = require('jade');\n\n  var file = join(__dirname, '/templates/coverage.jade');\n  var str = readFileSync(file, 'utf8');\n  var fn = jade.compile(str, {\n    filename: file\n  });\n  var self = this;\n  JSONCov.call(this, runner, false);\n  runner.on('end', function () {\n    process.stdout.write(fn({\n      cov: self.cov,\n      coverageClass: coverageClass\n    }));\n  });\n} /**\n   * Return coverage class for a given coverage percentage.\n   *\n   * @api private\n   * @param {number} coveragePctg\n   * @return {string}\n   */\n\nfunction coverageClass(coveragePctg) {\n  if (coveragePctg >= 75) {\n    return 'high';\n  }\n\n  if (coveragePctg >= 50) {\n    return 'medium';\n  }\n\n  if (coveragePctg >= 25) {\n    return 'low';\n  }\n\n  return 'terrible';\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/html-cov.js"],"names":["JSONCov","require","readFileSync","join","exports","module","HTMLCov","runner","jade","file","__dirname","str","fn","compile","filename","self","call","on","process","stdout","write","cov","coverageClass","coveragePctg"],"mappings":"AAAA;;GAIA,IAAIA,UAAUC,QAAQ,YAAR,CAAd;;AACA,IAAIC,eAAeD,QAAQ,IAAR,EAAcC,YAAjC;;AACA,IAAIC,OAAOF,QAAQ,MAAR,EAAgBE,IAA3B,C,CAEA;;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,OAA3B,C,CAEA;;;;;;;AAMA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAIC,OAAOP,QAAQ,MAAR,CAAX;;AACA,MAAIQ,OAAON,KAAKO,SAAL,EAAgB,0BAAhB,CAAX;AACA,MAAIC,MAAMT,aAAaO,IAAb,EAAmB,MAAnB,CAAV;AACA,MAAIG,KAAKJ,KAAKK,OAAL,CAAaF,GAAb,EAAkB;AAAEG,cAAUL;AAAZ,GAAlB,CAAT;AACA,MAAIM,OAAO,IAAX;AAEAf,UAAQgB,IAAR,CAAa,IAAb,EAAmBT,MAAnB,EAA2B,KAA3B;AAEAA,SAAOU,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BC,YAAQC,MAAR,CAAeC,KAAf,CAAqBR,GAAG;AACtBS,WAAKN,KAAKM,GADY;AAEtBC,qBAAeA;AAFO,KAAH,CAArB;AAID,GALD;AAMD,C,CAED;;;;;;;;AAOA,SAASA,aAAT,CAAuBC,YAAvB,EAAqC;AACnC,MAAIA,gBAAgB,EAApB,EAAwB;AACtB,WAAO,MAAP;AACD;;AACD,MAAIA,gBAAgB,EAApB,EAAwB;AACtB,WAAO,QAAP;AACD;;AACD,MAAIA,gBAAgB,EAApB,EAAwB;AACtB,WAAO,KAAP;AACD;;AACD,SAAO,UAAP;AACD","file":"packages/practicalmeteor:mocha/lib/reporters/html-cov.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar JSONCov = require('./json-cov');\nvar readFileSync = require('fs').readFileSync;\nvar join = require('path').join;\n\n/**\n * Expose `HTMLCov`.\n */\n\nexports = module.exports = HTMLCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction HTMLCov(runner) {\n  var jade = require('jade');\n  var file = join(__dirname, '/templates/coverage.jade');\n  var str = readFileSync(file, 'utf8');\n  var fn = jade.compile(str, { filename: file });\n  var self = this;\n\n  JSONCov.call(this, runner, false);\n\n  runner.on('end', function() {\n    process.stdout.write(fn({\n      cov: self.cov,\n      coverageClass: coverageClass\n    }));\n  });\n}\n\n/**\n * Return coverage class for a given coverage percentage.\n *\n * @api private\n * @param {number} coveragePctg\n * @return {string}\n */\nfunction coverageClass(coveragePctg) {\n  if (coveragePctg >= 75) {\n    return 'high';\n  }\n  if (coveragePctg >= 50) {\n    return 'medium';\n  }\n  if (coveragePctg >= 25) {\n    return 'low';\n  }\n  return 'terrible';\n}\n"]},"hash":"1259d19565496740329de675437886bb539add6b"}
