{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/interfaces/qunit.js","filenameRelative":"packages/practicalmeteor:mocha/lib/interfaces/qunit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/interfaces/qunit.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/interfaces/qunit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"qunit"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Suite = require('../suite');\n\nvar Test = require('../test');\n\nvar escapeRe = require('escape-string-regexp'); /**\n                                                 * QUnit-style interface:\n                                                 *\n                                                 *     suite('Array');\n                                                 *\n                                                 *     test('#length', function() {\n                                                 *       var arr = [1,2,3];\n                                                 *       ok(arr.length == 3);\n                                                 *     });\n                                                 *\n                                                 *     test('#indexOf()', function() {\n                                                 *       var arr = [1,2,3];\n                                                 *       ok(arr.indexOf(1) == 0);\n                                                 *       ok(arr.indexOf(2) == 1);\n                                                 *       ok(arr.indexOf(3) == 2);\n                                                 *     });\n                                                 *\n                                                 *     suite('String');\n                                                 *\n                                                 *     test('#length', function() {\n                                                 *       ok('foo'.length == 3);\n                                                 *     });\n                                                 *\n                                                 * @param {Suite} suite Root suite.\n                                                 */\n\nmodule.exports = function (suite) {\n  var suites = [suite];\n  suite.on('pre-require', function (context, file, mocha) {\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite); /**\n                                                                      * Describe a \"suite\" with the given `title`.\n                                                                      */\n\n    context.suite = function (title) {\n      if (suites.length > 1) {\n        suites.shift();\n      }\n\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      return suite;\n    }; /**\n        * Exclusive test-case.\n        */\n\n    context.suite.only = function (title, fn) {\n      var suite = context.suite(title, fn);\n      mocha.grep(suite.fullTitle());\n    }; /**\n        * Describe a specification or test-case\n        * with the given `title` and callback `fn`\n        * acting as a thunk.\n        */\n\n    context.test = function (title, fn) {\n      var test = new Test(title, fn);\n      test.file = file;\n      suites[0].addTest(test);\n      return test;\n    }; /**\n        * Exclusive test-case.\n        */\n\n    context.test.only = function (title, fn) {\n      var test = context.test(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n    };\n\n    context.test.skip = common.test.skip;\n    context.test.retries = common.test.retries;\n  });\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/interfaces/qunit.js"],"names":["Suite","require","Test","escapeRe","module","exports","suite","suites","on","context","file","mocha","common","before","after","beforeEach","afterEach","run","options","delay","runWithSuite","title","length","shift","create","unshift","only","fn","grep","fullTitle","test","addTest","reString","RegExp","skip","retries"],"mappings":"AAAA;;GAIA,IAAIA,QAAQC,QAAQ,UAAR,CAAZ;;AACA,IAAIC,OAAOD,QAAQ,SAAR,CAAX;;AACA,IAAIE,WAAWF,QAAQ,sBAAR,CAAf,C,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAG,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,MAAIC,SAAS,CAACD,KAAD,CAAb;AAEAA,QAAME,EAAN,CAAS,aAAT,EAAwB,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AACrD,QAAIC,SAASX,QAAQ,UAAR,EAAoBM,MAApB,EAA4BE,OAA5B,CAAb;;AAEAA,YAAQI,MAAR,GAAiBD,OAAOC,MAAxB;AACAJ,YAAQK,KAAR,GAAgBF,OAAOE,KAAvB;AACAL,YAAQM,UAAR,GAAqBH,OAAOG,UAA5B;AACAN,YAAQO,SAAR,GAAoBJ,OAAOI,SAA3B;AACAP,YAAQQ,GAAR,GAAcN,MAAMO,OAAN,CAAcC,KAAd,IAAuBP,OAAOQ,YAAP,CAAoBd,KAApB,CAArC,CAPqD,CAQrD;;;;AAIAG,YAAQH,KAAR,GAAgB,UAASe,KAAT,EAAgB;AAC9B,UAAId,OAAOe,MAAP,GAAgB,CAApB,EAAuB;AACrBf,eAAOgB,KAAP;AACD;;AACD,UAAIjB,QAAQN,MAAMwB,MAAN,CAAajB,OAAO,CAAP,CAAb,EAAwBc,KAAxB,CAAZ;AACAf,YAAMI,IAAN,GAAaA,IAAb;AACAH,aAAOkB,OAAP,CAAenB,KAAf;AACA,aAAOA,KAAP;AACD,KARD,CAZqD,CAsBrD;;;;AAIAG,YAAQH,KAAR,CAAcoB,IAAd,GAAqB,UAASL,KAAT,EAAgBM,EAAhB,EAAoB;AACvC,UAAIrB,QAAQG,QAAQH,KAAR,CAAce,KAAd,EAAqBM,EAArB,CAAZ;AACAhB,YAAMiB,IAAN,CAAWtB,MAAMuB,SAAN,EAAX;AACD,KAHD,CA1BqD,CA+BrD;;;;;;AAMApB,YAAQqB,IAAR,GAAe,UAAST,KAAT,EAAgBM,EAAhB,EAAoB;AACjC,UAAIG,OAAO,IAAI5B,IAAJ,CAASmB,KAAT,EAAgBM,EAAhB,CAAX;AACAG,WAAKpB,IAAL,GAAYA,IAAZ;AACAH,aAAO,CAAP,EAAUwB,OAAV,CAAkBD,IAAlB;AACA,aAAOA,IAAP;AACD,KALD,CArCqD,CA4CrD;;;;AAIArB,YAAQqB,IAAR,CAAaJ,IAAb,GAAoB,UAASL,KAAT,EAAgBM,EAAhB,EAAoB;AACtC,UAAIG,OAAOrB,QAAQqB,IAAR,CAAaT,KAAb,EAAoBM,EAApB,CAAX;AACA,UAAIK,WAAW,MAAM7B,SAAS2B,KAAKD,SAAL,EAAT,CAAN,GAAmC,GAAlD;AACAlB,YAAMiB,IAAN,CAAW,IAAIK,MAAJ,CAAWD,QAAX,CAAX;AACD,KAJD;;AAMAvB,YAAQqB,IAAR,CAAaI,IAAb,GAAoBtB,OAAOkB,IAAP,CAAYI,IAAhC;AACAzB,YAAQqB,IAAR,CAAaK,OAAb,GAAuBvB,OAAOkB,IAAP,CAAYK,OAAnC;AACD,GAxDD;AAyDD,CA5DD","file":"packages/practicalmeteor:mocha/lib/interfaces/qunit.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\nvar escapeRe = require('escape-string-regexp');\n\n/**\n * QUnit-style interface:\n *\n *     suite('Array');\n *\n *     test('#length', function() {\n *       var arr = [1,2,3];\n *       ok(arr.length == 3);\n *     });\n *\n *     test('#indexOf()', function() {\n *       var arr = [1,2,3];\n *       ok(arr.indexOf(1) == 0);\n *       ok(arr.indexOf(2) == 1);\n *       ok(arr.indexOf(3) == 2);\n *     });\n *\n *     suite('String');\n *\n *     test('#length', function() {\n *       ok('foo'.length == 3);\n *     });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha) {\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`.\n     */\n\n    context.suite = function(title) {\n      if (suites.length > 1) {\n        suites.shift();\n      }\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      return suite;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.suite.only = function(title, fn) {\n      var suite = context.suite(title, fn);\n      mocha.grep(suite.fullTitle());\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function(title, fn) {\n      var test = new Test(title, fn);\n      test.file = file;\n      suites[0].addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function(title, fn) {\n      var test = context.test(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n    };\n\n    context.test.skip = common.test.skip;\n    context.test.retries = common.test.retries;\n  });\n};\n"]},"hash":"a38c86999fb9815b793251e5980efcd919b449fb"}
