{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]}],"exports":{"exported":["Notes"],"specifiers":[{"kind":"local","local":"Notes","exported":"Notes"}]}}},"options":{"filename":"imports/api/notes.js","filenameRelative":"imports/api/notes.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/notes.js.map","sourceFileName":"imports/api/notes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notes"},"ignored":false,"code":"module.export({\n  Notes: function () {\n    return Notes;\n  }\n});\nvar Mongo = void 0;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar Notes = new Mongo.Collection('notes');\nMeteor.methods({\n  'notes.insert': function () {\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    return Notes.insert({\n      title: '',\n      body: '',\n      userId: this.userId,\n      updatedAt: moment().valueOf()\n    });\n  }\n});","map":{"version":3,"sources":["imports/api/notes.js"],"names":["module","export","Notes","Mongo","watch","require","v","Meteor","moment","Collection","methods","userId","Error","insert","title","body","updatedAt","valueOf"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,SAAM;AAAA,WAAIA,KAAJ;AAAA;AAAP,CAAd;AAAiC,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,YAAOG,CAAP,EAAS;AAACH,YAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,eAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,eAAJ;AAAWR,OAAOI,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,uBAASC,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAArB,CAA/B,EAAsD,CAAtD;AAIrL,IAAMJ,QAAQ,IAAIC,MAAMM,UAAV,CAAqB,OAArB,CAAd;AAEPF,OAAOG,OAAP,CAAe;AACb,gBADa,cACI;AACf,QAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,YAAM,IAAIJ,OAAOK,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAED,WAAOV,MAAMW,MAAN,CAAa;AAClBC,aAAO,EADW;AAElBC,YAAM,EAFY;AAGlBJ,cAAQ,KAAKA,MAHK;AAIlBK,iBAAWR,SAASS,OAAT;AAJO,KAAb,CAAP;AAMD;AAZY,CAAf","file":"imports/api/notes.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\n\nexport const Notes = new Mongo.Collection('notes');\n\nMeteor.methods({\n  'notes.insert'() {\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    return Notes.insert({\n      title: '',\n      body: '',\n      userId: this.userId,\n      updatedAt: moment().valueOf()\n    });\n  }\n})\n"]},"hash":"1688c30922510f9e9ce2243a2338fb7445f0c066"}
