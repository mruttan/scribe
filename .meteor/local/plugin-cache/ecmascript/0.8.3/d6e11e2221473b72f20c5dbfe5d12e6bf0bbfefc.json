{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"expect","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"expect"}]},{"source":"./notes","imported":["Notes"],"specifiers":[{"kind":"named","imported":"Notes","local":"Notes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/api/notes.test.js","filenameRelative":"imports/api/notes.test.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/api/notes.test.js.map","sourceFileName":"imports/api/notes.test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notes.test"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar expect = void 0;\nmodule.watch(require(\"expect\"), {\n  \"default\": function (v) {\n    expect = v;\n  }\n}, 1);\nvar Notes = void 0;\nmodule.watch(require(\"./notes\"), {\n  Notes: function (v) {\n    Notes = v;\n  }\n}, 2);\n\nif (Meteor.isServer) {\n  describe('notes', function () {\n    it('should insert new note', function () {\n      var userId = 'testid';\n\n      var _id = Meteor.server.method_handlers['notes.insert'].apply({\n        userId: userId\n      });\n\n      expect(Notes.findOne({\n        _id: _id,\n        userId: userId\n      })).toExist();\n    });\n    it('should not insert note if not authenticated', function () {\n      expect(function () {\n        Meteor.server.method_handlers['notes.insert']();\n      }).toThrow();\n    });\n  });\n}","map":{"version":3,"sources":["imports/api/notes.test.js"],"names":["Meteor","module","watch","require","v","expect","Notes","isServer","describe","it","userId","_id","server","method_handlers","apply","findOne","toExist","toThrow"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,eAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,uBAASC,CAAT,EAAW;AAACC,aAAOD,CAAP;AAAS;AAArB,CAA/B,EAAsD,CAAtD;AAAyD,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACG,OAAD,YAAOF,CAAP,EAAS;AAACE,YAAMF,CAAN;AAAQ;AAAlB,CAAhC,EAAoD,CAApD;;AAKxJ,IAAIJ,OAAOO,QAAX,EAAqB;AACnBC,WAAS,OAAT,EAAkB,YAAY;AAE5BC,OAAG,wBAAH,EAA6B,YAAY;AACvC,UAAMC,SAAS,QAAf;;AACA,UAAMC,MAAMX,OAAOY,MAAP,CAAcC,eAAd,CAA8B,cAA9B,EAA8CC,KAA9C,CAAoD;AAAEJ;AAAF,OAApD,CAAZ;;AAEAL,aAAOC,MAAMS,OAAN,CAAc;AAAEJ,gBAAF;AAAOD;AAAP,OAAd,CAAP,EAAuCM,OAAvC;AACD,KALD;AAOAP,OAAG,6CAAH,EAAkD,YAAY;AAC5DJ,aAAO,YAAM;AACXL,eAAOY,MAAP,CAAcC,eAAd,CAA8B,cAA9B;AACD,OAFD,EAEGI,OAFH;AAGD,KAJD;AAKD,GAdD;AAeD","file":"imports/api/notes.test.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport expect from 'expect';\n\nimport { Notes } from './notes';\n\nif (Meteor.isServer) {\n  describe('notes', function () {\n\n    it('should insert new note', function () {\n      const userId = 'testid';\n      const _id = Meteor.server.method_handlers['notes.insert'].apply({ userId });\n\n      expect(Notes.findOne({ _id, userId })).toExist();\n    });\n\n    it('should not insert note if not authenticated', function () {\n      expect(() => {\n        Meteor.server.method_handlers['notes.insert']();\n      }).toThrow();\n    });\n  });\n}\n"]},"hash":"d6e11e2221473b72f20c5dbfe5d12e6bf0bbfefc"}
