{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","filenameRelative":"packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"exports"},"ignored":false,"code":"var calls = [];\nexports.Array = {\n  before: function () {\n    calls.push('before');\n  },\n  after: function () {\n    calls.push('after');\n    calls.should.eql(['before', 'before each', 'one', 'after each', 'before each', 'two', 'after each', 'after']);\n  },\n  '#indexOf()': {\n    beforeEach: function () {\n      calls.push('before each');\n    },\n    afterEach: function () {\n      calls.push('after each');\n    },\n    'should return -1 when the value is not present': function () {\n      calls.push('one');\n      [1, 2, 3].indexOf(5).should.equal(-1);\n      [1, 2, 3].indexOf(0).should.equal(-1);\n    },\n    'should return the correct index when the value is present': function () {\n      calls.push('two');\n      [1, 2, 3].indexOf(1).should.equal(0);\n      [1, 2, 3].indexOf(2).should.equal(1);\n      [1, 2, 3].indexOf(3).should.equal(2);\n    }\n  }\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js"],"names":["calls","exports","Array","before","push","after","should","eql","beforeEach","afterEach","indexOf","equal"],"mappings":"AAAA,IAAIA,QAAQ,EAAZ;AAEAC,QAAQC,KAAR,GAAgB;AACdC,UAAQ,YAAU;AAChBH,UAAMI,IAAN,CAAW,QAAX;AACD,GAHa;AAKdC,SAAO,YAAU;AACfL,UAAMI,IAAN,CAAW,OAAX;AACAJ,UAAMM,MAAN,CAAaC,GAAb,CAAiB,CACb,QADa,EAEb,aAFa,EAGb,KAHa,EAIb,YAJa,EAKb,aALa,EAMb,KANa,EAOb,YAPa,EAQb,OARa,CAAjB;AASD,GAhBa;AAkBd,gBAAc;AACZC,gBAAY,YAAU;AACpBR,YAAMI,IAAN,CAAW,aAAX;AACD,KAHW;AAKZK,eAAW,YAAU;AACnBT,YAAMI,IAAN,CAAW,YAAX;AACD,KAPW;AASZ,sDAAkD,YAAU;AAC1DJ,YAAMI,IAAN,CAAW,KAAX;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQM,OAAR,CAAgB,CAAhB,EAAmBJ,MAAnB,CAA0BK,KAA1B,CAAgC,CAAC,CAAjC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQD,OAAR,CAAgB,CAAhB,EAAmBJ,MAAnB,CAA0BK,KAA1B,CAAgC,CAAC,CAAjC;AACD,KAbW;AAeZ,iEAA6D,YAAU;AACrEX,YAAMI,IAAN,CAAW,KAAX;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQM,OAAR,CAAgB,CAAhB,EAAmBJ,MAAnB,CAA0BK,KAA1B,CAAgC,CAAhC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQD,OAAR,CAAgB,CAAhB,EAAmBJ,MAAnB,CAA0BK,KAA1B,CAAgC,CAAhC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQD,OAAR,CAAgB,CAAhB,EAAmBJ,MAAnB,CAA0BK,KAA1B,CAAgC,CAAhC;AACD;AApBW;AAlBA,CAAhB","file":"packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js.map","sourcesContent":["var calls = [];\n\nexports.Array = {\n  before: function(){\n    calls.push('before');\n  },\n\n  after: function(){\n    calls.push('after');\n    calls.should.eql([\n        'before'\n      , 'before each'\n      , 'one'\n      , 'after each'\n      , 'before each'\n      , 'two'\n      , 'after each'\n      , 'after']);\n  },\n\n  '#indexOf()': {\n    beforeEach: function(){\n      calls.push('before each');\n    },\n\n    afterEach: function(){\n      calls.push('after each');\n    },\n\n    'should return -1 when the value is not present': function(){\n      calls.push('one');\n      [1,2,3].indexOf(5).should.equal(-1);\n      [1,2,3].indexOf(0).should.equal(-1);\n    },\n\n    'should return the correct index when the value is present': function(){\n      calls.push('two');\n      [1,2,3].indexOf(1).should.equal(0);\n      [1,2,3].indexOf(2).should.equal(1);\n      [1,2,3].indexOf(3).should.equal(2);\n    }\n  }\n};\n"]},"hash":"0d96b26e72239f6d563cd2c74b98d9c7307060e9"}
