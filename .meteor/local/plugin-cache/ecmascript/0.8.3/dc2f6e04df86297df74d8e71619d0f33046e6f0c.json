{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/ms.js","filenameRelative":"packages/practicalmeteor:mocha/lib/ms.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/ms.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/ms.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ms"},"ignored":false,"code":"/**\n * Helpers.\n */var s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25; /**\n                     * Parse or format the given `val`.\n                     *\n                     * Options:\n                     *\n                     *  - `long` verbose formatting [false]\n                     *\n                     * @api public\n                     * @param {string|number} val\n                     * @param {Object} options\n                     * @return {string|number}\n                     */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n\n  if (typeof val === 'string') {\n    return parse(val);\n  } // https://github.com/mochajs/mocha/pull/1035\n\n\n  return options['long'] ? longFormat(val) : shortFormat(val);\n}; /**\n    * Parse the given `str` and return milliseconds.\n    *\n    * @api private\n    * @param {string} str\n    * @return {number}\n    */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n\n    case 'ms':\n      return n;\n\n    default: // No default case\n  }\n} /**\n   * Short format for `ms`.\n   *\n   * @api private\n   * @param {number} ms\n   * @return {string}\n   */\n\nfunction shortFormat(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n} /**\n   * Long format for `ms`.\n   *\n   * @api private\n   * @param {number} ms\n   * @return {string}\n   */\n\nfunction longFormat(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n} /**\n   * Pluralization helper.\n   *\n   * @api private\n   * @param {number} ms\n   * @param {number} n\n   * @param {string} name\n   */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/ms.js"],"names":["s","m","h","d","y","module","exports","val","options","parse","longFormat","shortFormat","str","match","exec","n","parseFloat","type","toLowerCase","ms","Math","round","plural","name","floor","ceil"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/ms.js.map","sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @api public\n * @param {string|number} val\n * @param {Object} options\n * @return {string|number}\n */\nmodule.exports = function(val, options) {\n  options = options || {};\n  if (typeof val === 'string') {\n    return parse(val);\n  }\n  // https://github.com/mochajs/mocha/pull/1035\n  return options['long'] ? longFormat(val) : shortFormat(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @api private\n * @param {string} str\n * @return {number}\n */\nfunction parse(str) {\n  var match = (/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i).exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n    default:\n      // No default case\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction shortFormat(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction longFormat(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n *\n * @api private\n * @param {number} ms\n * @param {number} n\n * @param {string} name\n */\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"]},"hash":"dc2f6e04df86297df74d8e71619d0f33046e6f0c"}
