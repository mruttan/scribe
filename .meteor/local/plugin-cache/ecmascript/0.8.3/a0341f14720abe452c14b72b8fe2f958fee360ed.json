{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/interfaces/common.js","filenameRelative":"packages/practicalmeteor:mocha/lib/interfaces/common.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/interfaces/common.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/interfaces/common.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"common"},"ignored":false,"code":"'use strict'; /**\n               * Functions common to more than one interface.\n               *\n               * @param {Suite[]} suites\n               * @param {Context} context\n               * @return {Object} An object containing common functions.\n               */\n\nmodule.exports = function (suites, context) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root wuite.\n     * @return {Function} A function which runs the root suite\n     */runWithSuite: function () {\n      function runWithSuite(suite) {\n        return function () {\n          function run() {\n            suite.run();\n          }\n\n          return run;\n        }();\n      }\n\n      return runWithSuite;\n    }(),\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n    test: {\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */skip: function (title) {\n        context.test(title);\n      },\n      /**\n       * Number of retry attempts\n       *\n       * @param {string} n\n       */retries: function (n) {\n        context.retries(n);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/interfaces/common.js"],"names":["module","exports","suites","context","runWithSuite","suite","run","before","name","fn","beforeAll","after","afterAll","beforeEach","afterEach","test","skip","title","retries","n"],"mappings":"AAAA,a,CAEA;;;;;;;;AAOAA,OAAOC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACzC,SAAO;AACL;;;;;;OAOAC;AAAc,eAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzC;AAAO,mBAASC,GAAT,GAAe;AACpBD,kBAAMC,GAAN;AACD;;AAFD,iBAAgBA,GAAhB;AAAA;AAGD;;AAJD,aAAuBF,YAAvB;AAAA,OARK;AAcL;;;;;OAMAG,QAAQ,UAASC,IAAT,EAAeC,EAAf,EAAmB;AACzBP,aAAO,CAAP,EAAUQ,SAAV,CAAoBF,IAApB,EAA0BC,EAA1B;AACD,KAtBI;AAwBL;;;;;OAMAE,OAAO,UAASH,IAAT,EAAeC,EAAf,EAAmB;AACxBP,aAAO,CAAP,EAAUU,QAAV,CAAmBJ,IAAnB,EAAyBC,EAAzB;AACD,KAhCI;AAkCL;;;;;OAMAI,YAAY,UAASL,IAAT,EAAeC,EAAf,EAAmB;AAC7BP,aAAO,CAAP,EAAUW,UAAV,CAAqBL,IAArB,EAA2BC,EAA3B;AACD,KA1CI;AA4CL;;;;;OAMAK,WAAW,UAASN,IAAT,EAAeC,EAAf,EAAmB;AAC5BP,aAAO,CAAP,EAAUY,SAAV,CAAoBN,IAApB,EAA0BC,EAA1B;AACD,KApDI;AAsDLM,UAAM;AACJ;;;;SAKAC,MAAM,UAASC,KAAT,EAAgB;AACpBd,gBAAQY,IAAR,CAAaE,KAAb;AACD,OARG;AAUJ;;;;SAKAC,SAAS,UAASC,CAAT,EAAY;AACnBhB,gBAAQe,OAAR,CAAgBC,CAAhB;AACD;AAjBG;AAtDD,GAAP;AA0ED,CA3ED","file":"packages/practicalmeteor:mocha/lib/interfaces/common.js.map","sourcesContent":["'use strict';\n\n/**\n * Functions common to more than one interface.\n *\n * @param {Suite[]} suites\n * @param {Context} context\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function(suites, context) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root wuite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function(name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function(name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function(name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function(name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    test: {\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function(title) {\n        context.test(title);\n      },\n\n      /**\n       * Number of retry attempts\n       *\n       * @param {string} n\n       */\n      retries: function(n) {\n        context.retries(n);\n      }\n    }\n  };\n};\n"]},"hash":"a0341f14720abe452c14b72b8fe2f958fee360ed"}
