{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/json-stream.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/json-stream.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/json-stream.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/json-stream.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"json-stream"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Base = require('./base'); /**\n                                  * Expose `List`.\n                                  */\n\nexports = module.exports = List; /**\n                                  * Initialize a new `List` test reporter.\n                                  *\n                                  * @api public\n                                  * @param {Runner} runner\n                                  */\n\nfunction List(runner) {\n  Base.call(this, runner);\n  var self = this;\n  var total = runner.total;\n  runner.on('start', function () {\n    console.log(JSON.stringify(['start', {\n      total: total\n    }]));\n  });\n  runner.on('pass', function (test) {\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n  runner.on('fail', function (test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    console.log(JSON.stringify(['fail', test]));\n  });\n  runner.on('end', function () {\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n} /**\n   * Return a plain-object representation of `test`\n   * free of cyclic properties etc.\n   *\n   * @api private\n   * @param {Object} test\n   * @return {Object}\n   */\n\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry()\n  };\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/json-stream.js"],"names":["Base","require","exports","module","List","runner","call","self","total","on","console","log","JSON","stringify","test","clean","err","message","stack","process","stdout","write","stats","title","fullTitle","duration","currentRetry"],"mappings":"AAAA;;GAIA,IAAIA,OAAOC,QAAQ,QAAR,CAAX,C,CAEA;;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,IAA3B,C,CAEA;;;;;;;AAMA,SAASA,IAAT,CAAcC,MAAd,EAAsB;AACpBL,OAAKM,IAAL,CAAU,IAAV,EAAgBD,MAAhB;AAEA,MAAIE,OAAO,IAAX;AACA,MAAIC,QAAQH,OAAOG,KAAnB;AAEAH,SAAOI,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BC,YAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAe,CAAC,OAAD,EAAU;AAAEL,aAAOA;AAAT,KAAV,CAAf,CAAZ;AACD,GAFD;AAIAH,SAAOI,EAAP,CAAU,MAAV,EAAkB,UAASK,IAAT,EAAe;AAC/BJ,YAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAe,CAAC,MAAD,EAASE,MAAMD,IAAN,CAAT,CAAf,CAAZ;AACD,GAFD;AAIAT,SAAOI,EAAP,CAAU,MAAV,EAAkB,UAASK,IAAT,EAAeE,GAAf,EAAoB;AACpCF,WAAOC,MAAMD,IAAN,CAAP;AACAA,SAAKE,GAAL,GAAWA,IAAIC,OAAf;AACAH,SAAKI,KAAL,GAAaF,IAAIE,KAAJ,IAAa,IAA1B;AACAR,YAAQC,GAAR,CAAYC,KAAKC,SAAL,CAAe,CAAC,MAAD,EAASC,IAAT,CAAf,CAAZ;AACD,GALD;AAOAT,SAAOI,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BU,YAAQC,MAAR,CAAeC,KAAf,CAAqBT,KAAKC,SAAL,CAAe,CAAC,KAAD,EAAQN,KAAKe,KAAb,CAAf,CAArB;AACD,GAFD;AAGD,C,CAED;;;;;;;;;AAQA,SAASP,KAAT,CAAeD,IAAf,EAAqB;AACnB,SAAO;AACLS,WAAOT,KAAKS,KADP;AAELC,eAAWV,KAAKU,SAAL,EAFN;AAGLC,cAAUX,KAAKW,QAHV;AAILC,kBAAcZ,KAAKY,YAAL;AAJT,GAAP;AAMD","file":"packages/practicalmeteor:mocha/lib/reporters/json-stream.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var total = runner.total;\n\n  runner.on('start', function() {\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function(test) {\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function(test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    console.log(JSON.stringify(['fail', test]));\n  });\n\n  runner.on('end', function() {\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry()\n  };\n}\n"]},"hash":"ff357808dcb6394aab3c3791cb2c80ec41e5e4f0"}
