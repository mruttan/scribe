{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/context.js","filenameRelative":"packages/practicalmeteor:mocha/lib/context.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/context.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/context.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"context"},"ignored":false,"code":"/**\n * Expose `Context`.\n */module.exports = Context; /**\n                              * Initialize a new `Context`.\n                              *\n                              * @api private\n                              */\n\nfunction Context() {} /**\n                       * Set or get the context `Runnable` to `runnable`.\n                       *\n                       * @api private\n                       * @param {Runnable} runnable\n                       * @return {Context}\n                       */\n\nContext.prototype.runnable = function (runnable) {\n  if (!arguments.length) {\n    return this._runnable;\n  }\n\n  this.test = this._runnable = runnable;\n  return this;\n}; /**\n    * Set test timeout `ms`.\n    *\n    * @api private\n    * @param {number} ms\n    * @return {Context} self\n    */\n\nContext.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this.runnable().timeout();\n  }\n\n  this.runnable().timeout(ms);\n  return this;\n}; /**\n    * Set test timeout `enabled`.\n    *\n    * @api private\n    * @param {boolean} enabled\n    * @return {Context} self\n    */\n\nContext.prototype.enableTimeouts = function (enabled) {\n  this.runnable().enableTimeouts(enabled);\n  return this;\n}; /**\n    * Set test slowness threshold `ms`.\n    *\n    * @api private\n    * @param {number} ms\n    * @return {Context} self\n    */\n\nContext.prototype.slow = function (ms) {\n  this.runnable().slow(ms);\n  return this;\n}; /**\n    * Mark a test as skipped.\n    *\n    * @api private\n    * @return {Context} self\n    */\n\nContext.prototype.skip = function () {\n  this.runnable().skip();\n  return this;\n}; /**\n    * Allow a number of retries on failed tests\n    *\n    * @api private\n    * @param {number} n\n    * @return {Context} self\n    */\n\nContext.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this.runnable().retries();\n  }\n\n  this.runnable().retries(n);\n  return this;\n}; /**\n    * Inspect the context void of `._runnable`.\n    *\n    * @api private\n    * @return {string}\n    */\n\nContext.prototype.inspect = function () {\n  return JSON.stringify(this, function (key, val) {\n    return key === 'runnable' || key === 'test' ? undefined : val;\n  }, 2);\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/context.js"],"names":["module","exports","Context","prototype","runnable","arguments","length","_runnable","test","timeout","ms","enableTimeouts","enabled","slow","skip","retries","n","inspect","JSON","stringify","key","val","undefined"],"mappings":"AAAA;;GAIAA,OAAOC,OAAP,GAAiBC,OAAjB,C,CAEA;;;;;;AAKA,SAASA,OAAT,GAAmB,CAAE,C,CAErB;;;;;;;;AAOAA,QAAQC,SAAR,CAAkBC,QAAlB,GAA6B,UAASA,QAAT,EAAmB;AAC9C,MAAI,CAACC,UAAUC,MAAf,EAAuB;AACrB,WAAO,KAAKC,SAAZ;AACD;;AACD,OAAKC,IAAL,GAAY,KAAKD,SAAL,GAAiBH,QAA7B;AACA,SAAO,IAAP;AACD,CAND,C,CAQA;;;;;;;;AAOAF,QAAQC,SAAR,CAAkBM,OAAlB,GAA4B,UAASC,EAAT,EAAa;AACvC,MAAI,CAACL,UAAUC,MAAf,EAAuB;AACrB,WAAO,KAAKF,QAAL,GAAgBK,OAAhB,EAAP;AACD;;AACD,OAAKL,QAAL,GAAgBK,OAAhB,CAAwBC,EAAxB;AACA,SAAO,IAAP;AACD,CAND,C,CAQA;;;;;;;;AAOAR,QAAQC,SAAR,CAAkBQ,cAAlB,GAAmC,UAASC,OAAT,EAAkB;AACnD,OAAKR,QAAL,GAAgBO,cAAhB,CAA+BC,OAA/B;AACA,SAAO,IAAP;AACD,CAHD,C,CAKA;;;;;;;;AAOAV,QAAQC,SAAR,CAAkBU,IAAlB,GAAyB,UAASH,EAAT,EAAa;AACpC,OAAKN,QAAL,GAAgBS,IAAhB,CAAqBH,EAArB;AACA,SAAO,IAAP;AACD,CAHD,C,CAKA;;;;;;;AAMAR,QAAQC,SAAR,CAAkBW,IAAlB,GAAyB,YAAW;AAClC,OAAKV,QAAL,GAAgBU,IAAhB;AACA,SAAO,IAAP;AACD,CAHD,C,CAKA;;;;;;;;AAOAZ,QAAQC,SAAR,CAAkBY,OAAlB,GAA4B,UAASC,CAAT,EAAY;AACtC,MAAI,CAACX,UAAUC,MAAf,EAAuB;AACrB,WAAO,KAAKF,QAAL,GAAgBW,OAAhB,EAAP;AACD;;AACD,OAAKX,QAAL,GAAgBW,OAAhB,CAAwBC,CAAxB;AACA,SAAO,IAAP;AACD,CAND,C,CAQA;;;;;;;AAMAd,QAAQC,SAAR,CAAkBc,OAAlB,GAA4B,YAAW;AACrC,SAAOC,KAAKC,SAAL,CAAe,IAAf,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC7C,WAAOD,QAAQ,UAAR,IAAsBA,QAAQ,MAA9B,GAAuCE,SAAvC,GAAmDD,GAA1D;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAJD","file":"packages/practicalmeteor:mocha/lib/context.js.map","sourcesContent":["/**\n * Expose `Context`.\n */\n\nmodule.exports = Context;\n\n/**\n * Initialize a new `Context`.\n *\n * @api private\n */\nfunction Context() {}\n\n/**\n * Set or get the context `Runnable` to `runnable`.\n *\n * @api private\n * @param {Runnable} runnable\n * @return {Context}\n */\nContext.prototype.runnable = function(runnable) {\n  if (!arguments.length) {\n    return this._runnable;\n  }\n  this.test = this._runnable = runnable;\n  return this;\n};\n\n/**\n * Set test timeout `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this.runnable().timeout();\n  }\n  this.runnable().timeout(ms);\n  return this;\n};\n\n/**\n * Set test timeout `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Context} self\n */\nContext.prototype.enableTimeouts = function(enabled) {\n  this.runnable().enableTimeouts(enabled);\n  return this;\n};\n\n/**\n * Set test slowness threshold `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {Context} self\n */\nContext.prototype.slow = function(ms) {\n  this.runnable().slow(ms);\n  return this;\n};\n\n/**\n * Mark a test as skipped.\n *\n * @api private\n * @return {Context} self\n */\nContext.prototype.skip = function() {\n  this.runnable().skip();\n  return this;\n};\n\n/**\n * Allow a number of retries on failed tests\n *\n * @api private\n * @param {number} n\n * @return {Context} self\n */\nContext.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this.runnable().retries();\n  }\n  this.runnable().retries(n);\n  return this;\n};\n\n/**\n * Inspect the context void of `._runnable`.\n *\n * @api private\n * @return {string}\n */\nContext.prototype.inspect = function() {\n  return JSON.stringify(this, function(key, val) {\n    return key === 'runnable' || key === 'test' ? undefined : val;\n  }, 2);\n};\n"]},"hash":"7bb823adda31c6a140db8704e2a7ded837b2f2d4"}
