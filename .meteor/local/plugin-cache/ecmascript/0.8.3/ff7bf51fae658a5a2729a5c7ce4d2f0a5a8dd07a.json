{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/acceptance/throw.js","filenameRelative":"packages/practicalmeteor:mocha/test/acceptance/throw.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/acceptance/throw.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/acceptance/throw.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"throw"},"ignored":false,"code":"var mocha = require('../../'),\n    Suite = mocha.Suite,\n    Runner = mocha.Runner,\n    Test = mocha.Test;\n\ndescribe('a test that throws', function () {\n  var suite, runner;\n  beforeEach(function () {\n    suite = new Suite(null, 'root');\n    runner = new Runner(suite);\n  });\n  this.timeout(50);\n  describe('undefined', function () {\n    it('should not pass if throwing sync and test is sync', function (done) {\n      var test = new Test('im sync and throw undefined sync', function () {\n        throw undefined;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n    it('should not pass if throwing sync and test is async', function (done) {\n      var test = new Test('im async and throw undefined sync', function (done2) {\n        throw undefined;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n    it('should not pass if throwing async and test is async', function (done) {\n      var test = new Test('im async and throw undefined async', function (done2) {\n        process.nexTick(function () {\n          throw undefined;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n  });\n  describe('null', function () {\n    it('should not pass if throwing sync and test is sync', function (done) {\n      var test = new Test('im sync and throw null sync', function () {\n        throw null;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n    it('should not pass if throwing sync and test is async', function (done) {\n      var test = new Test('im async and throw null sync', function (done2) {\n        throw null;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n    it('should not pass if throwing async and test is async', function (done) {\n      var test = new Test('im async and throw null async', function (done2) {\n        process.nexTick(function () {\n          throw null;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/acceptance/throw.js"],"names":["mocha","require","Suite","Runner","Test","describe","suite","runner","beforeEach","timeout","it","done","test","undefined","addTest","on","failures","should","equal","state","run","done2","process","nexTick"],"mappings":"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","file":"packages/practicalmeteor:mocha/test/acceptance/throw.js.map","sourcesContent":["var mocha = require('../../')\n  , Suite = mocha.Suite\n  , Runner = mocha.Runner\n  , Test = mocha.Test;\n\ndescribe('a test that throws', function () {\n  var suite, runner;\n\n  beforeEach(function(){\n    suite = new Suite(null, 'root');\n    runner = new Runner(suite);\n  })\n\n  this.timeout(50);\n\n  describe('undefined', function (){\n    it('should not pass if throwing sync and test is sync', function(done) {\n      var test = new Test('im sync and throw undefined sync', function(){\n        throw undefined;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n\n    it('should not pass if throwing sync and test is async', function(done){\n      var test = new Test('im async and throw undefined sync', function(done2){\n        throw undefined;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function(done){\n      var test = new Test('im async and throw undefined async', function(done2){\n        process.nexTick(function(){\n          throw undefined;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n  })\n\n  describe('null', function (){\n    it('should not pass if throwing sync and test is sync', function(done) {\n      var test = new Test('im sync and throw null sync', function(){\n        throw null;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n\n    it('should not pass if throwing sync and test is async', function(done){\n      var test = new Test('im async and throw null sync', function(done2){\n        throw null;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function(done){\n      var test = new Test('im async and throw null async', function(done2){\n        process.nexTick(function(){\n          throw null;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n  })\n})"]},"hash":"ff7bf51fae658a5a2729a5c7ce4d2f0a5a8dd07a"}
