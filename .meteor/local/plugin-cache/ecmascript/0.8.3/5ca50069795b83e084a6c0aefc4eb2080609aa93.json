{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"react-router","imported":["browserHistory"],"specifiers":[{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"../imports/routes/routes","imported":["routes","onAuthChange"],"specifiers":[{"kind":"named","imported":"routes","local":"routes"},{"kind":"named","imported":"onAuthChange","local":"onAuthChange"}]},{"source":"../imports/startup/simple-schema-configuration","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/main.js","filenameRelative":"client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/main.js.map","sourceFileName":"client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar ReactDOM = void 0;\nmodule.watch(require(\"react-dom\"), {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Tracker = void 0;\nmodule.watch(require(\"meteor/tracker\"), {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar Session = void 0;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 3);\nvar browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n  browserHistory: function (v) {\n    browserHistory = v;\n  }\n}, 4);\nvar routes = void 0,\n    onAuthChange = void 0;\nmodule.watch(require(\"../imports/routes/routes\"), {\n  routes: function (v) {\n    routes = v;\n  },\n  onAuthChange: function (v) {\n    onAuthChange = v;\n  }\n}, 5);\nmodule.watch(require(\"../imports/startup/simple-schema-configuration\"));\nTracker.autorun(function () {\n  var isAuthenticated = !!Meteor.userId();\n  var currentPagePrivacy = Session.get('currentPagePrivacy');\n  onAuthChange(isAuthenticated, currentPagePrivacy);\n});\nTracker.autorun(function () {\n  var selectedNoteId = Session.get('selectedNoteId'); // code to set variable in NoteListItem\n\n  Session.set('isNavOpen', false); // close the navbar when noteId is updated (new note was selected)\n\n  if (selectedNoteId) {\n    browserHistory.replace(\"/dashboard/\" + selectedNoteId); // using `` to inject\n  }\n});\nTracker.autorun(function () {\n  var isNavOpen = Session.get('isNavOpen'); // Although image is toggled, the class is not applied until this code is run\n  // Able to manipulate with css by having a class assigned to body\n\n  document.body.classList.toggle('is-nav-open', isNavOpen);\n});\nMeteor.startup(function () {\n  Session.set('selectedNoteId', undefined);\n  Session.set('isNavOpen', false);\n  ReactDOM.render(routes, document.getElementById('app'));\n});","map":{"version":3,"sources":["client/main.js"],"names":["React","module","watch","require","v","ReactDOM","Tracker","Session","browserHistory","routes","onAuthChange","autorun","isAuthenticated","Meteor","userId","currentPagePrivacy","get","selectedNoteId","set","replace","isNavOpen","document","body","classList","toggle","startup","undefined","render","getElementById"],"mappings":"AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,iBAAJ;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA,uBAASC,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;AAAvB,CAAlC,EAA2D,CAA3D;AAA8D,IAAIE,gBAAJ;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACG,SAAD,YAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIG,gBAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACI,SAAD,YAASH,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAII,uBAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACK,gBAAD,YAAgBJ,CAAhB,EAAkB;AAACI,qBAAeJ,CAAf;AAAiB;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIK,eAAJ;AAAA,IAAWC,qBAAX;AAAwBT,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACM,QAAD,YAAQL,CAAR,EAAU;AAACK,aAAOL,CAAP;AAAS,GAApB;AAAqBM,cAArB,YAAkCN,CAAlC,EAAoC;AAACM,mBAAaN,CAAb;AAAe;AAApD,CAAjD,EAAuG,CAAvG;AAA0GH,OAAOC,KAAP,CAAaC,QAAQ,gDAAR,CAAb;AAS3gBG,QAAQK,OAAR,CAAgB,YAAM;AACpB,MAAMC,kBAAkB,CAAC,CAACC,OAAOC,MAAP,EAA1B;AACA,MAAMC,qBAAqBR,QAAQS,GAAR,CAAY,oBAAZ,CAA3B;AAEAN,eAAaE,eAAb,EAA8BG,kBAA9B;AACD,CALD;AAOAT,QAAQK,OAAR,CAAgB,YAAM;AACpB,MAAMM,iBAAiBV,QAAQS,GAAR,CAAY,gBAAZ,CAAvB,CADoB,CACkC;;AACtDT,UAAQW,GAAR,CAAY,WAAZ,EAAyB,KAAzB,EAFoB,CAEa;;AAEjC,MAAID,cAAJ,EAAoB;AAClBT,mBAAeW,OAAf,iBAAqCF,cAArC,EADkB,CACsC;AACzD;AACF,CAPD;AASAX,QAAQK,OAAR,CAAgB,YAAM;AACrB,MAAMS,YAAYb,QAAQS,GAAR,CAAY,WAAZ,CAAlB,CADqB,CAErB;AACA;;AACAK,WAASC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,aAA/B,EAA8CJ,SAA9C;AACA,CALD;AAOAP,OAAOY,OAAP,CAAe,YAAM;AACnBlB,UAAQW,GAAR,CAAY,gBAAZ,EAA8BQ,SAA9B;AACAnB,UAAQW,GAAR,CAAY,WAAZ,EAAyB,KAAzB;AACAb,WAASsB,MAAT,CAAgBlB,MAAhB,EAAwBY,SAASO,cAAT,CAAwB,KAAxB,CAAxB;AACD,CAJD","file":"client/main.js.map","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Tracker } from 'meteor/tracker';\nimport { Session } from 'meteor/session';\nimport { browserHistory } from 'react-router';\n\nimport { routes, onAuthChange } from '../imports/routes/routes';\nimport '../imports/startup/simple-schema-configuration';\n\nTracker.autorun(() => {\n  const isAuthenticated = !!Meteor.userId();\n  const currentPagePrivacy = Session.get('currentPagePrivacy');\n\n  onAuthChange(isAuthenticated, currentPagePrivacy);\n});\n\nTracker.autorun(() => {\n  const selectedNoteId = Session.get('selectedNoteId'); // code to set variable in NoteListItem\n  Session.set('isNavOpen', false); // close the navbar when noteId is updated (new note was selected)\n\n  if (selectedNoteId) {\n    browserHistory.replace(`/dashboard/${selectedNoteId}`); // using `` to inject\n  }\n});\n\nTracker.autorun(() => {\n\tconst isNavOpen = Session.get('isNavOpen');\n\t// Although image is toggled, the class is not applied until this code is run\n\t// Able to manipulate with css by having a class assigned to body\n\tdocument.body.classList.toggle('is-nav-open', isNavOpen);\n});\n\nMeteor.startup(() => {\n  Session.set('selectedNoteId', undefined);\n  Session.set('isNavOpen', false);\n  ReactDOM.render(routes, document.getElementById('app'));\n});\n"]},"hash":"5ca50069795b83e084a6c0aefc4eb2080609aa93"}
