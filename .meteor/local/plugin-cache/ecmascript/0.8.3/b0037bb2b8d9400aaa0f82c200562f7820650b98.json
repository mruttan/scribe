{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/mocha.js","filenameRelative":"packages/practicalmeteor:mocha/lib/mocha.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/mocha.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/mocha.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"mocha"},"ignored":false,"code":"/*!\n * mocha\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */ /**\n     * Module dependencies.\n     */var escapeRe = require('escape-string-regexp');\n\nvar path = require('path');\n\nvar reporters = require('./reporters');\n\nvar utils = require('./utils'); /**\n                                 * Expose `Mocha`.\n                                 */\n\nexports = module.exports = Mocha; /**\n                                   * To require local UIs and reporters when running in node.\n                                   */\n\nif (!process.browser) {\n  var cwd = process.cwd();\n  module.paths.push(cwd, path.join(cwd, 'node_modules'));\n} /**\n   * Expose internals.\n   */\n\nexports.utils = utils;\nexports.interfaces = require('./interfaces');\nexports.reporters = reporters;\nexports.Runnable = require('./runnable');\nexports.Context = require('./context');\nexports.Runner = require('./runner');\nexports.Suite = require('./suite');\nexports.Hook = require('./hook');\nexports.Test = require('./test'); /**\n                                   * Return image `name` path.\n                                   *\n                                   * @api private\n                                   * @param {string} name\n                                   * @return {string}\n                                   */\n\nfunction image(name) {\n  return path.join(__dirname, '../images', name + '.png');\n} /**\n   * Set up mocha with `options`.\n   *\n   * Options:\n   *\n   *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n   *   - `reporter` reporter instance, defaults to `mocha.reporters.spec`\n   *   - `globals` array of accepted globals\n   *   - `timeout` timeout in milliseconds\n   *   - `retries` number of times to retry failed tests\n   *   - `bail` bail on the first test failure\n   *   - `slow` milliseconds to wait before considering a test slow\n   *   - `ignoreLeaks` ignore global leaks\n   *   - `fullTrace` display the full stack-trace on failing\n   *   - `grep` string or regexp to filter tests with\n   *\n   * @param {Object} options\n   * @api public\n   */\n\nfunction Mocha(options) {\n  options = options || {};\n  this.files = [];\n  this.options = options;\n\n  if (options.grep) {\n    this.grep(new RegExp(options.grep));\n  }\n\n  if (options.fgrep) {\n    this.grep(options.fgrep);\n  }\n\n  this.suite = new exports.Suite('', new exports.Context());\n  this.ui(options.ui);\n  this.bail(options.bail);\n  this.reporter(options.reporter, options.reporterOptions);\n\n  if (typeof options.timeout !== 'undefined' && options.timeout !== null) {\n    this.timeout(options.timeout);\n  }\n\n  if (typeof options.retries !== 'undefined' && options.retries !== null) {\n    this.retries(options.retries);\n  }\n\n  this.useColors(options.useColors);\n\n  if (options.enableTimeouts !== null) {\n    this.enableTimeouts(options.enableTimeouts);\n  }\n\n  if (options.slow) {\n    this.slow(options.slow);\n  }\n\n  this.suite.on('pre-require', function (context) {\n    exports.afterEach = context.afterEach || context.teardown;\n    exports.after = context.after || context.suiteTeardown;\n    exports.beforeEach = context.beforeEach || context.setup;\n    exports.before = context.before || context.suiteSetup;\n    exports.describe = context.describe || context.suite;\n    exports.it = context.it || context.test;\n    exports.setup = context.setup || context.beforeEach;\n    exports.suiteSetup = context.suiteSetup || context.before;\n    exports.suiteTeardown = context.suiteTeardown || context.after;\n    exports.suite = context.suite || context.describe;\n    exports.teardown = context.teardown || context.afterEach;\n    exports.test = context.test || context.it;\n    exports.run = context.run;\n  });\n} /**\n   * Enable or disable bailing on the first failure.\n   *\n   * @api public\n   * @param {boolean} [bail]\n   */\n\nMocha.prototype.bail = function (bail) {\n  if (!arguments.length) {\n    bail = true;\n  }\n\n  this.suite.bail(bail);\n  return this;\n}; /**\n    * Add test `file`.\n    *\n    * @api public\n    * @param {string} file\n    */\n\nMocha.prototype.addFile = function (file) {\n  this.files.push(file);\n  return this;\n}; /**\n    * Set reporter to `reporter`, defaults to \"spec\".\n    *\n    * @param {String|Function} reporter name or constructor\n    * @param {Object} reporterOptions optional options\n    * @api public\n    * @param {string|Function} reporter name or constructor\n    * @param {Object} reporterOptions optional options\n    */\n\nMocha.prototype.reporter = function (reporter, reporterOptions) {\n  if (typeof reporter === 'function') {\n    this._reporter = reporter;\n  } else {\n    reporter = reporter || 'spec';\n\n    var _reporter; // Try to load a built-in reporter.\n\n\n    if (reporters[reporter]) {\n      _reporter = reporters[reporter];\n    } // Try to load reporters from process.cwd() and node_modules\n\n\n    if (!_reporter) {\n      try {\n        _reporter = require(reporter);\n      } catch (err) {\n        err.message.indexOf('Cannot find module') !== -1 ? console.warn('\"' + reporter + '\" reporter not found') : console.warn('\"' + reporter + '\" reporter blew up with error:\\n' + err.stack);\n      }\n    }\n\n    if (!_reporter && reporter === 'teamcity') {\n      console.warn('The Teamcity reporter was moved to a package named ' + 'mocha-teamcity-reporter ' + '(https://npmjs.org/package/mocha-teamcity-reporter).');\n    }\n\n    if (!_reporter) {\n      throw new Error('invalid reporter \"' + reporter + '\"');\n    }\n\n    this._reporter = _reporter;\n  }\n\n  this.options.reporterOptions = reporterOptions;\n  return this;\n}; /**\n    * Set test UI `name`, defaults to \"bdd\".\n    *\n    * @api public\n    * @param {string} bdd\n    */\n\nMocha.prototype.ui = function (name) {\n  name = name || 'bdd';\n  this._ui = exports.interfaces[name];\n\n  if (!this._ui) {\n    try {\n      this._ui = require(name);\n    } catch (err) {\n      throw new Error('invalid interface \"' + name + '\"');\n    }\n  }\n\n  this._ui = this._ui(this.suite);\n  return this;\n}; /**\n    * Load registered files.\n    *\n    * @api private\n    */\n\nMocha.prototype.loadFiles = function (fn) {\n  var self = this;\n  var suite = this.suite;\n  this.files.forEach(function (file) {\n    file = path.resolve(file);\n    suite.emit('pre-require', global, file, self);\n    suite.emit('require', require(file), file, self);\n    suite.emit('post-require', global, file, self);\n  });\n  fn && fn();\n}; /**\n    * Enable growl support.\n    *\n    * @api private\n    */\n\nMocha.prototype._growl = function (runner, reporter) {\n  var notify = require('growl');\n\n  runner.on('end', function () {\n    var stats = reporter.stats;\n\n    if (stats.failures) {\n      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n      notify(msg, {\n        name: 'mocha',\n        title: 'Failed',\n        image: image('error')\n      });\n    } else {\n      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n        name: 'mocha',\n        title: 'Passed',\n        image: image('ok')\n      });\n    }\n  });\n}; /**\n    * Add regexp to grep, if `re` is a string it is escaped.\n    *\n    * @param {RegExp|String} re\n    * @return {Mocha}\n    * @api public\n    * @param {RegExp|string} re\n    * @return {Mocha}\n    */\n\nMocha.prototype.grep = function (re) {\n  this.options.grep = typeof re === 'string' ? new RegExp(escapeRe(re)) : re;\n  return this;\n}; /**\n    * Invert `.grep()` matches.\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.invert = function () {\n  this.options.invert = true;\n  return this;\n}; /**\n    * Ignore global leaks.\n    *\n    * @param {Boolean} ignore\n    * @return {Mocha}\n    * @api public\n    * @param {boolean} ignore\n    * @return {Mocha}\n    */\n\nMocha.prototype.ignoreLeaks = function (ignore) {\n  this.options.ignoreLeaks = Boolean(ignore);\n  return this;\n}; /**\n    * Enable global leak checking.\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.checkLeaks = function () {\n  this.options.ignoreLeaks = false;\n  return this;\n}; /**\n    * Display long stack-trace on failing\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.fullTrace = function () {\n  this.options.fullStackTrace = true;\n  return this;\n}; /**\n    * Enable growl support.\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.growl = function () {\n  this.options.growl = true;\n  return this;\n}; /**\n    * Ignore `globals` array or string.\n    *\n    * @param {Array|String} globals\n    * @return {Mocha}\n    * @api public\n    * @param {Array|string} globals\n    * @return {Mocha}\n    */\n\nMocha.prototype.globals = function (globals) {\n  this.options.globals = (this.options.globals || []).concat(globals);\n  return this;\n}; /**\n    * Emit color output.\n    *\n    * @param {Boolean} colors\n    * @return {Mocha}\n    * @api public\n    * @param {boolean} colors\n    * @return {Mocha}\n    */\n\nMocha.prototype.useColors = function (colors) {\n  if (colors !== undefined) {\n    this.options.useColors = colors;\n  }\n\n  return this;\n}; /**\n    * Use inline diffs rather than +/-.\n    *\n    * @param {Boolean} inlineDiffs\n    * @return {Mocha}\n    * @api public\n    * @param {boolean} inlineDiffs\n    * @return {Mocha}\n    */\n\nMocha.prototype.useInlineDiffs = function (inlineDiffs) {\n  this.options.useInlineDiffs = inlineDiffs !== undefined && inlineDiffs;\n  return this;\n}; /**\n    * Set the timeout in milliseconds.\n    *\n    * @param {Number} timeout\n    * @return {Mocha}\n    * @api public\n    * @param {number} timeout\n    * @return {Mocha}\n    */\n\nMocha.prototype.timeout = function (timeout) {\n  this.suite.timeout(timeout);\n  return this;\n}; /**\n    * Set the number of times to retry failed tests.\n    *\n    * @param {Number} retry times\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.retries = function (n) {\n  this.suite.retries(n);\n  return this;\n}; /**\n    * Set slowness threshold in milliseconds.\n    *\n    * @param {Number} slow\n    * @return {Mocha}\n    * @api public\n    * @param {number} slow\n    * @return {Mocha}\n    */\n\nMocha.prototype.slow = function (slow) {\n  this.suite.slow(slow);\n  return this;\n}; /**\n    * Enable timeouts.\n    *\n    * @param {Boolean} enabled\n    * @return {Mocha}\n    * @api public\n    * @param {boolean} enabled\n    * @return {Mocha}\n    */\n\nMocha.prototype.enableTimeouts = function (enabled) {\n  this.suite.enableTimeouts(arguments.length && enabled !== undefined ? enabled : true);\n  return this;\n}; /**\n    * Makes all tests async (accepting a callback)\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.asyncOnly = function () {\n  this.options.asyncOnly = true;\n  return this;\n}; /**\n    * Disable syntax highlighting (in browser).\n    *\n    * @api public\n    */\n\nMocha.prototype.noHighlighting = function () {\n  this.options.noHighlighting = true;\n  return this;\n}; /**\n    * Enable uncaught errors to propagate (in browser).\n    *\n    * @return {Mocha}\n    * @api public\n    */\n\nMocha.prototype.allowUncaught = function () {\n  this.options.allowUncaught = true;\n  return this;\n}; /**\n    * Delay root suite execution.\n    * @returns {Mocha}\n    */\n\nMocha.prototype.delay = function () {\n  function delay() {\n    this.options.delay = true;\n    return this;\n  }\n\n  return delay;\n}(); /**\n      * Run tests and invoke `fn()` when complete.\n      *\n      * @api public\n      * @param {Function} fn\n      * @return {Runner}\n      */\n\nMocha.prototype.run = function (fn) {\n  if (this.files.length) {\n    this.loadFiles();\n  }\n\n  var suite = this.suite;\n  var options = this.options;\n  options.files = this.files;\n  var runner = new exports.Runner(suite, options.delay);\n  var reporter = new this._reporter(runner, options);\n  runner.ignoreLeaks = options.ignoreLeaks !== false;\n  runner.fullStackTrace = options.fullStackTrace;\n  runner.asyncOnly = options.asyncOnly;\n  runner.allowUncaught = options.allowUncaught;\n\n  if (options.grep) {\n    runner.grep(options.grep, options.invert);\n  }\n\n  if (options.globals) {\n    runner.globals(options.globals);\n  }\n\n  if (options.growl) {\n    this._growl(runner, reporter);\n  }\n\n  if (options.useColors !== undefined) {\n    exports.reporters.Base.useColors = options.useColors;\n  }\n\n  exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\n\n  function done(failures) {\n    if (reporter.done) {\n      reporter.done(failures, fn);\n    } else {\n      fn && fn(failures);\n    }\n  }\n\n  return runner.run(done);\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/mocha.js"],"names":["escapeRe","require","path","reporters","utils","exports","module","Mocha","process","browser","cwd","paths","push","join","interfaces","Runnable","Context","Runner","Suite","Hook","Test","image","name","__dirname","options","files","grep","RegExp","fgrep","suite","ui","bail","reporter","reporterOptions","timeout","retries","useColors","enableTimeouts","slow","on","context","afterEach","teardown","after","suiteTeardown","beforeEach","setup","before","suiteSetup","describe","it","test","run","prototype","arguments","length","addFile","file","_reporter","err","message","indexOf","console","warn","stack","Error","_ui","loadFiles","fn","self","forEach","resolve","emit","global","_growl","runner","notify","stats","failures","msg","total","title","passes","duration","re","invert","ignoreLeaks","ignore","Boolean","checkLeaks","fullTrace","fullStackTrace","growl","globals","concat","colors","undefined","useInlineDiffs","inlineDiffs","n","enabled","asyncOnly","noHighlighting","allowUncaught","delay","Base","done"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/mocha.js.map","sourcesContent":["/*!\n * mocha\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar escapeRe = require('escape-string-regexp');\nvar path = require('path');\nvar reporters = require('./reporters');\nvar utils = require('./utils');\n\n/**\n * Expose `Mocha`.\n */\n\nexports = module.exports = Mocha;\n\n/**\n * To require local UIs and reporters when running in node.\n */\n\nif (!process.browser) {\n  var cwd = process.cwd();\n  module.paths.push(cwd, path.join(cwd, 'node_modules'));\n}\n\n/**\n * Expose internals.\n */\n\nexports.utils = utils;\nexports.interfaces = require('./interfaces');\nexports.reporters = reporters;\nexports.Runnable = require('./runnable');\nexports.Context = require('./context');\nexports.Runner = require('./runner');\nexports.Suite = require('./suite');\nexports.Hook = require('./hook');\nexports.Test = require('./test');\n\n/**\n * Return image `name` path.\n *\n * @api private\n * @param {string} name\n * @return {string}\n */\nfunction image(name) {\n  return path.join(__dirname, '../images', name + '.png');\n}\n\n/**\n * Set up mocha with `options`.\n *\n * Options:\n *\n *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n *   - `reporter` reporter instance, defaults to `mocha.reporters.spec`\n *   - `globals` array of accepted globals\n *   - `timeout` timeout in milliseconds\n *   - `retries` number of times to retry failed tests\n *   - `bail` bail on the first test failure\n *   - `slow` milliseconds to wait before considering a test slow\n *   - `ignoreLeaks` ignore global leaks\n *   - `fullTrace` display the full stack-trace on failing\n *   - `grep` string or regexp to filter tests with\n *\n * @param {Object} options\n * @api public\n */\nfunction Mocha(options) {\n  options = options || {};\n  this.files = [];\n  this.options = options;\n  if (options.grep) {\n    this.grep(new RegExp(options.grep));\n  }\n  if (options.fgrep) {\n    this.grep(options.fgrep);\n  }\n  this.suite = new exports.Suite('', new exports.Context());\n  this.ui(options.ui);\n  this.bail(options.bail);\n  this.reporter(options.reporter, options.reporterOptions);\n  if (typeof options.timeout !== 'undefined' && options.timeout !== null) {\n    this.timeout(options.timeout);\n  }\n  if (typeof options.retries !== 'undefined' && options.retries !== null) {\n    this.retries(options.retries);\n  }\n  this.useColors(options.useColors);\n  if (options.enableTimeouts !== null) {\n    this.enableTimeouts(options.enableTimeouts);\n  }\n  if (options.slow) {\n    this.slow(options.slow);\n  }\n\n  this.suite.on('pre-require', function(context) {\n    exports.afterEach = context.afterEach || context.teardown;\n    exports.after = context.after || context.suiteTeardown;\n    exports.beforeEach = context.beforeEach || context.setup;\n    exports.before = context.before || context.suiteSetup;\n    exports.describe = context.describe || context.suite;\n    exports.it = context.it || context.test;\n    exports.setup = context.setup || context.beforeEach;\n    exports.suiteSetup = context.suiteSetup || context.before;\n    exports.suiteTeardown = context.suiteTeardown || context.after;\n    exports.suite = context.suite || context.describe;\n    exports.teardown = context.teardown || context.afterEach;\n    exports.test = context.test || context.it;\n    exports.run = context.run;\n  });\n}\n\n/**\n * Enable or disable bailing on the first failure.\n *\n * @api public\n * @param {boolean} [bail]\n */\nMocha.prototype.bail = function(bail) {\n  if (!arguments.length) {\n    bail = true;\n  }\n  this.suite.bail(bail);\n  return this;\n};\n\n/**\n * Add test `file`.\n *\n * @api public\n * @param {string} file\n */\nMocha.prototype.addFile = function(file) {\n  this.files.push(file);\n  return this;\n};\n\n/**\n * Set reporter to `reporter`, defaults to \"spec\".\n *\n * @param {String|Function} reporter name or constructor\n * @param {Object} reporterOptions optional options\n * @api public\n * @param {string|Function} reporter name or constructor\n * @param {Object} reporterOptions optional options\n */\nMocha.prototype.reporter = function(reporter, reporterOptions) {\n  if (typeof reporter === 'function') {\n    this._reporter = reporter;\n  } else {\n    reporter = reporter || 'spec';\n    var _reporter;\n    // Try to load a built-in reporter.\n    if (reporters[reporter]) {\n      _reporter = reporters[reporter];\n    }\n    // Try to load reporters from process.cwd() and node_modules\n    if (!_reporter) {\n      try {\n        _reporter = require(reporter);\n      } catch (err) {\n        err.message.indexOf('Cannot find module') !== -1\n          ? console.warn('\"' + reporter + '\" reporter not found')\n          : console.warn('\"' + reporter + '\" reporter blew up with error:\\n' + err.stack);\n      }\n    }\n    if (!_reporter && reporter === 'teamcity') {\n      console.warn('The Teamcity reporter was moved to a package named '\n        + 'mocha-teamcity-reporter '\n        + '(https://npmjs.org/package/mocha-teamcity-reporter).');\n    }\n    if (!_reporter) {\n      throw new Error('invalid reporter \"' + reporter + '\"');\n    }\n    this._reporter = _reporter;\n  }\n  this.options.reporterOptions = reporterOptions;\n  return this;\n};\n\n/**\n * Set test UI `name`, defaults to \"bdd\".\n *\n * @api public\n * @param {string} bdd\n */\nMocha.prototype.ui = function(name) {\n  name = name || 'bdd';\n  this._ui = exports.interfaces[name];\n  if (!this._ui) {\n    try {\n      this._ui = require(name);\n    } catch (err) {\n      throw new Error('invalid interface \"' + name + '\"');\n    }\n  }\n  this._ui = this._ui(this.suite);\n  return this;\n};\n\n/**\n * Load registered files.\n *\n * @api private\n */\nMocha.prototype.loadFiles = function(fn) {\n  var self = this;\n  var suite = this.suite;\n  this.files.forEach(function(file) {\n    file = path.resolve(file);\n    suite.emit('pre-require', global, file, self);\n    suite.emit('require', require(file), file, self);\n    suite.emit('post-require', global, file, self);\n  });\n  fn && fn();\n};\n\n/**\n * Enable growl support.\n *\n * @api private\n */\nMocha.prototype._growl = function(runner, reporter) {\n  var notify = require('growl');\n\n  runner.on('end', function() {\n    var stats = reporter.stats;\n    if (stats.failures) {\n      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n      notify(msg, { name: 'mocha', title: 'Failed', image: image('error') });\n    } else {\n      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n        name: 'mocha',\n        title: 'Passed',\n        image: image('ok')\n      });\n    }\n  });\n};\n\n/**\n * Add regexp to grep, if `re` is a string it is escaped.\n *\n * @param {RegExp|String} re\n * @return {Mocha}\n * @api public\n * @param {RegExp|string} re\n * @return {Mocha}\n */\nMocha.prototype.grep = function(re) {\n  this.options.grep = typeof re === 'string' ? new RegExp(escapeRe(re)) : re;\n  return this;\n};\n\n/**\n * Invert `.grep()` matches.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.invert = function() {\n  this.options.invert = true;\n  return this;\n};\n\n/**\n * Ignore global leaks.\n *\n * @param {Boolean} ignore\n * @return {Mocha}\n * @api public\n * @param {boolean} ignore\n * @return {Mocha}\n */\nMocha.prototype.ignoreLeaks = function(ignore) {\n  this.options.ignoreLeaks = Boolean(ignore);\n  return this;\n};\n\n/**\n * Enable global leak checking.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.checkLeaks = function() {\n  this.options.ignoreLeaks = false;\n  return this;\n};\n\n/**\n * Display long stack-trace on failing\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.fullTrace = function() {\n  this.options.fullStackTrace = true;\n  return this;\n};\n\n/**\n * Enable growl support.\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.growl = function() {\n  this.options.growl = true;\n  return this;\n};\n\n/**\n * Ignore `globals` array or string.\n *\n * @param {Array|String} globals\n * @return {Mocha}\n * @api public\n * @param {Array|string} globals\n * @return {Mocha}\n */\nMocha.prototype.globals = function(globals) {\n  this.options.globals = (this.options.globals || []).concat(globals);\n  return this;\n};\n\n/**\n * Emit color output.\n *\n * @param {Boolean} colors\n * @return {Mocha}\n * @api public\n * @param {boolean} colors\n * @return {Mocha}\n */\nMocha.prototype.useColors = function(colors) {\n  if (colors !== undefined) {\n    this.options.useColors = colors;\n  }\n  return this;\n};\n\n/**\n * Use inline diffs rather than +/-.\n *\n * @param {Boolean} inlineDiffs\n * @return {Mocha}\n * @api public\n * @param {boolean} inlineDiffs\n * @return {Mocha}\n */\nMocha.prototype.useInlineDiffs = function(inlineDiffs) {\n  this.options.useInlineDiffs = inlineDiffs !== undefined && inlineDiffs;\n  return this;\n};\n\n/**\n * Set the timeout in milliseconds.\n *\n * @param {Number} timeout\n * @return {Mocha}\n * @api public\n * @param {number} timeout\n * @return {Mocha}\n */\nMocha.prototype.timeout = function(timeout) {\n  this.suite.timeout(timeout);\n  return this;\n};\n\n/**\n * Set the number of times to retry failed tests.\n *\n * @param {Number} retry times\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.retries = function(n) {\n  this.suite.retries(n);\n  return this;\n};\n\n/**\n * Set slowness threshold in milliseconds.\n *\n * @param {Number} slow\n * @return {Mocha}\n * @api public\n * @param {number} slow\n * @return {Mocha}\n */\nMocha.prototype.slow = function(slow) {\n  this.suite.slow(slow);\n  return this;\n};\n\n/**\n * Enable timeouts.\n *\n * @param {Boolean} enabled\n * @return {Mocha}\n * @api public\n * @param {boolean} enabled\n * @return {Mocha}\n */\nMocha.prototype.enableTimeouts = function(enabled) {\n  this.suite.enableTimeouts(arguments.length && enabled !== undefined ? enabled : true);\n  return this;\n};\n\n/**\n * Makes all tests async (accepting a callback)\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.asyncOnly = function() {\n  this.options.asyncOnly = true;\n  return this;\n};\n\n/**\n * Disable syntax highlighting (in browser).\n *\n * @api public\n */\nMocha.prototype.noHighlighting = function() {\n  this.options.noHighlighting = true;\n  return this;\n};\n\n/**\n * Enable uncaught errors to propagate (in browser).\n *\n * @return {Mocha}\n * @api public\n */\nMocha.prototype.allowUncaught = function() {\n  this.options.allowUncaught = true;\n  return this;\n};\n\n/**\n * Delay root suite execution.\n * @returns {Mocha}\n */\nMocha.prototype.delay = function delay() {\n  this.options.delay = true;\n  return this;\n};\n\n/**\n * Run tests and invoke `fn()` when complete.\n *\n * @api public\n * @param {Function} fn\n * @return {Runner}\n */\nMocha.prototype.run = function(fn) {\n  if (this.files.length) {\n    this.loadFiles();\n  }\n  var suite = this.suite;\n  var options = this.options;\n  options.files = this.files;\n  var runner = new exports.Runner(suite, options.delay);\n  var reporter = new this._reporter(runner, options);\n  runner.ignoreLeaks = options.ignoreLeaks !== false;\n  runner.fullStackTrace = options.fullStackTrace;\n  runner.asyncOnly = options.asyncOnly;\n  runner.allowUncaught = options.allowUncaught;\n  if (options.grep) {\n    runner.grep(options.grep, options.invert);\n  }\n  if (options.globals) {\n    runner.globals(options.globals);\n  }\n  if (options.growl) {\n    this._growl(runner, reporter);\n  }\n  if (options.useColors !== undefined) {\n    exports.reporters.Base.useColors = options.useColors;\n  }\n  exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\n\n  function done(failures) {\n    if (reporter.done) {\n      reporter.done(failures, fn);\n    } else {\n      fn && fn(failures);\n    }\n  }\n\n  return runner.run(done);\n};\n"]},"hash":"b0037bb2b8d9400aaa0f82c200562f7820650b98"}
