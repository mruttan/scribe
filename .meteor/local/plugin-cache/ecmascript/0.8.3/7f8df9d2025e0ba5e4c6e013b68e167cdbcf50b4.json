{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/pending.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/pending.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/pending.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/pending.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"pending"},"ignored":false,"code":"var assert = require('assert');\n\nvar run = require('./helpers').runMochaJSON;\n\nvar args = [];\ndescribe('pending', function () {\n  describe('pending specs', function () {\n    this.timeout(1000);\n    it('should be created by omitting a function', function (done) {\n      run('pending/spec.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 1);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n  describe('synchronous skip()', function () {\n    this.timeout(1000);\n    describe('in spec', function () {\n      it('should immediately skip the spec and run all others', function (done) {\n        run('pending/skip.sync.spec.js', args, function (err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 1);\n          assert.equal(res.stats.passes, 1);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n    describe('in before', function () {\n      it('should skip all suite specs', function (done) {\n        run('pending/skip.sync.before.js', args, function (err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 2);\n          assert.equal(res.stats.passes, 0);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n    describe('in beforeEach', function () {\n      it('should skip all suite specs', function (done) {\n        run('pending/skip.sync.beforeEach.js', args, function (err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 2);\n          assert.equal(res.stats.passes, 0);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/pending.js"],"names":["assert","require","run","runMochaJSON","args","describe","timeout","it","done","err","res","equal","stats","pending","passes","failures","code"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AACA,IAAIC,MAASD,QAAQ,WAAR,EAAqBE,YAAlC;;AACA,IAAIC,OAAS,EAAb;AAEAC,SAAS,SAAT,EAAoB,YAAW;AAC7BA,WAAS,eAAT,EAA0B,YAAW;AACnC,SAAKC,OAAL,CAAa,IAAb;AAEAC,OAAG,0CAAH,EAA+C,UAASC,IAAT,EAAe;AAC5DN,UAAI,iBAAJ,EAAuBE,IAAvB,EAA6B,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC9CV,eAAO,CAACS,GAAR;AACAT,eAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUC,OAAvB,EAAgC,CAAhC;AACAb,eAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUE,MAAvB,EAA+B,CAA/B;AACAd,eAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUG,QAAvB,EAAiC,CAAjC;AACAf,eAAOW,KAAP,CAAaD,IAAIM,IAAjB,EAAuB,CAAvB;AACAR;AACD,OAPD;AAQD,KATD;AAUD,GAbD;AAeAH,WAAS,oBAAT,EAA+B,YAAW;AACxC,SAAKC,OAAL,CAAa,IAAb;AAEAD,aAAS,SAAT,EAAoB,YAAW;AAC7BE,SAAG,qDAAH,EAA0D,UAASC,IAAT,EAAe;AACvEN,YAAI,2BAAJ,EAAiCE,IAAjC,EAAuC,UAASK,GAAT,EAAcC,GAAd,EAAmB;AACxDV,iBAAO,CAACS,GAAR;AACAT,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUC,OAAvB,EAAgC,CAAhC;AACAb,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUE,MAAvB,EAA+B,CAA/B;AACAd,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUG,QAAvB,EAAiC,CAAjC;AACAf,iBAAOW,KAAP,CAAaD,IAAIM,IAAjB,EAAuB,CAAvB;AACAR;AACD,SAPD;AAQD,OATD;AAUD,KAXD;AAaAH,aAAS,WAAT,EAAsB,YAAW;AAC/BE,SAAG,6BAAH,EAAkC,UAASC,IAAT,EAAe;AAC/CN,YAAI,6BAAJ,EAAmCE,IAAnC,EAAyC,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC1DV,iBAAO,CAACS,GAAR;AACAT,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUC,OAAvB,EAAgC,CAAhC;AACAb,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUE,MAAvB,EAA+B,CAA/B;AACAd,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUG,QAAvB,EAAiC,CAAjC;AACAf,iBAAOW,KAAP,CAAaD,IAAIM,IAAjB,EAAuB,CAAvB;AACAR;AACD,SAPD;AAQD,OATD;AAUD,KAXD;AAaAH,aAAS,eAAT,EAA0B,YAAW;AACnCE,SAAG,6BAAH,EAAkC,UAASC,IAAT,EAAe;AAC/CN,YAAI,iCAAJ,EAAuCE,IAAvC,EAA6C,UAASK,GAAT,EAAcC,GAAd,EAAmB;AAC9DV,iBAAO,CAACS,GAAR;AACAT,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUC,OAAvB,EAAgC,CAAhC;AACAb,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUE,MAAvB,EAA+B,CAA/B;AACAd,iBAAOW,KAAP,CAAaD,IAAIE,KAAJ,CAAUG,QAAvB,EAAiC,CAAjC;AACAf,iBAAOW,KAAP,CAAaD,IAAIM,IAAjB,EAAuB,CAAvB;AACAR;AACD,SAPD;AAQD,OATD;AAUD,KAXD;AAYD,GAzCD;AA0CD,CA1DD","file":"packages/practicalmeteor:mocha/test/integration/pending.js.map","sourcesContent":["var assert = require('assert');\nvar run    = require('./helpers').runMochaJSON;\nvar args   = [];\n\ndescribe('pending', function() {\n  describe('pending specs', function() {\n    this.timeout(1000);\n\n    it('should be created by omitting a function', function(done) {\n      run('pending/spec.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 1);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n\n  describe('synchronous skip()', function() {\n    this.timeout(1000);\n\n    describe('in spec', function() {\n      it('should immediately skip the spec and run all others', function(done) {\n        run('pending/skip.sync.spec.js', args, function(err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 1);\n          assert.equal(res.stats.passes, 1);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n\n    describe('in before', function() {\n      it('should skip all suite specs', function(done) {\n        run('pending/skip.sync.before.js', args, function(err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 2);\n          assert.equal(res.stats.passes, 0);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n\n    describe('in beforeEach', function() {\n      it('should skip all suite specs', function(done) {\n        run('pending/skip.sync.beforeEach.js', args, function(err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 2);\n          assert.equal(res.stats.passes, 0);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n  });\n});\n"]},"hash":"7f8df9d2025e0ba5e4c6e013b68e167cdbcf50b4"}
