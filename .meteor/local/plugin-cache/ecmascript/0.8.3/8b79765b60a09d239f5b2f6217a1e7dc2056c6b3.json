{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/diffs.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/diffs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/diffs.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/diffs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"diffs"},"ignored":false,"code":"var assert = require('assert');\n\nvar helpers = require('./helpers');\n\nvar run = helpers.runMocha;\n\nvar fs = require('fs');\n\nvar getDiffs = helpers.getDiffs;\n\nfunction getExpectedOutput() {\n  var output = fs.readFileSync('test/integration/fixtures/diffs/output', 'UTF8'); // Diffs are delimited in file by \"// DIFF\"\n\n  return output.split(/\\s*\\/\\/ DIFF/).slice(1).map(function (diff) {\n    return diff.split('\\n').filter(Boolean).join('\\n');\n  });\n}\n\ndescribe('diffs', function () {\n  var diffs, expected;\n  this.timeout(1000);\n  before(function (done) {\n    run('diffs/diffs.js', ['-C'], function (err, res) {\n      expected = getExpectedOutput();\n      diffs = getDiffs(res.output);\n      done(err);\n    });\n  });\n  ['should display a diff for small strings', 'should display a diff of canonicalized objects', 'should display a diff for medium strings', 'should display a diff for entire object dumps', 'should display a diff for multi-line strings', 'should display a diff for entire object dumps', 'should display a full-comparison with escaped special characters', 'should display a word diff for large strings', 'should work with objects', 'should show value diffs and not be affected by commas', 'should display diff by data and not like an objects'].forEach(function (title, i) {\n    it(title, function () {\n      assert.equal(diffs[i], expected[i]);\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/diffs.js"],"names":["assert","require","helpers","run","runMocha","fs","getDiffs","getExpectedOutput","output","readFileSync","split","slice","map","diff","filter","Boolean","join","describe","diffs","expected","timeout","before","done","err","res","forEach","title","i","it","equal"],"mappings":"AAAA,IAAIA,SAAWC,QAAQ,QAAR,CAAf;;AACA,IAAIC,UAAWD,QAAQ,WAAR,CAAf;;AACA,IAAIE,MAAWD,QAAQE,QAAvB;;AACA,IAAIC,KAAWJ,QAAQ,IAAR,CAAf;;AACA,IAAIK,WAAWJ,QAAQI,QAAvB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAIC,SAASH,GAAGI,YAAH,CAAgB,wCAAhB,EAA0D,MAA1D,CAAb,CAD2B,CAG3B;;AACA,SAAOD,OAAOE,KAAP,CAAa,cAAb,EAA6BC,KAA7B,CAAmC,CAAnC,EAAsCC,GAAtC,CAA0C,UAASC,IAAT,EAAe;AAC9D,WAAOA,KAAKH,KAAL,CAAW,IAAX,EAAiBI,MAAjB,CAAwBC,OAAxB,EAAiCC,IAAjC,CAAsC,IAAtC,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDC,SAAS,OAAT,EAAkB,YAAW;AAC3B,MAAIC,KAAJ,EAAWC,QAAX;AACA,OAAKC,OAAL,CAAa,IAAb;AAEAC,SAAO,UAASC,IAAT,EAAe;AACpBnB,QAAI,gBAAJ,EAAsB,CAAC,IAAD,CAAtB,EAA8B,UAASoB,GAAT,EAAcC,GAAd,EAAmB;AAC/CL,iBAAWZ,mBAAX;AACAW,cAAQZ,SAASkB,IAAIhB,MAAb,CAAR;AACAc,WAAKC,GAAL;AACD,KAJD;AAKD,GAND;AAQA,GACE,yCADF,EAEE,gDAFF,EAGE,0CAHF,EAIE,+CAJF,EAKE,8CALF,EAME,+CANF,EAOE,kEAPF,EAQE,8CARF,EASE,0BATF,EAUE,uDAVF,EAWE,qDAXF,EAYEE,OAZF,CAYU,UAASC,KAAT,EAAgBC,CAAhB,EAAmB;AAC3BC,OAAGF,KAAH,EAAU,YAAW;AACnB1B,aAAO6B,KAAP,CAAaX,MAAMS,CAAN,CAAb,EAAuBR,SAASQ,CAAT,CAAvB;AACD,KAFD;AAGD,GAhBD;AAiBD,CA7BD","file":"packages/practicalmeteor:mocha/test/integration/diffs.js.map","sourcesContent":["var assert   = require('assert');\nvar helpers  = require('./helpers');\nvar run      = helpers.runMocha;\nvar fs       = require('fs');\nvar getDiffs = helpers.getDiffs;\n\nfunction getExpectedOutput() {\n  var output = fs.readFileSync('test/integration/fixtures/diffs/output', 'UTF8');\n\n  // Diffs are delimited in file by \"// DIFF\"\n  return output.split(/\\s*\\/\\/ DIFF/).slice(1).map(function(diff) {\n    return diff.split('\\n').filter(Boolean).join('\\n');\n  });\n}\n\ndescribe('diffs', function() {\n  var diffs, expected;\n  this.timeout(1000);\n\n  before(function(done) {\n    run('diffs/diffs.js', ['-C'], function(err, res) {\n      expected = getExpectedOutput();\n      diffs = getDiffs(res.output);\n      done(err);\n    });\n  });\n\n  [\n    'should display a diff for small strings',\n    'should display a diff of canonicalized objects',\n    'should display a diff for medium strings',\n    'should display a diff for entire object dumps',\n    'should display a diff for multi-line strings',\n    'should display a diff for entire object dumps',\n    'should display a full-comparison with escaped special characters',\n    'should display a word diff for large strings',\n    'should work with objects',\n    'should show value diffs and not be affected by commas',\n    'should display diff by data and not like an objects'\n  ].forEach(function(title, i) {\n    it(title, function() {\n      assert.equal(diffs[i], expected[i]);\n    });\n  });\n});\n"]},"hash":"8b79765b60a09d239f5b2f6217a1e7dc2056c6b3"}
