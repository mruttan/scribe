{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/options.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/options.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/options.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/options.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"options"},"ignored":false,"code":"var assert = require('assert');\n\nvar run = require('./helpers').runMochaJSON;\n\nvar args = [];\ndescribe('options', function () {\n  this.timeout(2000);\n  describe('--async-only', function () {\n    before(function () {\n      args = ['--async-only'];\n    });\n    it('should fail synchronous specs', function (done) {\n      run('options/async-only.sync.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.failures[0].title, 'throws an error');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n    it('should allow asynchronous specs', function (done) {\n      run('options/async-only.async.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 1);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.passes[0].title, 'should pass');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n  describe('--bail', function () {\n    before(function () {\n      args = ['--bail'];\n    });\n    it('should stop after the first error', function (done) {\n      run('options/bail.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 1);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.passes[0].title, 'should display this spec');\n        assert.equal(res.failures[0].title, 'should only display this error');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n  });\n  describe('--sort', function () {\n    before(function () {\n      args = ['--sort'];\n    });\n    it('should sort tests in alphabetical order', function (done) {\n      run('options/sort*', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.passes[0].fullTitle, 'alpha should be executed first');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n  describe('--delay', function () {\n    before(function () {\n      args = ['--delay'];\n    });\n    it('should run the generated test suite', function (done) {\n      run('options/delay.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.passes[0].title, 'should have waited 500ms to run this suite');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n    it('should throw an error if the test suite failed to run', function (done) {\n      run('options/delay-fail.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.failures[0].title, 'Uncaught error outside test suite');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n  });\n  describe('--grep', function () {\n    it('runs specs matching a string', function (done) {\n      args = ['--grep', 'match'];\n      run('options/grep.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n    it('runs specs matching a RegExp', function (done) {\n      args = ['--grep', '.*'];\n      run('options/grep.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n    describe('with --invert', function () {\n      it('runs specs that do not match the pattern', function (done) {\n        args = ['--grep', 'fail', '--invert'];\n        run('options/grep.js', args, function (err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 0);\n          assert.equal(res.stats.passes, 2);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n  });\n  describe('--retries', function () {\n    it('retries after a certain threshold', function (done) {\n      args = ['--retries', '3'];\n      run('options/retries.js', args, function (err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.tests, 1);\n        assert.equal(res.tests[0].currentRetry, 3);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/options.js"],"names":["assert","require","run","runMochaJSON","args","describe","timeout","before","it","done","err","res","equal","stats","pending","passes","failures","title","code","fullTitle","tests","currentRetry"],"mappings":"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","file":"packages/practicalmeteor:mocha/test/integration/options.js.map","sourcesContent":["var assert = require('assert');\nvar run    = require('./helpers').runMochaJSON;\nvar args   = [];\n\ndescribe('options', function() {\n  this.timeout(2000);\n\n  describe('--async-only', function() {\n\n    before(function() {\n      args = ['--async-only'];\n    });\n\n    it('should fail synchronous specs', function(done) {\n      run('options/async-only.sync.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 1);\n\n        assert.equal(res.failures[0].title, 'throws an error');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n\n    it('should allow asynchronous specs', function(done) {\n      run('options/async-only.async.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 1);\n        assert.equal(res.stats.failures, 0);\n\n        assert.equal(res.passes[0].title, 'should pass');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n\n  describe('--bail', function() {\n    before(function() {\n      args = ['--bail'];\n    });\n\n    it('should stop after the first error', function(done) {\n      run('options/bail.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 1);\n        assert.equal(res.stats.failures, 1);\n\n        assert.equal(res.passes[0].title, 'should display this spec');\n        assert.equal(res.failures[0].title, 'should only display this error');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n  });\n\n  describe('--sort', function() {\n    before(function() {\n      args = ['--sort'];\n    });\n\n    it('should sort tests in alphabetical order', function(done) {\n      run('options/sort*', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n\n        assert.equal(res.passes[0].fullTitle,\n          'alpha should be executed first');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n  });\n\n  describe('--delay', function() {\n    before(function() {\n      args = ['--delay'];\n    });\n\n    it('should run the generated test suite', function(done) {\n      run('options/delay.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n\n        assert.equal(res.passes[0].title,\n          'should have waited 500ms to run this suite');\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n\n    it('should throw an error if the test suite failed to run', function(done) {\n      run('options/delay-fail.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.failures, 1);\n\n        assert.equal(res.failures[0].title,\n          'Uncaught error outside test suite');\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n  });\n\n  describe('--grep', function() {\n    it('runs specs matching a string', function(done) {\n      args = ['--grep', 'match'];\n      run('options/grep.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 0);\n        assert.equal(res.code, 0);\n        done();\n      });\n    });\n\n    it('runs specs matching a RegExp', function(done) {\n      args = ['--grep', '.*'];\n      run('options/grep.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 2);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.code, 1);\n        done();\n      });\n    });\n\n    describe('with --invert', function() {\n      it('runs specs that do not match the pattern', function(done) {\n        args = ['--grep', 'fail', '--invert'];\n        run('options/grep.js', args, function(err, res) {\n          assert(!err);\n          assert.equal(res.stats.pending, 0);\n          assert.equal(res.stats.passes, 2);\n          assert.equal(res.stats.failures, 0);\n          assert.equal(res.code, 0);\n          done();\n        });\n      });\n    });\n  });\n\n  describe('--retries', function() {\n    it('retries after a certain threshold', function (done) {\n      args = ['--retries', '3'];\n      run('options/retries.js', args, function(err, res) {\n        assert(!err);\n        assert.equal(res.stats.pending, 0);\n        assert.equal(res.stats.passes, 0);\n        assert.equal(res.stats.tests, 1);\n        assert.equal(res.tests[0].currentRetry, 3);\n        assert.equal(res.stats.failures, 1);\n        assert.equal(res.code, 1);\n        done();\n      });\n    })\n  });\n});\n"]},"hash":"40ee356dcff4aaf60e51e853c4acae8955b1326f"}
