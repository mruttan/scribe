{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/xunit.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/xunit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/xunit.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/xunit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"xunit"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Module dependencies.\n */var Base = require('./base');\n\nvar utils = require('../utils');\n\nvar inherits = utils.inherits;\n\nvar fs = require('fs');\n\nvar escape = utils.escape;\n\nvar mkdirp = require('mkdirp');\n\nvar path = require('path'); /**\n                             * Save timer references to avoid Sinon interfering (see GH-237).\n                             */ /* eslint-disable no-unused-vars, no-native-reassign */\n\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval; /* eslint-enable no-unused-vars, no-native-reassign */ /**\n                                                                                                  * Expose `XUnit`.\n                                                                                                  */\nexports = module.exports = XUnit; /**\n                                   * Initialize a new `XUnit` reporter.\n                                   *\n                                   * @api public\n                                   * @param {Runner} runner\n                                   */\n\nfunction XUnit(runner, options) {\n  Base.call(this, runner);\n  var stats = this.stats;\n  var tests = [];\n  var self = this;\n\n  if (options.reporterOptions && options.reporterOptions.output) {\n    if (!fs.createWriteStream) {\n      throw new Error('file output not supported in browser');\n    }\n\n    mkdirp.sync(path.dirname(options.reporterOptions.output));\n    self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n  }\n\n  runner.on('pending', function (test) {\n    tests.push(test);\n  });\n  runner.on('pass', function (test) {\n    tests.push(test);\n  });\n  runner.on('fail', function (test) {\n    tests.push(test);\n  });\n  runner.on('end', function () {\n    self.write(tag('testsuite', {\n      name: 'Mocha Tests',\n      tests: stats.tests,\n      failures: stats.failures,\n      errors: stats.failures,\n      skipped: stats.tests - stats.failures - stats.passes,\n      timestamp: new Date().toUTCString(),\n      time: stats.duration / 1000 || 0\n    }, false));\n    tests.forEach(function (t) {\n      self.test(t);\n    });\n    self.write('</testsuite>');\n  });\n} /**\n   * Inherit from `Base.prototype`.\n   */\n\ninherits(XUnit, Base); /**\n                        * Override done to close the stream (if it's a file).\n                        *\n                        * @param failures\n                        * @param {Function} fn\n                        */\n\nXUnit.prototype.done = function (failures, fn) {\n  if (this.fileStream) {\n    this.fileStream.end(function () {\n      fn(failures);\n    });\n  } else {\n    fn(failures);\n  }\n}; /**\n    * Write out the given line.\n    *\n    * @param {string} line\n    */\n\nXUnit.prototype.write = function (line) {\n  if (this.fileStream) {\n    this.fileStream.write(line + '\\n');\n  } else if ((typeof process === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(process)) === 'object' && process.stdout) {\n    process.stdout.write(line + '\\n');\n  } else {\n    console.log(line);\n  }\n}; /**\n    * Output tag for the given `test.`\n    *\n    * @param {Test} test\n    */\n\nXUnit.prototype.test = function (test) {\n  var attrs = {\n    classname: test.parent.fullTitle(),\n    name: test.title,\n    time: test.duration / 1000 || 0\n  };\n\n  if (test.state === 'failed') {\n    var err = test.err;\n    this.write(tag('testcase', attrs, false, tag('failure', {}, false, cdata(escape(err.message) + '\\n' + err.stack))));\n  } else if (test.pending) {\n    this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    this.write(tag('testcase', attrs, true));\n  }\n}; /**\n    * HTML tag helper.\n    *\n    * @param name\n    * @param attrs\n    * @param close\n    * @param content\n    * @return {string}\n    */\n\nfunction tag(name, attrs, close, content) {\n  var end = close ? '/>' : '>';\n  var pairs = [];\n  var tag;\n\n  for (var key in meteorBabelHelpers.sanitizeForInObject(attrs)) {\n    if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n      pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n    }\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n\n  if (content) {\n    tag += content + '</' + name + end;\n  }\n\n  return tag;\n} /**\n   * Return cdata escaped CDATA `str`.\n   */\n\nfunction cdata(str) {\n  return '<![CDATA[' + escape(str) + ']]>';\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/xunit.js"],"names":["Base","require","utils","inherits","fs","escape","mkdirp","path","Date","global","setTimeout","setInterval","clearTimeout","clearInterval","exports","module","XUnit","runner","options","call","stats","tests","self","reporterOptions","output","createWriteStream","Error","sync","dirname","fileStream","on","test","push","write","tag","name","failures","errors","skipped","passes","timestamp","toUTCString","time","duration","forEach","t","prototype","done","fn","end","line","process","stdout","console","log","attrs","classname","parent","fullTitle","title","state","err","cdata","message","stack","pending","close","content","pairs","key","Object","hasOwnProperty","length","join","str"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/reporters/xunit.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\nvar inherits = utils.inherits;\nvar fs = require('fs');\nvar escape = utils.escape;\nvar mkdirp = require('mkdirp');\nvar path = require('path');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Expose `XUnit`.\n */\n\nexports = module.exports = XUnit;\n\n/**\n * Initialize a new `XUnit` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction XUnit(runner, options) {\n  Base.call(this, runner);\n\n  var stats = this.stats;\n  var tests = [];\n  var self = this;\n\n  if (options.reporterOptions && options.reporterOptions.output) {\n    if (!fs.createWriteStream) {\n      throw new Error('file output not supported in browser');\n    }\n    mkdirp.sync(path.dirname(options.reporterOptions.output));\n    self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n  }\n\n  runner.on('pending', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('fail', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('end', function() {\n    self.write(tag('testsuite', {\n      name: 'Mocha Tests',\n      tests: stats.tests,\n      failures: stats.failures,\n      errors: stats.failures,\n      skipped: stats.tests - stats.failures - stats.passes,\n      timestamp: (new Date()).toUTCString(),\n      time: (stats.duration / 1000) || 0\n    }, false));\n\n    tests.forEach(function(t) {\n      self.test(t);\n    });\n\n    self.write('</testsuite>');\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(XUnit, Base);\n\n/**\n * Override done to close the stream (if it's a file).\n *\n * @param failures\n * @param {Function} fn\n */\nXUnit.prototype.done = function(failures, fn) {\n  if (this.fileStream) {\n    this.fileStream.end(function() {\n      fn(failures);\n    });\n  } else {\n    fn(failures);\n  }\n};\n\n/**\n * Write out the given line.\n *\n * @param {string} line\n */\nXUnit.prototype.write = function(line) {\n  if (this.fileStream) {\n    this.fileStream.write(line + '\\n');\n  } else if (typeof process === 'object' && process.stdout) {\n    process.stdout.write(line + '\\n');\n  } else {\n    console.log(line);\n  }\n};\n\n/**\n * Output tag for the given `test.`\n *\n * @param {Test} test\n */\nXUnit.prototype.test = function(test) {\n  var attrs = {\n    classname: test.parent.fullTitle(),\n    name: test.title,\n    time: (test.duration / 1000) || 0\n  };\n\n  if (test.state === 'failed') {\n    var err = test.err;\n    this.write(tag('testcase', attrs, false, tag('failure', {}, false, cdata(escape(err.message) + '\\n' + err.stack))));\n  } else if (test.pending) {\n    this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    this.write(tag('testcase', attrs, true));\n  }\n};\n\n/**\n * HTML tag helper.\n *\n * @param name\n * @param attrs\n * @param close\n * @param content\n * @return {string}\n */\nfunction tag(name, attrs, close, content) {\n  var end = close ? '/>' : '>';\n  var pairs = [];\n  var tag;\n\n  for (var key in attrs) {\n    if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n      pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n    }\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n  if (content) {\n    tag += content + '</' + name + end;\n  }\n  return tag;\n}\n\n/**\n * Return cdata escaped CDATA `str`.\n */\n\nfunction cdata(str) {\n  return '<![CDATA[' + escape(str) + ']]>';\n}\n"]},"hash":"a2709416a9deaa26191fbb89e20265bdca020a68"}
