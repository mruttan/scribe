{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/json.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/json.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/json.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/json.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"json"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Base = require('./base'); /**\n                                  * Expose `JSON`.\n                                  */\n\nexports = module.exports = JSONReporter; /**\n                                          * Initialize a new `JSON` reporter.\n                                          *\n                                          * @api public\n                                          * @param {Runner} runner\n                                          */\n\nfunction JSONReporter(runner) {\n  Base.call(this, runner);\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n  runner.on('test end', function (test) {\n    tests.push(test);\n  });\n  runner.on('pass', function (test) {\n    passes.push(test);\n  });\n  runner.on('fail', function (test) {\n    failures.push(test);\n  });\n  runner.on('pending', function (test) {\n    pending.push(test);\n  });\n  runner.on('end', function () {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n    runner.testResults = obj;\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n} /**\n   * Return a plain-object representation of `test`\n   * free of cyclic properties etc.\n   *\n   * @api private\n   * @param {Object} test\n   * @return {Object}\n   */\n\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: errorJSON(test.err || {})\n  };\n} /**\n   * Transform `error` into a JSON object.\n   *\n   * @api private\n   * @param {Error} err\n   * @return {Object}\n   */\n\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function (key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/json.js"],"names":["Base","require","exports","module","JSONReporter","runner","call","self","tests","pending","failures","passes","on","test","push","obj","stats","map","clean","testResults","process","stdout","write","JSON","stringify","title","fullTitle","duration","currentRetry","err","errorJSON","res","Object","getOwnPropertyNames","forEach","key"],"mappings":"AAAA;;GAIA,IAAIA,OAAOC,QAAQ,QAAR,CAAX,C,CAEA;;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,YAA3B,C,CAEA;;;;;;;AAMA,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BL,OAAKM,IAAL,CAAU,IAAV,EAAgBD,MAAhB;AAEA,MAAIE,OAAO,IAAX;AACA,MAAIC,QAAQ,EAAZ;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,WAAW,EAAf;AACA,MAAIC,SAAS,EAAb;AAEAN,SAAOO,EAAP,CAAU,UAAV,EAAsB,UAASC,IAAT,EAAe;AACnCL,UAAMM,IAAN,CAAWD,IAAX;AACD,GAFD;AAIAR,SAAOO,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAC/BF,WAAOG,IAAP,CAAYD,IAAZ;AACD,GAFD;AAIAR,SAAOO,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAC/BH,aAASI,IAAT,CAAcD,IAAd;AACD,GAFD;AAIAR,SAAOO,EAAP,CAAU,SAAV,EAAqB,UAASC,IAAT,EAAe;AAClCJ,YAAQK,IAAR,CAAaD,IAAb;AACD,GAFD;AAIAR,SAAOO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,QAAIG,MAAM;AACRC,aAAOT,KAAKS,KADJ;AAERR,aAAOA,MAAMS,GAAN,CAAUC,KAAV,CAFC;AAGRT,eAASA,QAAQQ,GAAR,CAAYC,KAAZ,CAHD;AAIRR,gBAAUA,SAASO,GAAT,CAAaC,KAAb,CAJF;AAKRP,cAAQA,OAAOM,GAAP,CAAWC,KAAX;AALA,KAAV;AAQAb,WAAOc,WAAP,GAAqBJ,GAArB;AAEAK,YAAQC,MAAR,CAAeC,KAAf,CAAqBC,KAAKC,SAAL,CAAeT,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAArB;AACD,GAZD;AAaD,C,CAED;;;;;;;;;AAQA,SAASG,KAAT,CAAeL,IAAf,EAAqB;AACnB,SAAO;AACLY,WAAOZ,KAAKY,KADP;AAELC,eAAWb,KAAKa,SAAL,EAFN;AAGLC,cAAUd,KAAKc,QAHV;AAILC,kBAAcf,KAAKe,YAAL,EAJT;AAKLC,SAAKC,UAAUjB,KAAKgB,GAAL,IAAY,EAAtB;AALA,GAAP;AAOD,C,CAED;;;;;;;;AAOA,SAASC,SAAT,CAAmBD,GAAnB,EAAwB;AACtB,MAAIE,MAAM,EAAV;AACAC,SAAOC,mBAAP,CAA2BJ,GAA3B,EAAgCK,OAAhC,CAAwC,UAASC,GAAT,EAAc;AACpDJ,QAAII,GAAJ,IAAWN,IAAIM,GAAJ,CAAX;AACD,GAFD,EAEGN,GAFH;AAGA,SAAOE,GAAP;AACD","file":"packages/practicalmeteor:mocha/lib/reporters/json.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Initialize a new `JSON` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction JSONReporter(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var tests = [];\n  var pending = [];\n  var failures = [];\n  var passes = [];\n\n  runner.on('test end', function(test) {\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test) {\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test) {\n    failures.push(test);\n  });\n\n  runner.on('pending', function(test) {\n    pending.push(test);\n  });\n\n  runner.on('end', function() {\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry(),\n    err: errorJSON(test.err || {})\n  };\n}\n\n/**\n * Transform `error` into a JSON object.\n *\n * @api private\n * @param {Error} err\n * @return {Object}\n */\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function(key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n"]},"hash":"91b75c9633aa36215bfbab578b91fe46975b1c19"}
