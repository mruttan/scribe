{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../api/notes","imported":["Notes"],"specifiers":[{"kind":"named","imported":"Notes","local":"Notes"}]}],"exports":{"exported":["Editor"],"specifiers":[{"kind":"local","local":"Editor","exported":"Editor"}]}}},"options":{"filename":"imports/ui/Editor.js","filenameRelative":"imports/ui/Editor.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/Editor.js.map","sourceFileName":"imports/ui/Editor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Editor"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  Editor: function () {\n    return Editor;\n  }\n});\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n  createContainer: function (v) {\n    createContainer = v;\n  }\n}, 1);\nvar Session = void 0;\nmodule.watch(require(\"meteor/session\"), {\n  Session: function (v) {\n    Session = v;\n  }\n}, 2);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 3);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 4);\nvar Notes = void 0;\nmodule.watch(require(\"../api/notes\"), {\n  Notes: function (v) {\n    Notes = v;\n  }\n}, 5);\n\nvar Editor = function (_React$Component) {\n  (0, _inherits3.default)(Editor, _React$Component);\n\n  function Editor() {\n    (0, _classCallCheck3.default)(this, Editor);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  Editor.prototype.handleBodyChange = function () {\n    function handleBodyChange(e) {\n      this.props.call('notes.update', this.props.note._id, {\n        body: e.target.value\n      });\n    }\n\n    return handleBodyChange;\n  }();\n\n  Editor.prototype.handleTitleChange = function () {\n    function handleTitleChange(e) {\n      this.props.call('notes.update', this.props.note._id, {\n        title: e.target.value\n      });\n    }\n\n    return handleTitleChange;\n  }();\n\n  Editor.prototype.render = function () {\n    function render() {\n      if (this.props.note) {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            \"div\",\n            {\n              className: \"row wrapper border-bottom white-bg page-heading\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-lg-12\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                React.createElement(\"input\", {\n                  value: this.props.note.title,\n                  placeholder: \"Your title here\",\n                  onChange: this.handleTitleChange.bind(this)\n                })\n              )\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"wrapper wrapper-content animated fadeInRight\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-lg-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"text-center m-t-lg\"\n                  },\n                  React.createElement(\n                    \"p\",\n                    null,\n                    React.createElement(\"textarea\", {\n                      value: this.props.note.body,\n                      placeholder: \"Your note here\",\n                      onChange: this.handleBodyChange.bind(this)\n                    })\n                  ),\n                  React.createElement(\n                    \"button\",\n                    null,\n                    \"Delete Note\"\n                  )\n                )\n              )\n            )\n          )\n        );\n      } else {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            \"div\",\n            {\n              className: \"row wrapper border-bottom white-bg page-heading\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-lg-12\"\n              },\n              React.createElement(\n                \"h2\",\n                null,\n                this.props.selectedNoteId ? 'Note not found.' : 'No Note Selected.'\n              )\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"wrapper wrapper-content animated fadeInRight\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-lg-12\"\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"text-center m-t-lg\"\n                  },\n                  React.createElement(\n                    \"small\",\n                    null,\n                    this.props.selectedNoteId ? 'The note you are looking for doesn\\'t exist' : 'Please click Create Note to get started.'\n                  )\n                )\n              )\n            )\n          )\n        );\n      }\n    }\n\n    return render;\n  }();\n\n  return Editor;\n}(React.Component);\n\n;\nEditor.propTypes = {\n  note: PropTypes.object,\n  selectedNoteId: PropTypes.string\n};\nmodule.exportDefault(createContainer(function () {\n  var selectedNoteId = Session.get('selectedNoteId');\n  return {\n    selectedNoteId: selectedNoteId,\n    note: Notes.findOne(selectedNoteId),\n    call: Meteor.call\n  };\n}, Editor));","map":{"version":3,"sources":["imports/ui/Editor.js"],"names":["module","export","Editor","React","watch","require","v","createContainer","Session","PropTypes","Meteor","Notes","handleBodyChange","e","props","call","note","_id","body","target","value","handleTitleChange","title","render","bind","selectedNoteId","Component","propTypes","object","string","exportDefault","get","findOne"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,UAAO;AAAA,WAAIA,MAAJ;AAAA;AAAR,CAAd;AAAmC,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACH,YAAMG,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,wBAAJ;AAAoBP,OAAOI,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACE,iBAAD,YAAiBD,CAAjB,EAAmB;AAACC,sBAAgBD,CAAhB;AAAkB;AAAtC,CAAjD,EAAyF,CAAzF;AAA4F,IAAIE,gBAAJ;AAAYR,OAAOI,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACG,SAAD,YAASF,CAAT,EAAW;AAACE,cAAQF,CAAR;AAAU;AAAtB,CAAvC,EAA+D,CAA/D;AAAkE,IAAIG,kBAAJ;AAAcT,OAAOI,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACG,gBAAUH,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAII,eAAJ;AAAWV,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACK,QAAD,YAAQJ,CAAR,EAAU;AAACI,aAAOJ,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIK,cAAJ;AAAUX,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACM,OAAD,YAAOL,CAAP,EAAS;AAACK,YAAML,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;;IASvbJ,M;;;;;;;;mBACXU,gB;8BAAiBC,C,EAAG;AAClB,WAAKC,KAAL,CAAWC,IAAX,CAAgB,cAAhB,EAAgC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhD,EAAqD;AACnDC,cAAML,EAAEM,MAAF,CAASC;AADoC,OAArD;AAGD;;;;;mBACDC,iB;+BAAkBR,C,EAAG;AACnB,WAAKC,KAAL,CAAWC,IAAX,CAAgB,cAAhB,EAAgC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhD,EAAqD;AACnDK,eAAOT,EAAEM,MAAF,CAASC;AADmC,OAArD;AAGD;;;;;mBACFG,M;sBAAS;AACR,UAAG,KAAKT,KAAL,CAAWE,IAAd,EAAoB;AACnB,eACK;AAAA;AAAA;AACE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACI;AAAA;AAAA;AACE;AAAO,yBAAO,KAAKF,KAAL,CAAWE,IAAX,CAAgBM,KAA9B;AAAqC,+BAAY,iBAAjD;AAAmE,4BAAU,KAAKD,iBAAL,CAAuBG,IAAvB,CAA4B,IAA5B;AAA7E;AADF;AADJ;AADF,WADF;AAQE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACI;AAAA;AAAA;AAAK,6BAAU;AAAf;AACI;AAAA;AAAA;AAAK,+BAAU;AAAf;AACE;AAAA;AAAA;AACE;AAAU,6BAAO,KAAKV,KAAL,CAAWE,IAAX,CAAgBE,IAAjC;AAAuC,mCAAY,gBAAnD;AAAoE,gCAAU,KAAKN,gBAAL,CAAsBY,IAAtB,CAA2B,IAA3B;AAA9E;AADF,mBADF;AAKI;AAAA;AAAA;AAAA;AAAA;AALJ;AADJ;AADJ;AADF;AARF,SADL;AAyBA,OA1BD,MA0BO;AACN,eACK;AAAA;AAAA;AACE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACI;AAAA;AAAA;AACI,qBAAKV,KAAL,CAAWW,cAAX,GAA4B,iBAA5B,GAAgD;AADpD;AADJ;AADF,WADF;AAQE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AAAK,2BAAU;AAAf;AACI;AAAA;AAAA;AAAK,6BAAU;AAAf;AACI;AAAA;AAAA;AAAK,+BAAU;AAAf;AACI;AAAA;AAAA;AACG,yBAAKX,KAAL,CAAWW,cAAX,GAA4B,6CAA5B,GAA4E;AAD/E;AADJ;AADJ;AADJ;AADF;AARF,SADL;AAsBE;AACH;;;;;;EA9D0BtB,MAAMuB,S;;AA+DjC;AAEDxB,OAAOyB,SAAP,GAAmB;AAClBX,QAAMP,UAAUmB,MADE;AAElBH,kBAAgBhB,UAAUoB;AAFR,CAAnB;AA1EA7B,OAAO8B,aAAP,CA+EevB,gBAAgB,YAAM;AACpC,MAAMkB,iBAAiBjB,QAAQuB,GAAR,CAAY,gBAAZ,CAAvB;AAEA,SAAO;AACNN,kCADM;AAENT,UAAML,MAAMqB,OAAN,CAAcP,cAAd,CAFA;AAGJV,UAAML,OAAOK;AAHT,GAAP;AAKA,CARc,EAQZb,MARY,CA/Ef","file":"imports/ui/Editor.js.map","sourcesContent":["import React from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Session } from 'meteor/session';\nimport PropTypes from 'prop-types';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Notes } from '../api/notes';\n\n\nexport class Editor extends React.Component {\n  handleBodyChange(e) {\n    this.props.call('notes.update', this.props.note._id, {\n      body: e.target.value\n    });\n  }\n  handleTitleChange(e) {\n    this.props.call('notes.update', this.props.note._id, {\n      title: e.target.value\n    });\n  }\n\trender() {\n\t\tif(this.props.note) {\n\t\t\treturn (\n        <div>\n          <div className=\"row wrapper border-bottom white-bg page-heading\">\n            <div className=\"col-lg-12\">\n                <h2>\n                  <input value={this.props.note.title} placeholder=\"Your title here\" onChange={this.handleTitleChange.bind(this)}/>\n                </h2>\n            </div>\n          </div>\n          <div className=\"wrapper wrapper-content animated fadeInRight\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div className=\"text-center m-t-lg\">\n                      <p>\n                        <textarea value={this.props.note.body} placeholder=\"Your note here\" onChange={this.handleBodyChange.bind(this)}></textarea>\n                      </p>\n                    \n                        <button>Delete Note</button>\n\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n        <div>\n          <div className=\"row wrapper border-bottom white-bg page-heading\">\n            <div className=\"col-lg-12\">\n                <h2>\n                  { this.props.selectedNoteId ? 'Note not found.' : 'No Note Selected.' }\n                </h2>\n            </div>\n          </div>\n          <div className=\"wrapper wrapper-content animated fadeInRight\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div className=\"text-center m-t-lg\">\n                        <small>\n                          {this.props.selectedNoteId ? 'The note you are looking for doesn\\'t exist' : 'Please click Create Note to get started.'}\n                        </small>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n\t\t\t);\n    }\n\t}\n};\n\nEditor.propTypes = {\n\tnote: PropTypes.object,\n\tselectedNoteId: PropTypes.string\n}\n\nexport default createContainer(() => {\n\tconst selectedNoteId = Session.get('selectedNoteId');\n\n\treturn {\n\t\tselectedNoteId,\n\t\tnote: Notes.findOne(selectedNoteId),\n    call: Meteor.call\n\t};\n}, Editor);\n"]},"hash":"efb5b9af385cd1ca54e9e39939bc26f8a07c3d99"}
