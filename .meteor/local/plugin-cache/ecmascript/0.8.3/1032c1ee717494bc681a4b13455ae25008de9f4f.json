{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/browser/large.js","filenameRelative":"packages/practicalmeteor:mocha/test/browser/large.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/browser/large.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/browser/large.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"large"},"ignored":false,"code":"var n = 30;\n\nwhile (n--) {\n  describe('Array ' + n, function () {\n    var arr;\n    beforeEach(function () {\n      arr = [1, 2, 3];\n    });\n    describe('#indexOf()', function () {\n      it('should return -1 when the value is not present', function () {\n        assert(-1 == arr.indexOf(5));\n      });\n      it('should return the correct index when the value is present', function (done) {\n        assert(0 == arr.indexOf(1));\n        assert(1 == arr.indexOf(2));\n        done();\n      });\n    });\n  });\n}\n\ndescribe('something', function () {\n  it('should provide a useful error', function (done) {\n    setTimeout(function () {\n      throw new Error('boom');\n      done();\n    }, 1);\n  });\n  it('should provide an even better error on phantomjs', function (done) {\n    setTimeout(function () {\n      var AssertionError = function (message, actual, expected) {\n        this.message = message;\n        this.actual = actual;\n        this.expected = expected;\n        this.showDiff = true;\n      };\n\n      AssertionError.prototype = Object.create(Error.prototype);\n      AssertionError.prototype.name = 'AssertionError';\n      AssertionError.prototype.constructor = AssertionError;\n      mocha.throwError(new AssertionError('kabooom', 'text with a typo', 'text without a typo'));\n      done();\n    }, 1);\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/browser/large.js"],"names":["n","describe","arr","beforeEach","it","assert","indexOf","done","setTimeout","Error","AssertionError","message","actual","expected","showDiff","prototype","Object","create","name","constructor","mocha","throwError"],"mappings":"AAAA,IAAIA,IAAI,EAAR;;AACA,OAAOA,GAAP,EAAY;AACVC,WAAS,WAAWD,CAApB,EAAuB,YAAU;AAC/B,QAAIE,GAAJ;AAEAC,eAAW,YAAU;AACnBD,YAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAN;AACD,KAFD;AAIAD,aAAS,YAAT,EAAuB,YAAU;AAC/BG,SAAG,gDAAH,EAAqD,YAAU;AAC7DC,eAAO,CAAC,CAAD,IAAMH,IAAII,OAAJ,CAAY,CAAZ,CAAb;AACD,OAFD;AAIAF,SAAG,2DAAH,EAAgE,UAASG,IAAT,EAAc;AAC5EF,eAAO,KAAKH,IAAII,OAAJ,CAAY,CAAZ,CAAZ;AACAD,eAAO,KAAKH,IAAII,OAAJ,CAAY,CAAZ,CAAZ;AACAC;AACD,OAJD;AAKD,KAVD;AAWD,GAlBD;AAmBD;;AAEDN,SAAS,WAAT,EAAsB,YAAU;AAC9BG,KAAG,+BAAH,EAAoC,UAASG,IAAT,EAAc;AAChDC,eAAW,YAAU;AACnB,YAAM,IAAIC,KAAJ,CAAU,MAAV,CAAN;AACAF;AACD,KAHD,EAGG,CAHH;AAID,GALD;AAOAH,KAAG,kDAAH,EAAuD,UAASG,IAAT,EAAc;AACnEC,eAAW,YAAU;AACnB,UAAIE,iBAAiB,UAASC,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AACvD,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACD,OALD;;AAMAJ,qBAAeK,SAAf,GAA2BC,OAAOC,MAAP,CAAcR,MAAMM,SAApB,CAA3B;AACAL,qBAAeK,SAAf,CAAyBG,IAAzB,GAAgC,gBAAhC;AACAR,qBAAeK,SAAf,CAAyBI,WAAzB,GAAuCT,cAAvC;AAEAU,YAAMC,UAAN,CAAiB,IAAIX,cAAJ,CAAmB,SAAnB,EAA8B,kBAA9B,EAAkD,qBAAlD,CAAjB;AACAH;AACD,KAbD,EAaG,CAbH;AAcD,GAfD;AAgBD,CAxBD","file":"packages/practicalmeteor:mocha/test/browser/large.js.map","sourcesContent":["var n = 30;\nwhile (n--) {\n  describe('Array ' + n, function(){\n    var arr;\n\n    beforeEach(function(){\n      arr = [1,2,3];\n    })\n\n    describe('#indexOf()', function(){\n      it('should return -1 when the value is not present', function(){\n        assert(-1 == arr.indexOf(5));\n      })\n\n      it('should return the correct index when the value is present', function(done){\n        assert(0 == arr.indexOf(1));\n        assert(1 == arr.indexOf(2));\n        done();\n      })\n    })\n  })\n}\n\ndescribe('something', function(){\n  it('should provide a useful error', function(done){\n    setTimeout(function(){\n      throw new Error('boom');\n      done();\n    }, 1);\n  })\n\n  it('should provide an even better error on phantomjs', function(done){\n    setTimeout(function(){\n      var AssertionError = function(message, actual, expected) {\n        this.message = message;\n        this.actual = actual;\n        this.expected = expected;\n        this.showDiff = true;\n      };\n      AssertionError.prototype = Object.create(Error.prototype);\n      AssertionError.prototype.name = 'AssertionError';\n      AssertionError.prototype.constructor = AssertionError;\n\n      mocha.throwError(new AssertionError('kabooom', 'text with a typo', 'text without a typo'));\n      done();\n    }, 1);\n  })\n})\n"]},"hash":"1032c1ee717494bc681a4b13455ae25008de9f4f"}
