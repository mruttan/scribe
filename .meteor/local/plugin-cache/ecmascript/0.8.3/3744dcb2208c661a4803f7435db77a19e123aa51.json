{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/grep.js","filenameRelative":"packages/practicalmeteor:mocha/test/grep.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/grep.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/grep.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"grep"},"ignored":false,"code":"var Mocha = require('../');\n\ndescribe('Mocha', function () {\n  describe('\"grep\" option', function () {\n    it('should add a RegExp to the mocha.options object', function () {\n      var mocha = new Mocha({\n        grep: /foo.*/\n      });\n      mocha.options.grep.toString().should.equal('/foo.*/');\n    });\n    it('should convert string to a RegExp', function () {\n      var mocha = new Mocha({\n        grep: 'foo.*'\n      });\n      mocha.options.grep.toString().should.equal('/foo.*/');\n    });\n  });\n  describe('\"fgrep\" option', function () {\n    it('should escape and convert string to a RegExp', function () {\n      var mocha = new Mocha({\n        fgrep: 'foo.*'\n      });\n      mocha.options.grep.toString().should.equal('/foo\\\\.\\\\*/');\n    });\n  });\n  describe('.grep()', function () {\n    it('should add a RegExp to the mocha.options object', function () {\n      var mocha = new Mocha();\n      mocha.grep(/foo/);\n      mocha.options.grep.toString().should.equal('/foo/');\n    });\n    it('should convert grep string to a RegExp', function () {\n      var mocha = new Mocha();\n      mocha.grep('foo');\n      mocha.options.grep.toString().should.equal('/foo/');\n    });\n    it('should return it\\'s parent Mocha object for chainability', function () {\n      var mocha = new Mocha();\n      mocha.grep().should.equal(mocha);\n    });\n  });\n  describe('\"invert\" option', function () {\n    it('should add a Boolean to the mocha.options object', function () {\n      var mocha = new Mocha({\n        invert: true\n      });\n      mocha.options.invert.should.be.ok();\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/grep.js"],"names":["Mocha","require","describe","it","mocha","grep","options","toString","should","equal","fgrep","invert","be","ok"],"mappings":"AAAA,IAAIA,QAAQC,QAAQ,KAAR,CAAZ;;AAEAC,SAAS,OAAT,EAAkB,YAAU;AAC1BA,WAAS,eAAT,EAA0B,YAAU;AAClCC,OAAG,iDAAH,EAAsD,YAAU;AAC9D,UAAIC,QAAQ,IAAIJ,KAAJ,CAAU;AAAEK,cAAM;AAAR,OAAV,CAAZ;AACAD,YAAME,OAAN,CAAcD,IAAd,CAAmBE,QAAnB,GAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,SAA3C;AACD,KAHD;AAKAN,OAAG,mCAAH,EAAwC,YAAU;AAChD,UAAIC,QAAQ,IAAIJ,KAAJ,CAAU;AAAEK,cAAM;AAAR,OAAV,CAAZ;AACAD,YAAME,OAAN,CAAcD,IAAd,CAAmBE,QAAnB,GAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,SAA3C;AACD,KAHD;AAID,GAVD;AAYAP,WAAS,gBAAT,EAA2B,YAAU;AACnCC,OAAG,8CAAH,EAAmD,YAAU;AAC3D,UAAIC,QAAQ,IAAIJ,KAAJ,CAAU;AAAEU,eAAO;AAAT,OAAV,CAAZ;AACAN,YAAME,OAAN,CAAcD,IAAd,CAAmBE,QAAnB,GAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,aAA3C;AACD,KAHD;AAID,GALD;AAOAP,WAAS,SAAT,EAAoB,YAAU;AAC5BC,OAAG,iDAAH,EAAsD,YAAU;AAC9D,UAAIC,QAAQ,IAAIJ,KAAJ,EAAZ;AACAI,YAAMC,IAAN,CAAW,KAAX;AACAD,YAAME,OAAN,CAAcD,IAAd,CAAmBE,QAAnB,GAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,OAA3C;AACD,KAJD;AAMAN,OAAG,wCAAH,EAA6C,YAAU;AACrD,UAAIC,QAAQ,IAAIJ,KAAJ,EAAZ;AACAI,YAAMC,IAAN,CAAW,KAAX;AACAD,YAAME,OAAN,CAAcD,IAAd,CAAmBE,QAAnB,GAA8BC,MAA9B,CAAqCC,KAArC,CAA2C,OAA3C;AACD,KAJD;AAMAN,OAAG,0DAAH,EAA+D,YAAU;AACvE,UAAIC,QAAQ,IAAIJ,KAAJ,EAAZ;AACAI,YAAMC,IAAN,GAAaG,MAAb,CAAoBC,KAApB,CAA0BL,KAA1B;AACD,KAHD;AAID,GAjBD;AAmBAF,WAAS,iBAAT,EAA4B,YAAU;AACpCC,OAAG,kDAAH,EAAuD,YAAU;AAC/D,UAAIC,QAAQ,IAAIJ,KAAJ,CAAU;AAAEW,gBAAQ;AAAV,OAAV,CAAZ;AACAP,YAAME,OAAN,CAAcK,MAAd,CAAqBH,MAArB,CAA4BI,EAA5B,CAA+BC,EAA/B;AACD,KAHD;AAID,GALD;AAMD,CA7CD","file":"packages/practicalmeteor:mocha/test/grep.js.map","sourcesContent":["var Mocha = require('../');\n\ndescribe('Mocha', function(){\n  describe('\"grep\" option', function(){\n    it('should add a RegExp to the mocha.options object', function(){\n      var mocha = new Mocha({ grep: /foo.*/ });\n      mocha.options.grep.toString().should.equal('/foo.*/');\n    })\n\n    it('should convert string to a RegExp', function(){\n      var mocha = new Mocha({ grep: 'foo.*' });\n      mocha.options.grep.toString().should.equal('/foo.*/');\n    })\n  })\n\n  describe('\"fgrep\" option', function(){\n    it('should escape and convert string to a RegExp', function(){\n      var mocha = new Mocha({ fgrep: 'foo.*' });\n      mocha.options.grep.toString().should.equal('/foo\\\\.\\\\*/');\n    })\n  })\n\n  describe('.grep()', function(){\n    it('should add a RegExp to the mocha.options object', function(){\n      var mocha = new Mocha;\n      mocha.grep(/foo/);\n      mocha.options.grep.toString().should.equal('/foo/');\n    })\n\n    it('should convert grep string to a RegExp', function(){\n      var mocha = new Mocha;\n      mocha.grep('foo');\n      mocha.options.grep.toString().should.equal('/foo/');\n    })\n\n    it('should return it\\'s parent Mocha object for chainability', function(){\n      var mocha = new Mocha;\n      mocha.grep().should.equal(mocha);\n    })\n  })\n\n  describe('\"invert\" option', function(){\n    it('should add a Boolean to the mocha.options object', function(){\n      var mocha = new Mocha({ invert: true });\n      mocha.options.invert.should.be.ok();\n    })\n  })\n})\n"]},"hash":"3744dcb2208c661a4803f7435db77a19e123aa51"}
