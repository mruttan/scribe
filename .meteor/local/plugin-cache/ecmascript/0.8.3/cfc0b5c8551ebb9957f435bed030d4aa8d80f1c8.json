{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/multiple.done.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/multiple.done.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/multiple.done.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/multiple.done.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"multiple.done"},"ignored":false,"code":"var assert = require('assert');\n\nvar run = require('./helpers').runMochaJSON;\n\nvar args = [];\ndescribe('multiple calls to done()', function () {\n  var res;\n  this.timeout(1000);\n  describe('from a spec', function () {\n    before(function (done) {\n      run('multiple.done.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n    it('results in failures', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n    it('throws a descriptive error', function () {\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n  describe('with multiple specs', function () {\n    before(function (done) {\n      run('multiple.done.specs.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n    it('correctly attributes the error', function () {\n      assert.equal(res.failures[0].fullTitle, 'suite test1');\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n  describe('from a before hook', function () {\n    before(function (done) {\n      run('multiple.done.before.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n    it('correctly attributes the error', function () {\n      assert.equal(res.failures[0].fullTitle, 'suite \"before all\" hook');\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n  describe('from a beforeEach hook', function () {\n    before(function (done) {\n      run('multiple.done.beforeEach.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 2);\n      assert.equal(res.code, 2);\n    });\n    it('correctly attributes the errors', function () {\n      assert.equal(res.failures.length, 2);\n      res.failures.forEach(function (failure) {\n        assert.equal(failure.fullTitle, 'suite \"before each\" hook');\n        assert.equal(failure.err.message, 'done() called multiple times');\n      });\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/multiple.done.js"],"names":["assert","require","run","runMochaJSON","args","describe","res","timeout","before","done","err","result","it","equal","stats","pending","passes","failures","code","message","fullTitle","length","forEach","failure"],"mappings":"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","file":"packages/practicalmeteor:mocha/test/integration/multiple.done.js.map","sourcesContent":["var assert = require('assert');\nvar run    = require('./helpers').runMochaJSON;\nvar args   = [];\n\ndescribe('multiple calls to done()', function() {\n  var res;\n  this.timeout(1000);\n\n  describe('from a spec', function() {\n    before(function(done) {\n      run('multiple.done.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in failures', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('throws a descriptive error', function() {\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('with multiple specs', function() {\n    before(function(done) {\n      run('multiple.done.specs.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function() {\n      assert.equal(res.failures[0].fullTitle, 'suite test1');\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('from a before hook', function() {\n    before(function(done) {\n      run('multiple.done.before.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function() {\n      assert.equal(res.failures[0].fullTitle, 'suite \"before all\" hook');\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('from a beforeEach hook', function() {\n    before(function(done) {\n      run('multiple.done.beforeEach.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 2);\n      assert.equal(res.code, 2);\n    });\n\n    it('correctly attributes the errors', function() {\n      assert.equal(res.failures.length, 2);\n      res.failures.forEach(function(failure) {\n        assert.equal(failure.fullTitle, 'suite \"before each\" hook');\n        assert.equal(failure.err.message,\n          'done() called multiple times');\n      });\n    });\n  });\n});\n"]},"hash":"cfc0b5c8551ebb9957f435bed030d4aa8d80f1c8"}
