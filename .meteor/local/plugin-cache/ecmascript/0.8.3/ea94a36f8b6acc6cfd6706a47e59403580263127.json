{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/runnable.js","filenameRelative":"packages/practicalmeteor:mocha/lib/runnable.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/runnable.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/runnable.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"runnable"},"ignored":false,"code":"/**\n * Module dependencies.\n */var EventEmitter = require('events').EventEmitter;\n\nvar Pending = require('./pending');\n\nvar debug = require('debug')('mocha:runnable');\n\nvar milliseconds = require('./ms');\n\nvar utils = require('./utils');\n\nvar inherits = utils.inherits; /**\n                                * Save timer references to avoid Sinon interfering (see GH-237).\n                                */ /* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval; /* eslint-enable no-unused-vars, no-native-reassign */ /**\n                                                                                                  * Object#toString().\n                                                                                                  */\nvar toString = Object.prototype.toString; /**\n                                           * Expose `Runnable`.\n                                           */\nmodule.exports = Runnable; /**\n                            * Initialize a new `Runnable` with the given `title` and callback `fn`.\n                            *\n                            * @param {String} title\n                            * @param {Function} fn\n                            * @api private\n                            * @param {string} title\n                            * @param {Function} fn\n                            */\n\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times');\n  this._retries = -1;\n  this._currentRetry = 0;\n} /**\n   * Inherit from `EventEmitter.prototype`.\n   */\n\ninherits(Runnable, EventEmitter); /**\n                                   * Set & get timeout `ms`.\n                                   *\n                                   * @api private\n                                   * @param {number|string} ms\n                                   * @return {Runnable|number} ms or Runnable instance.\n                                   */\n\nRunnable.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n\n  if (ms === 0) {\n    this._enableTimeouts = false;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('timeout %d', ms);\n  this._timeout = ms;\n\n  if (this.timer) {\n    this.resetTimeout();\n  }\n\n  return this;\n}; /**\n    * Set & get slow `ms`.\n    *\n    * @api private\n    * @param {number|string} ms\n    * @return {Runnable|number} ms or Runnable instance.\n    */\n\nRunnable.prototype.slow = function (ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n}; /**\n    * Set and get whether timeout is `enabled`.\n    *\n    * @api private\n    * @param {boolean} enabled\n    * @return {Runnable|boolean} enabled or Runnable instance.\n    */\n\nRunnable.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n}; /**\n    * Halt and mark as pending.\n    *\n    * @api private\n    */\n\nRunnable.prototype.skip = function () {\n  throw new Pending();\n}; /**\n    * Set number of retries.\n    *\n    * @api private\n    */\n\nRunnable.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n\n  this._retries = n;\n}; /**\n    * Get current retry\n    *\n    * @api private\n    */\n\nRunnable.prototype.currentRetry = function (n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n\n  this._currentRetry = n;\n}; /**\n    * Return the full title generated by recursively concatenating the parent's\n    * full title.\n    *\n    * @api public\n    * @return {string}\n    */\n\nRunnable.prototype.fullTitle = function () {\n  return this.parent.fullTitle() + ' ' + this.title;\n}; /**\n    * Clear the timeout.\n    *\n    * @api private\n    */\n\nRunnable.prototype.clearTimeout = function () {\n  clearTimeout(this.timer);\n}; /**\n    * Inspect the runnable void of private properties.\n    *\n    * @api private\n    * @return {string}\n    */\n\nRunnable.prototype.inspect = function () {\n  return JSON.stringify(this, function (key, val) {\n    if (key[0] === '_') {\n      return;\n    }\n\n    if (key === 'parent') {\n      return '#<Suite>';\n    }\n\n    if (key === 'ctx') {\n      return '#<Context>';\n    }\n\n    return val;\n  }, 2);\n}; /**\n    * Reset the timeout.\n    *\n    * @api private\n    */\n\nRunnable.prototype.resetTimeout = function () {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n\n  this.clearTimeout();\n  this.timer = setTimeout(function () {\n    if (!self._enableTimeouts) {\n      return;\n    }\n\n    self.callback(new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.'));\n    self.timedOut = true;\n  }, ms);\n}; /**\n    * Whitelist a list of globals for this test run.\n    *\n    * @api private\n    * @param {string[]} globals\n    */\n\nRunnable.prototype.globals = function (globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n\n  this._allowedGlobals = globals;\n}; /**\n    * Run the test and invoke `fn(err)`.\n    *\n    * @param {Function} fn\n    * @api private\n    */\n\nRunnable.prototype.run = function (fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var emitted; // Sometimes the ctx exists, but it is not runnable\n\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  } // called multiple times\n\n\n  function multiple(err) {\n    if (emitted) {\n      return;\n    }\n\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  } // finished\n\n\n  function done(err) {\n    var ms = self.timeout();\n\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err || self._trace);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.');\n    }\n\n    fn(err);\n  } // for .resetTimeout()\n\n\n  this.callback = done; // explicit async with `done` argument\n\n  if (this.async) {\n    this.resetTimeout();\n\n    if (this.allowUncaught) {\n      return callFnAsync(this.fn);\n    }\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      done(utils.getError(err));\n    }\n\n    return;\n  }\n\n  if (this.allowUncaught) {\n    callFn(this.fn);\n    done();\n    return;\n  } // sync or promise-returning\n\n\n  try {\n    if (this.pending) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    done(utils.getError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(function () {\n        done(); // Return null so libraries like bluebird do not warn about\n        // subsequently constructed Promises.\n\n        return null;\n      }, function (reason) {\n        done(reason || new Error('Promise rejected with no or falsy reason'));\n      });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    fn.call(ctx, function (err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n        }\n\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n\n      done();\n    });\n  }\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/runnable.js"],"names":["EventEmitter","require","Pending","debug","milliseconds","utils","inherits","Date","global","setTimeout","setInterval","clearTimeout","clearInterval","toString","Object","prototype","module","exports","Runnable","title","fn","async","length","sync","_timeout","_slow","_enableTimeouts","timedOut","_trace","Error","_retries","_currentRetry","timeout","ms","arguments","timer","resetTimeout","slow","enableTimeouts","enabled","skip","retries","n","currentRetry","fullTitle","parent","inspect","JSON","stringify","key","val","self","callback","globals","_allowedGlobals","run","start","ctx","finished","emitted","runnable","multiple","err","emit","done","duration","allowUncaught","callFnAsync","getError","callFn","pending","result","call","then","reason","asyncOnly"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/runnable.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('./ms');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n * @param {string} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times');\n  this._retries = -1;\n  this._currentRetry = 0;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Runnable, EventEmitter);\n\n/**\n * Set & get timeout `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms === 0) {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set & get slow `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @api private\n */\nRunnable.prototype.skip = function() {\n  throw new Pending();\n};\n\n/**\n * Set number of retries.\n *\n * @api private\n */\nRunnable.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Get current retry\n *\n * @api private\n */\nRunnable.prototype.currentRetry = function(n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function() {\n  return this.parent.fullTitle() + ' ' + this.title;\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\nRunnable.prototype.clearTimeout = function() {\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @api private\n * @return {string}\n */\nRunnable.prototype.inspect = function() {\n  return JSON.stringify(this, function(key, val) {\n    if (key[0] === '_') {\n      return;\n    }\n    if (key === 'parent') {\n      return '#<Suite>';\n    }\n    if (key === 'ctx') {\n      return '#<Context>';\n    }\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\nRunnable.prototype.resetTimeout = function() {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function() {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.'));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Whitelist a list of globals for this test run.\n *\n * @api private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function(globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunnable.prototype.run = function(fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var emitted;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (emitted) {\n      return;\n    }\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n    if (finished) {\n      return multiple(err || self._trace);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.');\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    if (this.allowUncaught) {\n      return callFnAsync(this.fn);\n    }\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      done(utils.getError(err));\n    }\n    return;\n  }\n\n  if (this.allowUncaught) {\n    callFn(this.fn);\n    done();\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.pending) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    done(utils.getError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result\n        .then(function() {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    fn.call(ctx, function(err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: '\n            + JSON.stringify(err)));\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      done();\n    });\n  }\n};\n"]},"hash":"ea94a36f8b6acc6cfd6706a47e59403580263127"}
