{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/tap.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/tap.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/tap.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/tap.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tap"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Base = require('./base'); /**\n                                  * Expose `TAP`.\n                                  */\n\nexports = module.exports = TAP; /**\n                                 * Initialize a new `TAP` reporter.\n                                 *\n                                 * @api public\n                                 * @param {Runner} runner\n                                 */\n\nfunction TAP(runner) {\n  Base.call(this, runner);\n  var n = 1;\n  var passes = 0;\n  var failures = 0;\n  runner.on('start', function () {\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n  runner.on('test end', function () {\n    ++n;\n  });\n  runner.on('pending', function (test) {\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n  runner.on('pass', function (test) {\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n  runner.on('fail', function (test, err) {\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n\n    if (err.stack) {\n      console.log(err.stack.replace(/^/gm, '  '));\n    }\n  });\n  runner.on('end', function () {\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n} /**\n   * Return a TAP-safe title of `test`\n   *\n   * @api private\n   * @param {Object} test\n   * @return {String}\n   */\n\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/tap.js"],"names":["Base","require","exports","module","TAP","runner","call","n","passes","failures","on","total","grepTotal","suite","console","log","test","title","err","stack","replace","fullTitle"],"mappings":"AAAA;;GAIA,IAAIA,OAAOC,QAAQ,QAAR,CAAX,C,CAEA;;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,GAA3B,C,CAEA;;;;;;;AAMA,SAASA,GAAT,CAAaC,MAAb,EAAqB;AACnBL,OAAKM,IAAL,CAAU,IAAV,EAAgBD,MAAhB;AAEA,MAAIE,IAAI,CAAR;AACA,MAAIC,SAAS,CAAb;AACA,MAAIC,WAAW,CAAf;AAEAJ,SAAOK,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,QAAIC,QAAQN,OAAOO,SAAP,CAAiBP,OAAOQ,KAAxB,CAAZ;AACAC,YAAQC,GAAR,CAAY,QAAZ,EAAsB,CAAtB,EAAyBJ,KAAzB;AACD,GAHD;AAKAN,SAAOK,EAAP,CAAU,UAAV,EAAsB,YAAW;AAC/B,MAAEH,CAAF;AACD,GAFD;AAIAF,SAAOK,EAAP,CAAU,SAAV,EAAqB,UAASM,IAAT,EAAe;AAClCF,YAAQC,GAAR,CAAY,mBAAZ,EAAiCR,CAAjC,EAAoCU,MAAMD,IAAN,CAApC;AACD,GAFD;AAIAX,SAAOK,EAAP,CAAU,MAAV,EAAkB,UAASM,IAAT,EAAe;AAC/BR;AACAM,YAAQC,GAAR,CAAY,UAAZ,EAAwBR,CAAxB,EAA2BU,MAAMD,IAAN,CAA3B;AACD,GAHD;AAKAX,SAAOK,EAAP,CAAU,MAAV,EAAkB,UAASM,IAAT,EAAeE,GAAf,EAAoB;AACpCT;AACAK,YAAQC,GAAR,CAAY,cAAZ,EAA4BR,CAA5B,EAA+BU,MAAMD,IAAN,CAA/B;;AACA,QAAIE,IAAIC,KAAR,EAAe;AACbL,cAAQC,GAAR,CAAYG,IAAIC,KAAJ,CAAUC,OAAV,CAAkB,KAAlB,EAAyB,IAAzB,CAAZ;AACD;AACF,GAND;AAQAf,SAAOK,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BI,YAAQC,GAAR,CAAY,cAAcP,SAASC,QAAvB,CAAZ;AACAK,YAAQC,GAAR,CAAY,YAAYP,MAAxB;AACAM,YAAQC,GAAR,CAAY,YAAYN,QAAxB;AACD,GAJD;AAKD,C,CAED;;;;;;;;AAOA,SAASQ,KAAT,CAAeD,IAAf,EAAqB;AACnB,SAAOA,KAAKK,SAAL,GAAiBD,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAAP;AACD","file":"packages/practicalmeteor:mocha/lib/reporters/tap.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction TAP(runner) {\n  Base.call(this, runner);\n\n  var n = 1;\n  var passes = 0;\n  var failures = 0;\n\n  runner.on('start', function() {\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function() {\n    ++n;\n  });\n\n  runner.on('pending', function(test) {\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function(test) {\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function(test, err) {\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) {\n      console.log(err.stack.replace(/^/gm, '  '));\n    }\n  });\n\n  runner.on('end', function() {\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @api private\n * @param {Object} test\n * @return {String}\n */\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}\n"]},"hash":"ad91540d4f64f37b2710b3b9e548627f77d1111c"}
