{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/interfaces/bdd.js","filenameRelative":"packages/practicalmeteor:mocha/lib/interfaces/bdd.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/interfaces/bdd.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/interfaces/bdd.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"bdd"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Suite = require('../suite');\n\nvar Test = require('../test');\n\nvar escapeRe = require('escape-string-regexp'); /**\n                                                 * BDD-style interface:\n                                                 *\n                                                 *      describe('Array', function() {\n                                                 *        describe('#indexOf()', function() {\n                                                 *          it('should return -1 when not present', function() {\n                                                 *            // ...\n                                                 *          });\n                                                 *\n                                                 *          it('should return the index when present', function() {\n                                                 *            // ...\n                                                 *          });\n                                                 *        });\n                                                 *      });\n                                                 *\n                                                 * @param {Suite} suite Root suite.\n                                                 */\n\nmodule.exports = function (suite) {\n  var suites = [suite];\n  suite.on('pre-require', function (context, file, mocha) {\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite); /**\n                                                                      * Describe a \"suite\" with the given `title`\n                                                                      * and callback `fn` containing nested suites\n                                                                      * and/or tests.\n                                                                      */\n\n    context.describe = context.context = function (title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    }; /**\n        * Pending describe.\n        */\n\n    context.xdescribe = context.xcontext = context.describe.skip = function (title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    }; /**\n        * Exclusive suite.\n        */\n\n    context.describe.only = function (title, fn) {\n      var suite = context.describe(title, fn);\n      mocha.grep(suite.fullTitle());\n      return suite;\n    }; /**\n        * Describe a specification or test-case\n        * with the given `title` and callback `fn`\n        * acting as a thunk.\n        */\n\n    var it = context.it = context.specify = function (title, fn) {\n      var suite = suites[0];\n\n      if (suite.pending) {\n        fn = null;\n      }\n\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    }; /**\n        * Exclusive test-case.\n        */\n\n    context.it.only = function (title, fn) {\n      var test = it(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n      return test;\n    }; /**\n        * Pending test case.\n        */\n\n    context.xit = context.xspecify = context.it.skip = function (title) {\n      context.it(title);\n    }; /**\n        * Number of attempts to retry.\n        */\n\n    context.it.retries = function (n) {\n      context.retries(n);\n    };\n  });\n};","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/interfaces/bdd.js"],"names":["Suite","require","Test","escapeRe","module","exports","suite","suites","on","context","file","mocha","common","before","after","beforeEach","afterEach","run","options","delay","runWithSuite","describe","title","fn","create","unshift","call","shift","xdescribe","xcontext","skip","pending","only","grep","fullTitle","it","specify","test","addTest","reString","RegExp","xit","xspecify","retries","n"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/interfaces/bdd.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\nvar escapeRe = require('escape-string-regexp');\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function() {\n *        describe('#indexOf()', function() {\n *          it('should return -1 when not present', function() {\n *            // ...\n *          });\n *\n *          it('should return the index when present', function() {\n *            // ...\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha) {\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function(title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe = context.xcontext = context.describe.skip = function(title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function(title, fn) {\n      var suite = context.describe(title, fn);\n      mocha.grep(suite.fullTitle());\n      return suite;\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    var it = context.it = context.specify = function(title, fn) {\n      var suite = suites[0];\n      if (suite.pending) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function(title, fn) {\n      var test = it(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n      return test;\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit = context.xspecify = context.it.skip = function(title) {\n      context.it(title);\n    };\n\n    /**\n     * Number of attempts to retry.\n     */\n    context.it.retries = function(n) {\n      context.retries(n);\n    };\n  });\n};\n"]},"hash":"6013786e44975b0ef09ee16ad480b270f7c699c4"}
