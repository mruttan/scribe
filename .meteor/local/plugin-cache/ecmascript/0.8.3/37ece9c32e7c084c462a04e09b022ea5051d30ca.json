{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"expect","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"expect"}]},{"source":"enzyme","imported":["mount"],"specifiers":[{"kind":"named","imported":"mount","local":"mount"}]},{"source":"./PrivateHeader","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PrivateHeader"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/PrivateHeader.test.js","filenameRelative":"imports/ui/PrivateHeader.test.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/PrivateHeader.test.js.map","sourceFileName":"imports/ui/PrivateHeader.test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"PrivateHeader.test"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar expect = void 0;\nmodule.watch(require(\"expect\"), {\n  \"default\": function (v) {\n    expect = v;\n  }\n}, 2);\nvar mount = void 0;\nmodule.watch(require(\"enzyme\"), {\n  mount: function (v) {\n    mount = v;\n  }\n}, 3);\nvar PrivateHeader = void 0;\nmodule.watch(require(\"./PrivateHeader\"), {\n  \"default\": function (v) {\n    PrivateHeader = v;\n  }\n}, 4);\n\nif (Meteor.isClient) {\n  describe('PrivateHeader', function () {\n    it('should set button text to logout', function () {\n      var wrapper = mount(React.createElement(PrivateHeader, {\n        title: \"Test title\",\n        handleLogout: function () {}\n      }));\n      var buttonText = wrapper.find('button').text();\n      expect(buttonText).toBe('Logout');\n    });\n    it('should use title prop as h1 text', function () {\n      var title = 'Test title here';\n      var wrapper = mount(React.createElement(PrivateHeader, {\n        title: title,\n        handleLogout: function () {}\n      }));\n      var actualTitle = wrapper.find('h1').text();\n      expect(actualTitle).toBe(title);\n    });\n    it('should call the function', function () {\n      var spy = expect.createSpy(); // spy(3, 4, 123);\n      // example of how spys are used, very basic concept, don't overthink\n\n      expect(spy).toNotHaveBeenCalled();\n    });\n    it('should call handleLogout on click', function () {\n      var spy = expect.createSpy();\n      var wrapper = mount(React.createElement(PrivateHeader, {\n        title: \"Title\",\n        handleLogout: spy\n      }));\n      wrapper.find('button').simulate('click');\n      expect(spy).toHaveBeenCalled();\n    });\n  });\n}","map":{"version":3,"sources":["imports/ui/PrivateHeader.test.js"],"names":["Meteor","module","watch","require","v","React","expect","mount","PrivateHeader","isClient","describe","it","wrapper","buttonText","find","text","toBe","title","actualTitle","spy","createSpy","toNotHaveBeenCalled","simulate","toHaveBeenCalled"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,uBAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIE,eAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,uBAASC,CAAT,EAAW;AAACE,aAAOF,CAAP;AAAS;AAArB,CAA/B,EAAsD,CAAtD;AAAyD,IAAIG,cAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACI,OAAD,YAAOH,CAAP,EAAS;AAACG,YAAMH,CAAN;AAAQ;AAAlB,CAA/B,EAAmD,CAAnD;AAAsD,IAAII,sBAAJ;AAAkBP,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAAA,uBAASC,CAAT,EAAW;AAACI,oBAAcJ,CAAd;AAAgB;AAA5B,CAAxC,EAAsE,CAAtE;;AAOjS,IAAIJ,OAAOS,QAAX,EAAqB;AACpBC,WAAS,eAAT,EAA0B,YAAY;AACrCC,OAAG,kCAAH,EAAuC,YAAY;AAClD,UAAMC,UAAUL,MAAO,oBAAC,aAAD;AAAe,eAAM,YAArB;AAAkC,sBAAc,YAAM,CAAE;AAAxD,QAAP,CAAhB;AACA,UAAMM,aAAaD,QAAQE,IAAR,CAAa,QAAb,EAAuBC,IAAvB,EAAnB;AAEAT,aAAOO,UAAP,EAAmBG,IAAnB,CAAwB,QAAxB;AACA,KALD;AAOEL,OAAG,kCAAH,EAAuC,YAAY;AACjD,UAAMM,QAAQ,iBAAd;AACA,UAAML,UAAUL,MAAO,oBAAC,aAAD;AAAe,eAAOU,KAAtB;AAA6B,sBAAc,YAAM,CAAE;AAAnD,QAAP,CAAhB;AACA,UAAMC,cAAcN,QAAQE,IAAR,CAAa,IAAb,EAAmBC,IAAnB,EAApB;AAEAT,aAAOY,WAAP,EAAoBF,IAApB,CAAyBC,KAAzB;AACD,KAND;AAQFN,OAAG,0BAAH,EAA+B,YAAW;AACtC,UAAMQ,MAAMb,OAAOc,SAAP,EAAZ,CADsC,CAEtC;AACA;;AACAd,aAAOa,GAAP,EAAYE,mBAAZ;AACD,KALH;AAOEV,OAAG,mCAAH,EAAwC,YAAY;AACrD,UAAMQ,MAAMb,OAAOc,SAAP,EAAZ;AACA,UAAMR,UAAUL,MAAO,oBAAC,aAAD;AAAe,eAAM,OAArB;AAA6B,sBAAcY;AAA3C,QAAP,CAAhB;AAEAP,cAAQE,IAAR,CAAa,QAAb,EAAuBQ,QAAvB,CAAgC,OAAhC;AAEAhB,aAAOa,GAAP,EAAYI,gBAAZ;AACA,KAPC;AAQD,GA/BF;AAgCA","file":"imports/ui/PrivateHeader.test.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport expect from 'expect';\nimport { mount } from 'enzyme';\n\nimport PrivateHeader from './PrivateHeader';\n\nif (Meteor.isClient) {\n\tdescribe('PrivateHeader', function () {\n\t\tit('should set button text to logout', function () {\n\t\t\tconst wrapper = mount( <PrivateHeader title=\"Test title\" handleLogout={() => {}}/> );\n\t\t\tconst buttonText = wrapper.find('button').text();\n\n\t\t\texpect(buttonText).toBe('Logout');\n\t\t});\n\n    it('should use title prop as h1 text', function () {\n      const title = 'Test title here';\n      const wrapper = mount( <PrivateHeader title={title} handleLogout={() => {}}/> );\n      const actualTitle = wrapper.find('h1').text();\n\n      expect(actualTitle).toBe(title);\n    });\n\n\t\tit('should call the function', function() {\n      const spy = expect.createSpy();\n      // spy(3, 4, 123);\n      // example of how spys are used, very basic concept, don't overthink\n      expect(spy).toNotHaveBeenCalled();\n    });\n\n    it('should call handleLogout on click', function () {\n\t\t\tconst spy = expect.createSpy();\n\t\t\tconst wrapper = mount( <PrivateHeader title=\"Title\" handleLogout={spy}/> );\n\n\t\t\twrapper.find('button').simulate('click');\n\n\t\t\texpect(spy).toHaveBeenCalled();\n\t\t});\n  });\n}\n"]},"hash":"37ece9c32e7c084c462a04e09b022ea5051d30ca"}
