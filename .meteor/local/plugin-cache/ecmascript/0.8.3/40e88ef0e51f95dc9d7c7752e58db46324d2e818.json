{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"expect","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"expect"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"enzyme","imported":["mount"],"specifiers":[{"kind":"named","imported":"mount","local":"mount"}]},{"source":"./NoteListHeader","imported":["NoteListHeader"],"specifiers":[{"kind":"named","imported":"NoteListHeader","local":"NoteListHeader"}]},{"source":"../fixtures/fixtures","imported":["notes"],"specifiers":[{"kind":"named","imported":"notes","local":"notes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/NoteListHeader.test.js","filenameRelative":"imports/ui/NoteListHeader.test.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/NoteListHeader.test.js.map","sourceFileName":"imports/ui/NoteListHeader.test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"NoteListHeader.test"},"ignored":false,"code":"var React = void 0;\nmodule.watch(require(\"react\"), {\n\t\"default\": function (v) {\n\t\tReact = v;\n\t}\n}, 0);\nvar expect = void 0;\nmodule.watch(require(\"expect\"), {\n\t\"default\": function (v) {\n\t\texpect = v;\n\t}\n}, 1);\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n\tMeteor: function (v) {\n\t\tMeteor = v;\n\t}\n}, 2);\nvar mount = void 0;\nmodule.watch(require(\"enzyme\"), {\n\tmount: function (v) {\n\t\tmount = v;\n\t}\n}, 3);\nvar NoteListHeader = void 0;\nmodule.watch(require(\"./NoteListHeader\"), {\n\tNoteListHeader: function (v) {\n\t\tNoteListHeader = v;\n\t}\n}, 4);\nvar notes = void 0;\nmodule.watch(require(\"../fixtures/fixtures\"), {\n\tnotes: function (v) {\n\t\tnotes = v;\n\t}\n}, 5);\n\nif (Meteor.isClient) {\n\tdescribe('NoteListHeader', function () {\n\t\tvar meteorCall = void 0;\n\t\tvar Session = void 0;\n\t\tbeforeEach(function () {\n\t\t\tmeteorCall = expect.createSpy();\n\t\t\tSession = {\n\t\t\t\tset: expect.createSpy()\n\t\t\t};\n\t\t});\n\t\tit('should call meteorCall on click', function () {\n\t\t\tvar wrapper = mount(React.createElement(NoteListHeader, {\n\t\t\t\tmeteorCall: meteorCall,\n\t\t\t\tSession: Session\n\t\t\t}));\n\t\t\twrapper.find('button').simulate('click');\n\t\t\tmeteorCall.calls[0].arguments[1](undefined, notes[0]._id);\n\t\t\texpect(meteorCall.calls[0].arguments[0]).toBe('notes.insert');\n\t\t\texpect(Session.set).toHaveBeenCalledWith('selectedNoteId', notes[0]._id);\n\t\t});\n\t\tit('should not set session for failed insert', function () {\n\t\t\tvar wrapper = mount(React.createElement(NoteListHeader, {\n\t\t\t\tmeteorCall: meteorCall,\n\t\t\t\tSession: Session\n\t\t\t}));\n\t\t\twrapper.find('button').simulate('click');\n\t\t\tmeteorCall.calls[0].arguments[1]({}, undefined);\n\t\t\texpect(meteorCall.calls[0].arguments[0]).toBe('notes.insert');\n\t\t\texpect(Session.set).toNotHaveBeenCalled();\n\t\t});\n\t});\n}\n\n;","map":{"version":3,"sources":["imports/ui/NoteListHeader.test.js"],"names":["React","module","watch","require","v","expect","Meteor","mount","NoteListHeader","notes","isClient","describe","meteorCall","Session","beforeEach","createSpy","set","it","wrapper","find","simulate","calls","arguments","undefined","_id","toBe","toHaveBeenCalledWith","toNotHaveBeenCalled"],"mappings":"AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA,sBAASC,CAAT,EAAW;AAACJ,UAAMI,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,eAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,sBAASC,CAAT,EAAW;AAACC,WAAOD,CAAP;AAAS;AAArB,CAA/B,EAAsD,CAAtD;AAAyD,IAAIE,eAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,OAAD,YAAQF,CAAR,EAAU;AAACE,WAAOF,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIG,cAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACI,MAAD,YAAOH,CAAP,EAAS;AAACG,UAAMH,CAAN;AAAQ;AAAlB,CAA/B,EAAmD,CAAnD;AAAsD,IAAII,uBAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACK,eAAD,YAAgBJ,CAAhB,EAAkB;AAACI,mBAAeJ,CAAf;AAAiB;AAApC,CAAzC,EAA+E,CAA/E;AAAkF,IAAIK,cAAJ;AAAUR,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACM,MAAD,YAAOL,CAAP,EAAS;AAACK,UAAML,CAAN;AAAQ;AAAlB,CAA7C,EAAiE,CAAjE;;AAQ9X,IAAIE,OAAOI,QAAX,EAAqB;AACpBC,UAAS,gBAAT,EAA2B,YAAY;AACtC,MAAIC,mBAAJ;AACA,MAAIC,gBAAJ;AAEAC,aAAW,YAAY;AACtBF,gBAAaP,OAAOU,SAAP,EAAb;AACAF,aAAU;AACTG,SAAKX,OAAOU,SAAP;AADI,IAAV;AAGA,GALD;AAOAE,KAAG,iCAAH,EAAsC,YAAY;AACjD,OAAMC,UAAUX,MAAM,oBAAC,cAAD;AAAgB,gBAAYK,UAA5B;AAAwC,aAASC;AAAjD,KAAN,CAAhB;AAEAK,WAAQC,IAAR,CAAa,QAAb,EAAuBC,QAAvB,CAAgC,OAAhC;AACAR,cAAWS,KAAX,CAAiB,CAAjB,EAAoBC,SAApB,CAA8B,CAA9B,EAAiCC,SAAjC,EAA4Cd,MAAM,CAAN,EAASe,GAArD;AAEAnB,UAAOO,WAAWS,KAAX,CAAiB,CAAjB,EAAoBC,SAApB,CAA8B,CAA9B,CAAP,EAAyCG,IAAzC,CAA8C,cAA9C;AACApB,UAAOQ,QAAQG,GAAf,EAAoBU,oBAApB,CAAyC,gBAAzC,EAA2DjB,MAAM,CAAN,EAASe,GAApE;AACA,GARD;AAUAP,KAAG,0CAAH,EAA+C,YAAY;AAC1D,OAAMC,UAAUX,MAAM,oBAAC,cAAD;AAAgB,gBAAYK,UAA5B;AAAwC,aAASC;AAAjD,KAAN,CAAhB;AAEAK,WAAQC,IAAR,CAAa,QAAb,EAAuBC,QAAvB,CAAgC,OAAhC;AACAR,cAAWS,KAAX,CAAiB,CAAjB,EAAoBC,SAApB,CAA8B,CAA9B,EAAiC,EAAjC,EAAqCC,SAArC;AAEAlB,UAAOO,WAAWS,KAAX,CAAiB,CAAjB,EAAoBC,SAApB,CAA8B,CAA9B,CAAP,EAAyCG,IAAzC,CAA8C,cAA9C;AACApB,UAAOQ,QAAQG,GAAf,EAAoBW,mBAApB;AACA,GARD;AASA,EA9BD;AA+BA;;AAAA","file":"imports/ui/NoteListHeader.test.js.map","sourcesContent":["import React from 'react';\nimport expect from 'expect';\nimport { Meteor } from 'meteor/meteor';\nimport { mount } from 'enzyme';\n\nimport { NoteListHeader } from './NoteListHeader';\nimport { notes } from '../fixtures/fixtures';\n\nif (Meteor.isClient) {\n\tdescribe('NoteListHeader', function () {\n\t\tlet meteorCall;\n\t\tlet Session;\n\n\t\tbeforeEach(function () {\n\t\t\tmeteorCall = expect.createSpy();\n\t\t\tSession = {\n\t\t\t\tset: expect.createSpy()\n\t\t\t}\n\t\t});\n\n\t\tit('should call meteorCall on click', function () {\n\t\t\tconst wrapper = mount(<NoteListHeader meteorCall={meteorCall} Session={Session}/>);\n\n\t\t\twrapper.find('button').simulate('click');\n\t\t\tmeteorCall.calls[0].arguments[1](undefined, notes[0]._id);\n\n\t\t\texpect(meteorCall.calls[0].arguments[0]).toBe('notes.insert');\n\t\t\texpect(Session.set).toHaveBeenCalledWith('selectedNoteId', notes[0]._id);\n\t\t});\n\n\t\tit('should not set session for failed insert', function () {\n\t\t\tconst wrapper = mount(<NoteListHeader meteorCall={meteorCall} Session={Session}/>);\n\n\t\t\twrapper.find('button').simulate('click');\n\t\t\tmeteorCall.calls[0].arguments[1]({}, undefined);\n\n\t\t\texpect(meteorCall.calls[0].arguments[0]).toBe('notes.insert');\n\t\t\texpect(Session.set).toNotHaveBeenCalled();\n\t\t});\n\t});\n};\n"]},"hash":"40e88ef0e51f95dc9d7c7752e58db46324d2e818"}
