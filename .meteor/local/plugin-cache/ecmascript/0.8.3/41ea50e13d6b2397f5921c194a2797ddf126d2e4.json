{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"diffs"},"ignored":false,"code":"var fs = require('fs');\n\nvar assert = require('assert');\n\nvar cssin = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.in', 'ascii');\nvar cssout = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.out', 'ascii');\ndescribe('diffs', function () {\n  var actual, expected;\n  it('should display a diff for small strings', function () {\n    actual = 'foo rar baz';\n    expected = 'foo bar baz';\n    actual.should.equal(expected);\n  });\n  it('should display a diff of canonicalized objects', function () {\n    actual = {\n      name: 'travis j',\n      age: 23\n    };\n    expected = {\n      age: 23,\n      name: 'travis'\n    };\n    actual.should.equal(expected);\n  });\n  it('should display a diff for medium strings', function () {\n    actual = 'foo bar baz\\nfoo rar baz\\nfoo bar raz';\n    expected = 'foo bar baz\\nfoo bar baz\\nfoo bar baz';\n    actual.should.equal(expected);\n  });\n  it('should display a diff for entire object dumps', function () {\n    actual = {\n      name: 'joel',\n      age: 30,\n      address: {\n        city: 'new york',\n        country: 'usa'\n      }\n    };\n    expected = {\n      name: 'joe',\n      age: 30,\n      address: {\n        city: 'new york',\n        country: 'us'\n      }\n    };\n    actual.should.equal(expected);\n  });\n  it('should display a diff for multi-line strings', function () {\n    actual = 'one two three\\nfour zzzz six\\nseven eight nine';\n    expected = 'one two three\\nfour five six\\nseven eight nine';\n    actual.should.equal(expected);\n  });\n  it('should display a diff for entire object dumps', function () {\n    actual = {\n      name: 'joel',\n      age: 30,\n      address: {\n        city: 'new york',\n        country: 'usa'\n      }\n    };\n    expected = {\n      name: 'joe',\n      age: 30,\n      address: {\n        city: 'new york',\n        country: 'us'\n      }\n    };\n    actual.should.equal(expected);\n  });\n  it('should display a full-comparison with escaped special characters', function () {\n    actual = 'one\\ttab\\ntwo\\t\\t\\ttabs';\n    expected = 'one\\ttab\\ntwo\\t\\ttabs';\n    actual.should.equal(expected);\n  });\n  it('should display a word diff for large strings', function () {\n    cssin.should.equal(cssout);\n  });\n  it('should work with objects', function () {\n    actual = {\n      name: 'tobi',\n      species: 'ferret',\n      color: 'white',\n      age: 2\n    };\n    expected = {\n      name: 'loki',\n      species: 'ferret',\n      color: 'brown',\n      age: 2\n    };\n    actual.should.eql(expected);\n  });\n  it('should show value diffs and not be affected by commas', function () {\n    actual = {\n      a: 123\n    };\n    expected = {\n      a: 123,\n      b: 456\n    };\n    actual.should.equal(expected);\n  });\n  it('should display diff by data and not like an objects', function () {\n    actual = new Buffer([0x01]);\n    expected = new Buffer([0x02]);\n    actual.should.equal(expected);\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js"],"names":["fs","require","assert","cssin","readFileSync","cssout","describe","actual","expected","it","should","equal","name","age","address","city","country","species","color","eql","a","b","Buffer"],"mappings":"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","file":"packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js.map","sourcesContent":["var fs     = require('fs');\nvar assert = require('assert');\nvar cssin  = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.in', 'ascii');\nvar cssout = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.out', 'ascii');\n\ndescribe('diffs', function() {\n  var actual, expected;\n\n  it('should display a diff for small strings', function() {\n    actual = 'foo rar baz';\n    expected = 'foo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff of canonicalized objects', function() {\n    actual = { name: 'travis j', age: 23 };\n    expected = { age: 23, name: 'travis' };\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for medium strings', function() {\n    actual = 'foo bar baz\\nfoo rar baz\\nfoo bar raz';\n    expected = 'foo bar baz\\nfoo bar baz\\nfoo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function() {\n    actual   = { name: 'joel', age: 30, address: {city: 'new york', country: 'usa' }};\n    expected = { name: 'joe',  age: 30, address: {city: 'new york', country: 'us'  }};\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for multi-line strings', function() {\n    actual   = 'one two three\\nfour zzzz six\\nseven eight nine';\n    expected = 'one two three\\nfour five six\\nseven eight nine';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function() {\n    actual   = { name: 'joel', age: 30, address: {city: 'new york', country: 'usa' }};\n    expected = { name: 'joe',  age: 30, address: {city: 'new york', country: 'us'  }}\n    actual.should.equal(expected);\n  });\n\n  it('should display a full-comparison with escaped special characters', function() {\n    actual   = 'one\\ttab\\ntwo\\t\\t\\ttabs';\n    expected = 'one\\ttab\\ntwo\\t\\ttabs';\n    actual.should.equal(expected);\n  });\n\n  it('should display a word diff for large strings', function() {\n    cssin.should.equal(cssout);\n  });\n\n  it('should work with objects', function() {\n    actual = {\n      name: 'tobi',\n      species: 'ferret',\n      color: 'white',\n      age: 2\n    };\n\n    expected = {\n      name: 'loki',\n      species: 'ferret',\n      color: 'brown',\n      age: 2\n    };\n\n    actual.should.eql(expected);\n  });\n\n  it('should show value diffs and not be affected by commas', function() {\n    actual = { a: 123 };\n    expected = { a: 123, b: 456 };\n    actual.should.equal(expected);\n  });\n\n  it('should display diff by data and not like an objects', function() {\n    actual = new Buffer([0x01]);\n    expected = new Buffer([0x02]);\n    actual.should.equal(expected);\n  });\n});\n"]},"hash":"41ea50e13d6b2397f5921c194a2797ddf126d2e4"}
