{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"uncaught"},"ignored":false,"code":"'use strict'; /**\n               * This file should only generate one failure per spec despite the fact that\n               * Mocha is capable of detecting two distinct exceptions during test execution.\n               */\n\nit('fails exactly once when a global error is thrown first', function (done) {\n  setTimeout(function () {\n    throw new Error('global error');\n    setTimeout(function () {\n      done(new Error('test error'));\n    }, 0);\n  }, 0);\n});\nit('fails exactly once when a global error is thrown second', function (done) {\n  setTimeout(function () {\n    done(new Error('test error'));\n  }, 0);\n  setTimeout(function () {\n    throw new Error('global error');\n  }, 0);\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js"],"names":["it","done","setTimeout","Error"],"mappings":"AAAA,a,CAEA;;;;;AAKAA,GAAG,wDAAH,EAA6D,UAASC,IAAT,EAAe;AAC1EC,aAAW,YAAW;AACpB,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AAEAD,eAAW,YAAW;AACpBD,WAAK,IAAIE,KAAJ,CAAU,YAAV,CAAL;AACD,KAFD,EAEG,CAFH;AAGD,GAND,EAMG,CANH;AAOD,CARD;AAUAH,GAAG,yDAAH,EAA8D,UAASC,IAAT,EAAe;AAC3EC,aAAW,YAAW;AACpBD,SAAK,IAAIE,KAAJ,CAAU,YAAV,CAAL;AACD,GAFD,EAEG,CAFH;AAIAD,aAAW,YAAW;AACpB,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD,GAFD,EAEG,CAFH;AAGD,CARD","file":"packages/practicalmeteor:mocha/test/integration/fixtures/uncaught.js.map","sourcesContent":["'use strict';\n\n/**\n * This file should only generate one failure per spec despite the fact that\n * Mocha is capable of detecting two distinct exceptions during test execution.\n */\n\nit('fails exactly once when a global error is thrown first', function(done) {\n  setTimeout(function() {\n    throw new Error('global error');\n\n    setTimeout(function() {\n      done(new Error('test error'));\n    }, 0);\n  }, 0);\n});\n\nit('fails exactly once when a global error is thrown second', function(done) {\n  setTimeout(function() {\n    done(new Error('test error'));\n  }, 0);\n\n  setTimeout(function() {\n    throw new Error('global error');\n  }, 0);\n});\n"]},"hash":"40e0f04688081dd59ac634c284fd1e6b0c44cf76"}
