{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/test.js","filenameRelative":"packages/practicalmeteor:mocha/test/test.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/test.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"test"},"ignored":false,"code":"var mocha = require('../'),\n    Context = mocha.Context,\n    Test = mocha.Test;\n\ndescribe('Test', function () {\n  describe('.clone()', function () {\n    beforeEach(function () {\n      this._test = new Test('To be cloned', function () {});\n      this._test._timeout = 3043;\n      this._test._slow = 101;\n      this._test._enableTimeouts = true;\n      this._test._retries = 3;\n      this._test._currentRetry = 1;\n      this._test._allowedGlobals = ['foo'];\n      this._test.parent = 'foo';\n      this._test.file = 'bar';\n    });\n    it('should copy the title', function () {\n      this._test.clone().title.should.equal('To be cloned');\n    });\n    it('should copy the timeout value', function () {\n      this._test.clone().timeout().should.equal(3043);\n    });\n    it('should copy the slow value', function () {\n      this._test.clone().slow().should.equal(101);\n    });\n    it('should copy the enableTimeouts value', function () {\n      this._test.clone().enableTimeouts().should.be.true();\n    });\n    it('should copy the retries value', function () {\n      this._test.clone().retries().should.equal(3);\n    });\n    it('should copy the currentRetry value', function () {\n      this._test.clone().currentRetry().should.equal(1);\n    });\n    it('should copy the globals value', function () {\n      this._test.clone().globals().should.not.be.empty();\n    });\n    it('should copy the parent value', function () {\n      this._test.clone().parent.should.equal('foo');\n    });\n    it('should copy the file value', function () {\n      this._test.clone().file.should.equal('bar');\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/test.js"],"names":["mocha","require","Context","Test","describe","beforeEach","_test","_timeout","_slow","_enableTimeouts","_retries","_currentRetry","_allowedGlobals","parent","file","it","clone","title","should","equal","timeout","slow","enableTimeouts","be","true","retries","currentRetry","globals","not","empty"],"mappings":"AAAA,IAAIA,QAAQC,QAAQ,KAAR,CAAZ;AAAA,IACIC,UAAUF,MAAME,OADpB;AAAA,IAEIC,OAAOH,MAAMG,IAFjB;;AAIAC,SAAS,MAAT,EAAiB,YAAU;AACzBA,WAAS,UAAT,EAAqB,YAAU;AAC7BC,eAAW,YAAU;AACnB,WAAKC,KAAL,GAAa,IAAIH,IAAJ,CAAS,cAAT,EAAyB,YAAY,CAAE,CAAvC,CAAb;AACA,WAAKG,KAAL,CAAWC,QAAX,GAAsB,IAAtB;AACA,WAAKD,KAAL,CAAWE,KAAX,GAAmB,GAAnB;AACA,WAAKF,KAAL,CAAWG,eAAX,GAA6B,IAA7B;AACA,WAAKH,KAAL,CAAWI,QAAX,GAAsB,CAAtB;AACA,WAAKJ,KAAL,CAAWK,aAAX,GAA2B,CAA3B;AACA,WAAKL,KAAL,CAAWM,eAAX,GAA6B,CAAC,KAAD,CAA7B;AACA,WAAKN,KAAL,CAAWO,MAAX,GAAoB,KAApB;AACA,WAAKP,KAAL,CAAWQ,IAAX,GAAkB,KAAlB;AACD,KAVD;AAYAC,OAAG,uBAAH,EAA4B,YAAU;AACpC,WAAKT,KAAL,CAAWU,KAAX,GAAmBC,KAAnB,CAAyBC,MAAzB,CAAgCC,KAAhC,CAAsC,cAAtC;AACD,KAFD;AAIAJ,OAAG,+BAAH,EAAoC,YAAU;AAC5C,WAAKT,KAAL,CAAWU,KAAX,GAAmBI,OAAnB,GAA6BF,MAA7B,CAAoCC,KAApC,CAA0C,IAA1C;AACD,KAFD;AAIAJ,OAAG,4BAAH,EAAiC,YAAU;AACzC,WAAKT,KAAL,CAAWU,KAAX,GAAmBK,IAAnB,GAA0BH,MAA1B,CAAiCC,KAAjC,CAAuC,GAAvC;AACD,KAFD;AAIAJ,OAAG,sCAAH,EAA2C,YAAU;AACnD,WAAKT,KAAL,CAAWU,KAAX,GAAmBM,cAAnB,GAAoCJ,MAApC,CAA2CK,EAA3C,CAA8CC,IAA9C;AACD,KAFD;AAIAT,OAAG,+BAAH,EAAoC,YAAU;AAC5C,WAAKT,KAAL,CAAWU,KAAX,GAAmBS,OAAnB,GAA6BP,MAA7B,CAAoCC,KAApC,CAA0C,CAA1C;AACD,KAFD;AAIAJ,OAAG,oCAAH,EAAyC,YAAU;AACjD,WAAKT,KAAL,CAAWU,KAAX,GAAmBU,YAAnB,GAAkCR,MAAlC,CAAyCC,KAAzC,CAA+C,CAA/C;AACD,KAFD;AAIAJ,OAAG,+BAAH,EAAoC,YAAU;AAC5C,WAAKT,KAAL,CAAWU,KAAX,GAAmBW,OAAnB,GAA6BT,MAA7B,CAAoCU,GAApC,CAAwCL,EAAxC,CAA2CM,KAA3C;AACD,KAFD;AAIAd,OAAG,8BAAH,EAAmC,YAAU;AAC3C,WAAKT,KAAL,CAAWU,KAAX,GAAmBH,MAAnB,CAA0BK,MAA1B,CAAiCC,KAAjC,CAAuC,KAAvC;AACD,KAFD;AAIAJ,OAAG,4BAAH,EAAiC,YAAU;AACzC,WAAKT,KAAL,CAAWU,KAAX,GAAmBF,IAAnB,CAAwBI,MAAxB,CAA+BC,KAA/B,CAAqC,KAArC;AACD,KAFD;AAGD,GAhDD;AAiDD,CAlDD","file":"packages/practicalmeteor:mocha/test/test.js.map","sourcesContent":["var mocha = require('../')\n  , Context = mocha.Context\n  , Test = mocha.Test;\n\ndescribe('Test', function(){\n  describe('.clone()', function(){\n    beforeEach(function(){\n      this._test = new Test('To be cloned', function () {});\n      this._test._timeout = 3043;\n      this._test._slow = 101;\n      this._test._enableTimeouts = true;\n      this._test._retries = 3;\n      this._test._currentRetry = 1;\n      this._test._allowedGlobals = ['foo'];\n      this._test.parent = 'foo';\n      this._test.file = 'bar';\n    });\n\n    it('should copy the title', function(){\n      this._test.clone().title.should.equal('To be cloned');\n    });\n\n    it('should copy the timeout value', function(){\n      this._test.clone().timeout().should.equal(3043);\n    });\n\n    it('should copy the slow value', function(){\n      this._test.clone().slow().should.equal(101);\n    });\n\n    it('should copy the enableTimeouts value', function(){\n      this._test.clone().enableTimeouts().should.be.true();\n    });\n\n    it('should copy the retries value', function(){\n      this._test.clone().retries().should.equal(3);\n    });\n\n    it('should copy the currentRetry value', function(){\n      this._test.clone().currentRetry().should.equal(1);\n    });\n\n    it('should copy the globals value', function(){\n      this._test.clone().globals().should.not.be.empty();\n    });\n\n    it('should copy the parent value', function(){\n      this._test.clone().parent.should.equal('foo');\n    });\n\n    it('should copy the file value', function(){\n      this._test.clone().file.should.equal('bar');\n    });\n  });\n});\n"]},"hash":"487656afbdac38f1724bac1fdbad85e00f665e2a"}
