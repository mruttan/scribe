{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/http.meta.js","filenameRelative":"packages/practicalmeteor:mocha/test/http.meta.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/http.meta.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/http.meta.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"http.meta"},"ignored":false,"code":"var http = require('http');\n\nvar PORT = 8889;\nvar server = http.createServer(function (req, res) {\n  var accept = req.headers.accept || '',\n      json = ~accept.indexOf('json');\n\n  switch (req.url) {\n    case '/':\n      res.end('hello');\n      break;\n\n    case '/users':\n      if (json) {\n        res.end('[\"tobi\",\"loki\",\"jane\"]');\n      } else {\n        res.end('tobi, loki, jane');\n      }\n\n      break;\n  }\n});\n\nfunction get(url, body, header) {\n  return function (done) {\n    http.get({\n      path: url,\n      port: PORT,\n      headers: header || {}\n    }, function (res) {\n      var buf = '';\n      res.should.have.property('statusCode', 200);\n      res.setEncoding('utf8');\n      res.on('data', function (chunk) {\n        buf += chunk;\n      });\n      res.on('end', function () {\n        buf.should.equal(body);\n        done();\n      });\n    });\n  };\n}\n\ndescribe('http requests', function () {\n  before(function (done) {\n    server.listen(PORT, done);\n  });\n  after(function () {\n    server.close();\n  });\n  describe('GET /', function () {\n    it('should respond with hello', get('/', 'hello'));\n  });\n  describe('GET /users', function () {\n    it('should respond with users', get('/users', 'tobi, loki, jane'));\n    it('should respond with users', get('/users', '[\"tobi\",\"loki\",\"jane\"]', {\n      Accept: 'application/json'\n    }));\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/http.meta.js"],"names":["http","require","PORT","server","createServer","req","res","accept","headers","json","indexOf","url","end","get","body","header","done","path","port","buf","should","have","property","setEncoding","on","chunk","equal","describe","before","listen","after","close","it","Accept"],"mappings":"AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,OAAO,IAAX;AAEA,IAAIC,SAASH,KAAKI,YAAL,CAAkB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAC/C,MAAIC,SAASF,IAAIG,OAAJ,CAAYD,MAAZ,IAAsB,EAAnC;AAAA,MACIE,OAAO,CAACF,OAAOG,OAAP,CAAe,MAAf,CADZ;;AAGA,UAAQL,IAAIM,GAAZ;AACE,SAAK,GAAL;AACEL,UAAIM,GAAJ,CAAQ,OAAR;AACA;;AACF,SAAK,QAAL;AACE,UAAIH,IAAJ,EAAU;AACRH,YAAIM,GAAJ,CAAQ,wBAAR;AACD,OAFD,MAEO;AACLN,YAAIM,GAAJ,CAAQ,kBAAR;AACD;;AACD;AAVJ;AAYD,CAhBY,CAAb;;AAmBA,SAASC,GAAT,CAAaF,GAAb,EAAkBG,IAAlB,EAAwBC,MAAxB,EAAgC;AAC9B,SAAO,UAASC,IAAT,EAAc;AACnBhB,SAAKa,GAAL,CAAS;AAAEI,YAAMN,GAAR;AAAaO,YAAMhB,IAAnB;AAAyBM,eAASO,UAAU;AAA5C,KAAT,EAA0D,UAAST,GAAT,EAAa;AACrE,UAAIa,MAAM,EAAV;AACAb,UAAIc,MAAJ,CAAWC,IAAX,CAAgBC,QAAhB,CAAyB,YAAzB,EAAuC,GAAvC;AACAhB,UAAIiB,WAAJ,CAAgB,MAAhB;AACAjB,UAAIkB,EAAJ,CAAO,MAAP,EAAe,UAASC,KAAT,EAAe;AAAEN,eAAOM,KAAP;AAAc,OAA9C;AACAnB,UAAIkB,EAAJ,CAAO,KAAP,EAAc,YAAU;AACtBL,YAAIC,MAAJ,CAAWM,KAAX,CAAiBZ,IAAjB;AACAE;AACD,OAHD;AAID,KATD;AAUD,GAXD;AAYD;;AAEDW,SAAS,eAAT,EAA0B,YAAY;AAEpCC,SAAO,UAASZ,IAAT,EAAe;AACpBb,WAAO0B,MAAP,CAAc3B,IAAd,EAAoBc,IAApB;AACD,GAFD;AAIAc,QAAM,YAAW;AACf3B,WAAO4B,KAAP;AACD,GAFD;AAIAJ,WAAS,OAAT,EAAkB,YAAY;AAC5BK,OAAG,2BAAH,EACEnB,IAAI,GAAJ,EAAS,OAAT,CADF;AAED,GAHD;AAKAc,WAAS,YAAT,EAAuB,YAAU;AAC/BK,OAAG,2BAAH,EACEnB,IAAI,QAAJ,EAAc,kBAAd,CADF;AAGAmB,OAAG,2BAAH,EACEnB,IAAI,QAAJ,EAAc,wBAAd,EAAwC;AAAEoB,cAAQ;AAAV,KAAxC,CADF;AAED,GAND;AAOD,CAtBD","file":"packages/practicalmeteor:mocha/test/http.meta.js.map","sourcesContent":["var http = require('http');\n\nvar PORT = 8889;\n\nvar server = http.createServer(function(req, res){\n  var accept = req.headers.accept || ''\n    , json = ~accept.indexOf('json');\n\n  switch (req.url) {\n    case '/':\n      res.end('hello');\n      break;\n    case '/users':\n      if (json) {\n        res.end('[\"tobi\",\"loki\",\"jane\"]');\n      } else {\n        res.end('tobi, loki, jane');\n      }\n      break;\n  }\n});\n\n\nfunction get(url, body, header) {\n  return function(done){\n    http.get({ path: url, port: PORT, headers: header || {}}, function(res){\n      var buf = '';\n      res.should.have.property('statusCode', 200);\n      res.setEncoding('utf8');\n      res.on('data', function(chunk){ buf += chunk });\n      res.on('end', function(){\n        buf.should.equal(body);\n        done();\n      });\n    })\n  }\n}\n\ndescribe('http requests', function () {\n\n  before(function(done) {\n    server.listen(PORT, done);\n  });\n\n  after(function() {\n    server.close();\n  });\n\n  describe('GET /', function () {\n    it('should respond with hello',\n      get('/', 'hello'))\n  })\n\n  describe('GET /users', function(){\n    it('should respond with users',\n      get('/users', 'tobi, loki, jane'))\n\n    it('should respond with users',\n      get('/users', '[\"tobi\",\"loki\",\"jane\"]', { Accept: 'application/json' }))\n  })\n})\n"]},"hash":"c42a8016ae891bb3b79b4b324c92142b0bd838cb"}
