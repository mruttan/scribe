{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/practicalmeteor:chai","imported":["expect"],"specifiers":[{"kind":"named","imported":"expect","local":"expect"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","filenameRelative":"packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js.map","sourceFileName":"packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"mocha-globals-tests"},"ignored":false,"code":"var expect = void 0;\nmodule.watch(require(\"meteor/practicalmeteor:chai\"), {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\ndescribe('Globals', function () {\n  before(function () {\n    return console.log('before');\n  });\n  after(function () {\n    return console.log('after');\n  });\n  beforeEach(function () {\n    return console.log('beforeEach');\n  });\n  afterEach(function () {\n    return console.log('afterEach');\n  });\n  it('passing', function () {\n    return expect(true).to.be[\"true\"];\n  });\n  it('throwing', function () {\n    return expect(false).to.be[\"true\"];\n  });\n  specify(\"it works\", function () {\n    expect(true).to.be.true;\n  });\n  xspecify(\"Skip: This won't run (xspecify)\", function () {\n    throw new Error(\"This won't run\");\n  });\n  xdescribe('Skip suite (xdescribe)', function () {\n    return it(\"this won't run\", function () {\n      throw new Error(\"This is an error\");\n    });\n  });\n  context(\"Context test\", function () {\n    it(\"it works\", function () {\n      expect(true).to.be.true;\n    });\n  });\n  xcontext(\"Skip suite (xcontext)\", function () {\n    it(\"This won't run\", function () {\n      throw new Error(\"This won't run\");\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js"],"names":["expect","module","watch","require","v","describe","before","console","log","after","beforeEach","afterEach","it","to","be","specify","true","xspecify","Error","xdescribe","context","xcontext"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAApD,EAA0E,CAA1E;AAEXC,SAAS,SAAT,EAAoB,YAAW;AAE7BC,SAAO,YAAW;AAChB,WAAOC,QAAQC,GAAR,CAAY,QAAZ,CAAP;AACD,GAFD;AAGAC,QAAM,YAAW;AACf,WAAOF,QAAQC,GAAR,CAAY,OAAZ,CAAP;AACD,GAFD;AAGAE,aAAW,YAAW;AACpB,WAAOH,QAAQC,GAAR,CAAY,YAAZ,CAAP;AACD,GAFD;AAGAG,YAAU,YAAW;AACnB,WAAOJ,QAAQC,GAAR,CAAY,WAAZ,CAAP;AACD,GAFD;AAGAI,KAAG,SAAH,EAAc,YAAW;AACvB,WAAOZ,OAAO,IAAP,EAAaa,EAAb,CAAgBC,EAAhB,CAAmB,MAAnB,CAAP;AACD,GAFD;AAGAF,KAAG,UAAH,EAAe,YAAW;AACxB,WAAOZ,OAAO,KAAP,EAAca,EAAd,CAAiBC,EAAjB,CAAoB,MAApB,CAAP;AACD,GAFD;AAIAC,UAAQ,UAAR,EAAoB,YAAY;AAC9Bf,WAAO,IAAP,EAAaa,EAAb,CAAgBC,EAAhB,CAAmBE,IAAnB;AACD,GAFD;AAIAC,WAAS,iCAAT,EAA4C,YAAY;AACtD,UAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,GAFD;AAIAC,YAAU,wBAAV,EAAoC,YAAW;AAC7C,WAAOP,GAAG,gBAAH,EAAqB,YAAW;AACrC,YAAM,IAAIM,KAAJ,CAAU,kBAAV,CAAN;AACD,KAFM,CAAP;AAGD,GAJD;AAMAE,UAAQ,cAAR,EAAwB,YAAY;AAClCR,OAAG,UAAH,EAAe,YAAY;AACzBZ,aAAO,IAAP,EAAaa,EAAb,CAAgBC,EAAhB,CAAmBE,IAAnB;AACD,KAFD;AAGD,GAJD;AAMAK,WAAS,uBAAT,EAAkC,YAAY;AAE5CT,OAAG,gBAAH,EAAqB,YAAY;AAC/B,YAAM,IAAIM,KAAJ,CAAU,gBAAV,CAAN;AACD,KAFD;AAGD,GALD;AAOD,CAhDD","file":"packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js.map","sourcesContent":["import {expect} from \"meteor/practicalmeteor:chai\"\n\ndescribe('Globals', function() {\n\n  before(function() {\n    return console.log('before');\n  });\n  after(function() {\n    return console.log('after');\n  });\n  beforeEach(function() {\n    return console.log('beforeEach');\n  });\n  afterEach(function() {\n    return console.log('afterEach');\n  });\n  it('passing', function() {\n    return expect(true).to.be[\"true\"];\n  });\n  it('throwing', function() {\n    return expect(false).to.be[\"true\"];\n  });\n\n  specify(\"it works\", function () {\n    expect(true).to.be.true;\n  });\n\n  xspecify(\"Skip: This won't run (xspecify)\", function () {\n    throw new Error(\"This won't run\")\n  });\n\n  xdescribe('Skip suite (xdescribe)', function() {\n    return it(\"this won't run\", function() {\n      throw new Error(\"This is an error\");\n    });\n  });\n\n  context(\"Context test\", function () {\n    it(\"it works\", function () {\n      expect(true).to.be.true;\n    });\n  });\n\n  xcontext(\"Skip suite (xcontext)\", function () {\n\n    it(\"This won't run\", function () {\n      throw new Error(\"This won't run\")\n    })\n  })\n\n});\n"]},"hash":"63a5ce35597ac489c29dfa46e800c13519c15812"}
