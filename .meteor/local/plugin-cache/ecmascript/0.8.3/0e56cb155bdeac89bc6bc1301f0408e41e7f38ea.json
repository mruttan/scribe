{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/test/integration/reporters.js","filenameRelative":"packages/practicalmeteor:mocha/test/integration/reporters.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/test/integration/reporters.js.map","sourceFileName":"packages/practicalmeteor:mocha/test/integration/reporters.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"reporters"},"ignored":false,"code":"var assert = require('assert');\n\nvar os = require('os');\n\nvar fs = require('fs');\n\nvar crypto = require('crypto');\n\nvar path = require('path');\n\nvar run = require('./helpers').runMocha;\n\ndescribe('reporters', function () {\n  this.timeout(3000);\n  describe('markdown', function () {\n    var res;\n    before(function (done) {\n      run('passing.js', ['--reporter', 'markdown'], function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n    it('does not exceed maximum callstack (issue: 1875)', function () {\n      assert(res.output.indexOf('RangeError') === -1, 'Threw RangeError');\n    });\n    it('contains spec src', function () {\n      var src = ['```js', 'assert(true);', '```'].join('\\n');\n      assert(res.output.indexOf(src) !== -1, 'No assert found');\n    });\n  });\n  describe('xunit', function () {\n    it('prints test cases with --reporter-options output (issue: 1864)', function (done) {\n      var randomStr = crypto.randomBytes(8).toString('hex');\n      var tmpDir = os.tmpDir().replace(new RegExp(path.sep + '$'), '');\n      var tmpFile = tmpDir + path.sep + 'test-issue-1864-' + randomStr + '.xml';\n      var args = ['--reporter=xunit', '--reporter-options', 'output=' + tmpFile];\n      var expectedOutput = ['<testcase classname=\"suite\" name=\"test1\" time=\"', '<testcase classname=\"suite\" name=\"test2\" time=\"', '</testsuite>'];\n      run('passing.js', args, function (err, result) {\n        if (err) return done(err);\n        var xml = fs.readFileSync(tmpFile, 'utf8');\n        fs.unlinkSync(tmpFile);\n        expectedOutput.forEach(function (line) {\n          assert(xml.indexOf(line) !== -1, 'XML did not contain ' + line);\n        });\n        done(err);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["packages/practicalmeteor:mocha/test/integration/reporters.js"],"names":["assert","require","os","fs","crypto","path","run","runMocha","describe","timeout","res","before","done","err","result","it","output","indexOf","src","join","randomStr","randomBytes","toString","tmpDir","replace","RegExp","sep","tmpFile","args","expectedOutput","xml","readFileSync","unlinkSync","forEach","line"],"mappings":"AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AACA,IAAIC,KAASD,QAAQ,IAAR,CAAb;;AACA,IAAIE,KAASF,QAAQ,IAAR,CAAb;;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;;AACA,IAAII,OAASJ,QAAQ,MAAR,CAAb;;AACA,IAAIK,MAASL,QAAQ,WAAR,EAAqBM,QAAlC;;AAEAC,SAAS,WAAT,EAAsB,YAAW;AAC/B,OAAKC,OAAL,CAAa,IAAb;AAEAD,WAAS,UAAT,EAAqB,YAAW;AAC9B,QAAIE,GAAJ;AAEAC,WAAO,UAASC,IAAT,EAAe;AACpBN,UAAI,YAAJ,EAAkB,CAAC,YAAD,EAAe,UAAf,CAAlB,EAA8C,UAASO,GAAT,EAAcC,MAAd,EAAsB;AAClEJ,cAAMI,MAAN;AACAF,aAAKC,GAAL;AACD,OAHD;AAID,KALD;AAOAE,OAAG,iDAAH,EAAsD,YAAW;AAC/Df,aAAOU,IAAIM,MAAJ,CAAWC,OAAX,CAAmB,YAAnB,MAAqC,CAAC,CAA7C,EAAgD,kBAAhD;AACD,KAFD;AAIAF,OAAG,mBAAH,EAAwB,YAAW;AACjC,UAAIG,MAAM,CACR,OADQ,EAER,eAFQ,EAGR,KAHQ,EAIRC,IAJQ,CAIH,IAJG,CAAV;AAMAnB,aAAOU,IAAIM,MAAJ,CAAWC,OAAX,CAAmBC,GAAnB,MAA4B,CAAC,CAApC,EAAuC,iBAAvC;AACD,KARD;AASD,GAvBD;AAyBAV,WAAS,OAAT,EAAkB,YAAW;AAC3BO,OAAG,gEAAH,EAAqE,UAASH,IAAT,EAAe;AAClF,UAAIQ,YAAYhB,OAAOiB,WAAP,CAAmB,CAAnB,EAAsBC,QAAtB,CAA+B,KAA/B,CAAhB;AACA,UAAIC,SAASrB,GAAGqB,MAAH,GAAYC,OAAZ,CAAoB,IAAIC,MAAJ,CAAWpB,KAAKqB,GAAL,GAAW,GAAtB,CAApB,EAAgD,EAAhD,CAAb;AACA,UAAIC,UAAUJ,SAASlB,KAAKqB,GAAd,GAAoB,kBAApB,GAAyCN,SAAzC,GAAqD,MAAnE;AAEA,UAAIQ,OAAO,CAAC,kBAAD,EAAqB,oBAArB,EAA2C,YAAYD,OAAvD,CAAX;AACA,UAAIE,iBAAiB,CACnB,iDADmB,EAEnB,iDAFmB,EAGnB,cAHmB,CAArB;AAMAvB,UAAI,YAAJ,EAAkBsB,IAAlB,EAAwB,UAASf,GAAT,EAAcC,MAAd,EAAsB;AAC5C,YAAID,GAAJ,EAAS,OAAOD,KAAKC,GAAL,CAAP;AAET,YAAIiB,MAAM3B,GAAG4B,YAAH,CAAgBJ,OAAhB,EAAyB,MAAzB,CAAV;AACAxB,WAAG6B,UAAH,CAAcL,OAAd;AAEAE,uBAAeI,OAAf,CAAuB,UAASC,IAAT,EAAe;AACpClC,iBAAO8B,IAAIb,OAAJ,CAAYiB,IAAZ,MAAsB,CAAC,CAA9B,EAAiC,yBAAyBA,IAA1D;AACD,SAFD;AAIAtB,aAAKC,GAAL;AACD,OAXD;AAYD,KAxBD;AAyBD,GA1BD;AA2BD,CAvDD","file":"packages/practicalmeteor:mocha/test/integration/reporters.js.map","sourcesContent":["var assert = require('assert');\nvar os     = require('os');\nvar fs     = require('fs');\nvar crypto = require('crypto');\nvar path   = require('path');\nvar run    = require('./helpers').runMocha;\n\ndescribe('reporters', function() {\n  this.timeout(3000);\n\n  describe('markdown', function() {\n    var res;\n\n    before(function(done) {\n      run('passing.js', ['--reporter', 'markdown'], function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('does not exceed maximum callstack (issue: 1875)', function() {\n      assert(res.output.indexOf('RangeError') === -1, 'Threw RangeError');\n    });\n\n    it('contains spec src', function() {\n      var src = [\n        '```js',\n        'assert(true);',\n        '```'\n      ].join('\\n');\n\n      assert(res.output.indexOf(src) !== -1, 'No assert found');\n    });\n  });\n\n  describe('xunit', function() {\n    it('prints test cases with --reporter-options output (issue: 1864)', function(done) {\n      var randomStr = crypto.randomBytes(8).toString('hex');\n      var tmpDir = os.tmpDir().replace(new RegExp(path.sep + '$'), '');\n      var tmpFile = tmpDir + path.sep + 'test-issue-1864-' + randomStr + '.xml';\n\n      var args = ['--reporter=xunit', '--reporter-options', 'output=' + tmpFile];\n      var expectedOutput = [\n        '<testcase classname=\"suite\" name=\"test1\" time=\"',\n        '<testcase classname=\"suite\" name=\"test2\" time=\"',\n        '</testsuite>'\n      ];\n\n      run('passing.js', args, function(err, result) {\n        if (err) return done(err);\n\n        var xml = fs.readFileSync(tmpFile, 'utf8');\n        fs.unlinkSync(tmpFile);\n\n        expectedOutput.forEach(function(line) {\n          assert(xml.indexOf(line) !== -1, 'XML did not contain ' + line);\n        });\n\n        done(err);\n      });\n    });\n  });\n});\n"]},"hash":"0e56cb155bdeac89bc6bc1301f0408e41e7f38ea"}
