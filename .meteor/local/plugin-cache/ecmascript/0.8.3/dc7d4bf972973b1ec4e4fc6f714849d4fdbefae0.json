{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/markdown.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/markdown.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/markdown.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/markdown.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"markdown"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Base = require('./base');\n\nvar utils = require('../utils'); /**\n                                  * Constants\n                                  */\n\nvar SUITE_PREFIX = '$'; /**\n                         * Expose `Markdown`.\n                         */\nexports = module.exports = Markdown; /**\n                                      * Initialize a new `Markdown` reporter.\n                                      *\n                                      * @api public\n                                      * @param {Runner} runner\n                                      */\n\nfunction Markdown(runner) {\n  Base.call(this, runner);\n  var level = 0;\n  var buf = '';\n\n  function title(str) {\n    return Array(level).join('#') + ' ' + str;\n  }\n\n  function mapTOC(suite, obj) {\n    var ret = obj;\n    var key = SUITE_PREFIX + suite.title;\n    obj = obj[key] = obj[key] || {\n      suite: suite\n    };\n    suite.suites.forEach(function (suite) {\n      mapTOC(suite, obj);\n    });\n    return ret;\n  }\n\n  function stringifyTOC(obj, level) {\n    ++level;\n    var buf = '';\n    var link;\n\n    for (var key in meteorBabelHelpers.sanitizeForInObject(obj)) {\n      if (key === 'suite') {\n        continue;\n      }\n\n      if (key !== SUITE_PREFIX) {\n        link = ' - [' + key.substring(1) + ']';\n        link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n        buf += Array(level).join('  ') + link;\n      }\n\n      buf += stringifyTOC(obj[key], level);\n    }\n\n    return buf;\n  }\n\n  function generateTOC(suite) {\n    var obj = mapTOC(suite, {});\n    return stringifyTOC(obj, 0);\n  }\n\n  generateTOC(runner.suite);\n  runner.on('suite', function (suite) {\n    ++level;\n    var slug = utils.slug(suite.fullTitle());\n    buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n    buf += title(suite.title) + '\\n';\n  });\n  runner.on('suite end', function () {\n    --level;\n  });\n  runner.on('pass', function (test) {\n    var code = utils.clean(test.body);\n    buf += test.title + '.\\n';\n    buf += '\\n```js\\n';\n    buf += code + '\\n';\n    buf += '```\\n\\n';\n  });\n  runner.on('end', function () {\n    process.stdout.write('# TOC\\n');\n    process.stdout.write(generateTOC(runner.suite));\n    process.stdout.write(buf);\n  });\n}","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/markdown.js"],"names":["Base","require","utils","SUITE_PREFIX","exports","module","Markdown","runner","call","level","buf","title","str","Array","join","mapTOC","suite","obj","ret","key","suites","forEach","stringifyTOC","link","substring","slug","fullTitle","generateTOC","on","test","code","clean","body","process","stdout","write"],"mappings":"AAAA;;GAIA,IAAIA,OAAOC,QAAQ,QAAR,CAAX;;AACA,IAAIC,QAAQD,QAAQ,UAAR,CAAZ,C,CAEA;;;;AAIA,IAAIE,eAAe,GAAnB,C,CAEA;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,QAA3B,C,CAEA;;;;;;;AAMA,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACxBP,OAAKQ,IAAL,CAAU,IAAV,EAAgBD,MAAhB;AAEA,MAAIE,QAAQ,CAAZ;AACA,MAAIC,MAAM,EAAV;;AAEA,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,WAAOC,MAAMJ,KAAN,EAAaK,IAAb,CAAkB,GAAlB,IAAyB,GAAzB,GAA+BF,GAAtC;AACD;;AAED,WAASG,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;AAC1B,QAAIC,MAAMD,GAAV;AACA,QAAIE,MAAMhB,eAAea,MAAML,KAA/B;AAEAM,UAAMA,IAAIE,GAAJ,IAAWF,IAAIE,GAAJ,KAAY;AAAEH,aAAOA;AAAT,KAA7B;AACAA,UAAMI,MAAN,CAAaC,OAAb,CAAqB,UAASL,KAAT,EAAgB;AACnCD,aAAOC,KAAP,EAAcC,GAAd;AACD,KAFD;AAIA,WAAOC,GAAP;AACD;;AAED,WAASI,YAAT,CAAsBL,GAAtB,EAA2BR,KAA3B,EAAkC;AAChC,MAAEA,KAAF;AACA,QAAIC,MAAM,EAAV;AACA,QAAIa,IAAJ;;AACA,SAAK,IAAIJ,GAAT,2CAAgBF,GAAhB,GAAqB;AACnB,UAAIE,QAAQ,OAAZ,EAAqB;AACnB;AACD;;AACD,UAAIA,QAAQhB,YAAZ,EAA0B;AACxBoB,eAAO,SAASJ,IAAIK,SAAJ,CAAc,CAAd,CAAT,GAA4B,GAAnC;AACAD,gBAAQ,OAAOrB,MAAMuB,IAAN,CAAWR,IAAIE,GAAJ,EAASH,KAAT,CAAeU,SAAf,EAAX,CAAP,GAAgD,KAAxD;AACAhB,eAAOG,MAAMJ,KAAN,EAAaK,IAAb,CAAkB,IAAlB,IAA0BS,IAAjC;AACD;;AACDb,aAAOY,aAAaL,IAAIE,GAAJ,CAAb,EAAuBV,KAAvB,CAAP;AACD;;AACD,WAAOC,GAAP;AACD;;AAED,WAASiB,WAAT,CAAqBX,KAArB,EAA4B;AAC1B,QAAIC,MAAMF,OAAOC,KAAP,EAAc,EAAd,CAAV;AACA,WAAOM,aAAaL,GAAb,EAAkB,CAAlB,CAAP;AACD;;AAEDU,cAAYpB,OAAOS,KAAnB;AAEAT,SAAOqB,EAAP,CAAU,OAAV,EAAmB,UAASZ,KAAT,EAAgB;AACjC,MAAEP,KAAF;AACA,QAAIgB,OAAOvB,MAAMuB,IAAN,CAAWT,MAAMU,SAAN,EAAX,CAAX;AACAhB,WAAO,cAAce,IAAd,GAAqB,QAArB,GAAgC,IAAvC;AACAf,WAAOC,MAAMK,MAAML,KAAZ,IAAqB,IAA5B;AACD,GALD;AAOAJ,SAAOqB,EAAP,CAAU,WAAV,EAAuB,YAAW;AAChC,MAAEnB,KAAF;AACD,GAFD;AAIAF,SAAOqB,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAC/B,QAAIC,OAAO5B,MAAM6B,KAAN,CAAYF,KAAKG,IAAjB,CAAX;AACAtB,WAAOmB,KAAKlB,KAAL,GAAa,KAApB;AACAD,WAAO,WAAP;AACAA,WAAOoB,OAAO,IAAd;AACApB,WAAO,SAAP;AACD,GAND;AAQAH,SAAOqB,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BK,YAAQC,MAAR,CAAeC,KAAf,CAAqB,SAArB;AACAF,YAAQC,MAAR,CAAeC,KAAf,CAAqBR,YAAYpB,OAAOS,KAAnB,CAArB;AACAiB,YAAQC,MAAR,CAAeC,KAAf,CAAqBzB,GAArB;AACD,GAJD;AAKD","file":"packages/practicalmeteor:mocha/lib/reporters/markdown.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\n\n/**\n * Constants\n */\n\nvar SUITE_PREFIX = '$';\n\n/**\n * Expose `Markdown`.\n */\n\nexports = module.exports = Markdown;\n\n/**\n * Initialize a new `Markdown` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Markdown(runner) {\n  Base.call(this, runner);\n\n  var level = 0;\n  var buf = '';\n\n  function title(str) {\n    return Array(level).join('#') + ' ' + str;\n  }\n\n  function mapTOC(suite, obj) {\n    var ret = obj;\n    var key = SUITE_PREFIX + suite.title;\n\n    obj = obj[key] = obj[key] || { suite: suite };\n    suite.suites.forEach(function(suite) {\n      mapTOC(suite, obj);\n    });\n\n    return ret;\n  }\n\n  function stringifyTOC(obj, level) {\n    ++level;\n    var buf = '';\n    var link;\n    for (var key in obj) {\n      if (key === 'suite') {\n        continue;\n      }\n      if (key !== SUITE_PREFIX) {\n        link = ' - [' + key.substring(1) + ']';\n        link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n        buf += Array(level).join('  ') + link;\n      }\n      buf += stringifyTOC(obj[key], level);\n    }\n    return buf;\n  }\n\n  function generateTOC(suite) {\n    var obj = mapTOC(suite, {});\n    return stringifyTOC(obj, 0);\n  }\n\n  generateTOC(runner.suite);\n\n  runner.on('suite', function(suite) {\n    ++level;\n    var slug = utils.slug(suite.fullTitle());\n    buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n    buf += title(suite.title) + '\\n';\n  });\n\n  runner.on('suite end', function() {\n    --level;\n  });\n\n  runner.on('pass', function(test) {\n    var code = utils.clean(test.body);\n    buf += test.title + '.\\n';\n    buf += '\\n```js\\n';\n    buf += code + '\\n';\n    buf += '```\\n\\n';\n  });\n\n  runner.on('end', function() {\n    process.stdout.write('# TOC\\n');\n    process.stdout.write(generateTOC(runner.suite));\n    process.stdout.write(buf);\n  });\n}\n"]},"hash":"dc7d4bf972973b1ec4e4fc6f714849d4fdbefae0"}
