{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-router","imported":["Router","Route","browserHistory"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"},{"kind":"named","imported":"Route","local":"Route"},{"kind":"named","imported":"browserHistory","local":"browserHistory"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"../ui/Dashboard","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Dashboard"}]},{"source":"../ui/Login","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Login"}]},{"source":"../ui/Signup","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Signup"}]},{"source":"../ui/NotFound","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"NotFound"}]}],"exports":{"exported":["onAuthChange","routes"],"specifiers":[{"kind":"local","local":"onAuthChange","exported":"onAuthChange"},{"kind":"local","local":"routes","exported":"routes"}]}}},"options":{"filename":"imports/routes/routes.js","filenameRelative":"imports/routes/routes.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/routes/routes.js.map","sourceFileName":"imports/routes/routes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"routes"},"ignored":false,"code":"module.export({\n\tonAuthChange: function () {\n\t\treturn onAuthChange;\n\t},\n\troutes: function () {\n\t\treturn routes;\n\t}\n});\nvar Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n\tMeteor: function (v) {\n\t\tMeteor = v;\n\t}\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n\t\"default\": function (v) {\n\t\tReact = v;\n\t}\n}, 1);\nvar Router = void 0,\n    Route = void 0,\n    browserHistory = void 0;\nmodule.watch(require(\"react-router\"), {\n\tRouter: function (v) {\n\t\tRouter = v;\n\t},\n\tRoute: function (v) {\n\t\tRoute = v;\n\t},\n\tbrowserHistory: function (v) {\n\t\tbrowserHistory = v;\n\t}\n}, 2);\nvar Session = void 0;\nmodule.watch(require(\"meteor/session\"), {\n\tSession: function (v) {\n\t\tSession = v;\n\t}\n}, 3);\nvar Dashboard = void 0;\nmodule.watch(require(\"../ui/Dashboard\"), {\n\t\"default\": function (v) {\n\t\tDashboard = v;\n\t}\n}, 4);\nvar Login = void 0;\nmodule.watch(require(\"../ui/Login\"), {\n\t\"default\": function (v) {\n\t\tLogin = v;\n\t}\n}, 5);\nvar Signup = void 0;\nmodule.watch(require(\"../ui/Signup\"), {\n\t\"default\": function (v) {\n\t\tSignup = v;\n\t}\n}, 6);\nvar NotFound = void 0;\nmodule.watch(require(\"../ui/NotFound\"), {\n\t\"default\": function (v) {\n\t\tNotFound = v;\n\t}\n}, 7);\nvar unauthenticatedPages = ['/', '/signup'];\nvar authenticatedPages = ['/dashboard'];\n\nvar onEnterPublicPage = function () {\n\tif (Meteor.userId()) {\n\t\tbrowserHistory.replace('/dashboard');\n\t}\n};\n\nvar onEnterPrivatePage = function () {\n\tif (!Meteor.userId()) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\n\nvar onEnterNotePage = function (nextState) {\n\tif (!Meteor.userId()) {\n\t\tbrowserHistory.replace('/');\n\t} else {\n\t\t// Uses nextState object to assign selectedNoteId to Id in url,\n\t\t// allowing note to be already selected on page enter/refresh\n\t\tSession.set('selectedNoteId', nextState.params.id);\n\t}\n};\n\nvar onAuthChange = function (isAuthenticated) {\n\tvar pathname = browserHistory.getCurrentLocation().pathname;\n\tvar isUnauthenticatedPage = unauthenticatedPages.includes(pathname);\n\tvar isAuthenticatedPage = authenticatedPages.includes(pathname);\n\n\tif (isUnauthenticatedPage && isAuthenticated) {\n\t\tbrowserHistory.replace('/dashboard');\n\t} else if (isAuthenticatedPage && !isAuthenticated) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\n\nvar routes = React.createElement(\n\tRouter,\n\t{\n\t\thistory: browserHistory\n\t},\n\tReact.createElement(Route, {\n\t\tpath: \"/\",\n\t\tcomponent: Login,\n\t\tonEnter: onEnterPublicPage\n\t}),\n\tReact.createElement(Route, {\n\t\tpath: \"/signup\",\n\t\tcomponent: Signup,\n\t\tonEnter: onEnterPublicPage\n\t}),\n\tReact.createElement(Route, {\n\t\tpath: \"/dashboard\",\n\t\tcomponent: Dashboard,\n\t\tonEnter: onEnterPrivatePage\n\t}),\n\tReact.createElement(Route, {\n\t\tpath: \"/dashboard/:id\",\n\t\tcomponent: Dashboard,\n\t\tonEnter: onEnterNotePage\n\t}),\n\tReact.createElement(Route, {\n\t\tpath: \"*\",\n\t\tcomponent: NotFound\n\t})\n);","map":{"version":3,"sources":["imports/routes/routes.js"],"names":["module","export","onAuthChange","routes","Meteor","watch","require","v","React","Router","Route","browserHistory","Session","Dashboard","Login","Signup","NotFound","unauthenticatedPages","authenticatedPages","onEnterPublicPage","userId","replace","onEnterPrivatePage","onEnterNotePage","nextState","set","params","id","isAuthenticated","pathname","getCurrentLocation","isUnauthenticatedPage","includes","isAuthenticatedPage"],"mappings":"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","file":"imports/routes/routes.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { Session } from 'meteor/session';\n\nimport Dashboard from '../ui/Dashboard';\nimport Login from '../ui/Login';\nimport Signup from '../ui/Signup';\nimport NotFound from '../ui/NotFound';\n\nconst unauthenticatedPages = ['/', '/signup'];\nconst authenticatedPages = ['/dashboard'];\nconst onEnterPublicPage = () => {\n\tif (Meteor.userId()) {\n\t\tbrowserHistory.replace('/dashboard');\n\t}\n};\nconst onEnterPrivatePage = () => {\n\tif (!Meteor.userId()) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\nconst onEnterNotePage = (nextState) => {\n\tif (!Meteor.userId()) {\n\t\tbrowserHistory.replace('/');\n\t} else {\n\t\t// Uses nextState object to assign selectedNoteId to Id in url,\n\t\t// allowing note to be already selected on page enter/refresh\n\t\tSession.set('selectedNoteId', nextState.params.id);\n\t}\n};\nexport const onAuthChange = (isAuthenticated) => {\n\tconst pathname = browserHistory.getCurrentLocation().pathname;\n\tconst isUnauthenticatedPage = unauthenticatedPages.includes(pathname);\n\tconst isAuthenticatedPage = authenticatedPages.includes(pathname);\n\tif (isUnauthenticatedPage && isAuthenticated) {\n\t\tbrowserHistory.replace('/dashboard');\n\t} else if (isAuthenticatedPage && !isAuthenticated) {\n\t\tbrowserHistory.replace('/');\n\t}\n};\nexport const routes = (\n  <Router history={browserHistory}>\n    <Route path=\"/\" component={Login} onEnter={onEnterPublicPage}/>\n    <Route path=\"/signup\" component={Signup} onEnter={onEnterPublicPage}/>\n    <Route path=\"/dashboard\" component={Dashboard} onEnter={onEnterPrivatePage}/>\n\t\t<Route path=\"/dashboard/:id\" component={Dashboard} onEnter={onEnterNotePage}/>\n    <Route path=\"*\" component={NotFound}/>\n  </Router>\n);\n"]},"hash":"296e61a341f10503e076f3d26ac83a53cc302ac2"}
