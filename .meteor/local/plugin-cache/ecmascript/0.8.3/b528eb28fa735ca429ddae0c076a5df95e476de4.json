{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/reporters/landing.js","filenameRelative":"packages/practicalmeteor:mocha/lib/reporters/landing.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/reporters/landing.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/reporters/landing.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"landing"},"ignored":false,"code":"/**\n * Module dependencies.\n */var Base = require('./base');\n\nvar inherits = require('../utils').inherits;\n\nvar cursor = Base.cursor;\nvar color = Base.color; /**\n                         * Expose `Landing`.\n                         */\nexports = module.exports = Landing; /**\n                                     * Airplane color.\n                                     */\nBase.colors.plane = 0; /**\n                        * Airplane crash color.\n                        */\nBase.colors['plane crash'] = 31; /**\n                                  * Runway color.\n                                  */\nBase.colors.runway = 90; /**\n                          * Initialize a new `Landing` reporter.\n                          *\n                          * @api public\n                          * @param {Runner} runner\n                          */\n\nfunction Landing(runner) {\n  Base.call(this, runner);\n  var self = this;\n  var width = Base.window.width * .75 | 0;\n  var total = runner.total;\n  var stream = process.stdout;\n  var plane = color('plane', '✈');\n  var crashed = -1;\n  var n = 0;\n\n  function runway() {\n    var buf = Array(width).join('-');\n    return '  ' + color('runway', buf);\n  }\n\n  runner.on('start', function () {\n    stream.write('\\n\\n\\n  ');\n    cursor.hide();\n  });\n  runner.on('test end', function (test) {\n    // check if the plane crashed\n    var col = crashed === -1 ? width * ++n / total | 0 : crashed; // show the crash\n\n    if (test.state === 'failed') {\n      plane = color('plane crash', '✈');\n      crashed = col;\n    } // render landing strip\n\n\n    stream.write(\"\\x1B[\" + (width + 1) + \"D\\x1B[2A\");\n    stream.write(runway());\n    stream.write('\\n  ');\n    stream.write(color('runway', Array(col).join('⋅')));\n    stream.write(plane);\n    stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n    stream.write(runway());\n    stream.write(\"\\x1B[0m\");\n  });\n  runner.on('end', function () {\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n} /**\n   * Inherit from `Base.prototype`.\n   */\n\ninherits(Landing, Base);","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/reporters/landing.js"],"names":["Base","require","inherits","cursor","color","exports","module","Landing","colors","plane","runway","runner","call","self","width","window","total","stream","process","stdout","crashed","n","buf","Array","join","on","write","hide","test","col","state","show","console","log","epilogue"],"mappings":"AAAA;;GAIA,IAAIA,OAAOC,QAAQ,QAAR,CAAX;;AACA,IAAIC,WAAWD,QAAQ,UAAR,EAAoBC,QAAnC;;AACA,IAAIC,SAASH,KAAKG,MAAlB;AACA,IAAIC,QAAQJ,KAAKI,KAAjB,C,CAEA;;;AAIAC,UAAUC,OAAOD,OAAP,GAAiBE,OAA3B,C,CAEA;;;AAIAP,KAAKQ,MAAL,CAAYC,KAAZ,GAAoB,CAApB,C,CAEA;;;AAIAT,KAAKQ,MAAL,CAAY,aAAZ,IAA6B,EAA7B,C,CAEA;;;AAIAR,KAAKQ,MAAL,CAAYE,MAAZ,GAAqB,EAArB,C,CAEA;;;;;;;AAMA,SAASH,OAAT,CAAiBI,MAAjB,EAAyB;AACvBX,OAAKY,IAAL,CAAU,IAAV,EAAgBD,MAAhB;AAEA,MAAIE,OAAO,IAAX;AACA,MAAIC,QAAQd,KAAKe,MAAL,CAAYD,KAAZ,GAAoB,GAApB,GAA0B,CAAtC;AACA,MAAIE,QAAQL,OAAOK,KAAnB;AACA,MAAIC,SAASC,QAAQC,MAArB;AACA,MAAIV,QAAQL,MAAM,OAAN,EAAe,GAAf,CAAZ;AACA,MAAIgB,UAAU,CAAC,CAAf;AACA,MAAIC,IAAI,CAAR;;AAEA,WAASX,MAAT,GAAkB;AAChB,QAAIY,MAAMC,MAAMT,KAAN,EAAaU,IAAb,CAAkB,GAAlB,CAAV;AACA,WAAO,OAAOpB,MAAM,QAAN,EAAgBkB,GAAhB,CAAd;AACD;;AAEDX,SAAOc,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BR,WAAOS,KAAP,CAAa,UAAb;AACAvB,WAAOwB,IAAP;AACD,GAHD;AAKAhB,SAAOc,EAAP,CAAU,UAAV,EAAsB,UAASG,IAAT,EAAe;AACnC;AACA,QAAIC,MAAMT,YAAY,CAAC,CAAb,GAAiBN,QAAQ,EAAEO,CAAV,GAAcL,KAAd,GAAsB,CAAvC,GAA2CI,OAArD,CAFmC,CAInC;;AACA,QAAIQ,KAAKE,KAAL,KAAe,QAAnB,EAA6B;AAC3BrB,cAAQL,MAAM,aAAN,EAAqB,GAArB,CAAR;AACAgB,gBAAUS,GAAV;AACD,KARkC,CAUnC;;;AACAZ,WAAOS,KAAP,CAAa,WAAaZ,QAAQ,CAArB,IAA0B,UAAvC;AACAG,WAAOS,KAAP,CAAahB,QAAb;AACAO,WAAOS,KAAP,CAAa,MAAb;AACAT,WAAOS,KAAP,CAAatB,MAAM,QAAN,EAAgBmB,MAAMM,GAAN,EAAWL,IAAX,CAAgB,GAAhB,CAAhB,CAAb;AACAP,WAAOS,KAAP,CAAajB,KAAb;AACAQ,WAAOS,KAAP,CAAatB,MAAM,QAAN,EAAgBmB,MAAMT,QAAQe,GAAd,EAAmBL,IAAnB,CAAwB,GAAxB,IAA+B,IAA/C,CAAb;AACAP,WAAOS,KAAP,CAAahB,QAAb;AACAO,WAAOS,KAAP,CAAa,SAAb;AACD,GAnBD;AAqBAf,SAAOc,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BtB,WAAO4B,IAAP;AACAC,YAAQC,GAAR;AACApB,SAAKqB,QAAL;AACD,GAJD;AAKD,C,CAED;;;;AAGAhC,SAASK,OAAT,EAAkBP,IAAlB","file":"packages/practicalmeteor:mocha/lib/reporters/landing.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar cursor = Base.cursor;\nvar color = Base.color;\n\n/**\n * Expose `Landing`.\n */\n\nexports = module.exports = Landing;\n\n/**\n * Airplane color.\n */\n\nBase.colors.plane = 0;\n\n/**\n * Airplane crash color.\n */\n\nBase.colors['plane crash'] = 31;\n\n/**\n * Runway color.\n */\n\nBase.colors.runway = 90;\n\n/**\n * Initialize a new `Landing` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Landing(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * .75 | 0;\n  var total = runner.total;\n  var stream = process.stdout;\n  var plane = color('plane', '✈');\n  var crashed = -1;\n  var n = 0;\n\n  function runway() {\n    var buf = Array(width).join('-');\n    return '  ' + color('runway', buf);\n  }\n\n  runner.on('start', function() {\n    stream.write('\\n\\n\\n  ');\n    cursor.hide();\n  });\n\n  runner.on('test end', function(test) {\n    // check if the plane crashed\n    var col = crashed === -1 ? width * ++n / total | 0 : crashed;\n\n    // show the crash\n    if (test.state === 'failed') {\n      plane = color('plane crash', '✈');\n      crashed = col;\n    }\n\n    // render landing strip\n    stream.write('\\u001b[' + (width + 1) + 'D\\u001b[2A');\n    stream.write(runway());\n    stream.write('\\n  ');\n    stream.write(color('runway', Array(col).join('⋅')));\n    stream.write(plane);\n    stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n    stream.write(runway());\n    stream.write('\\u001b[0m');\n  });\n\n  runner.on('end', function() {\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Landing, Base);\n"]},"hash":"b528eb28fa735ca429ddae0c076a5df95e476de4"}
