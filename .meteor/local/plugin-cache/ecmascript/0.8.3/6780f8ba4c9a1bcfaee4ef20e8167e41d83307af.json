{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/practicalmeteor:mocha/lib/suite.js","filenameRelative":"packages/practicalmeteor:mocha/lib/suite.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/practicalmeteor:mocha/lib/suite.js.map","sourceFileName":"packages/practicalmeteor:mocha/lib/suite.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"suite"},"ignored":false,"code":"/**\n * Module dependencies.\n */var EventEmitter = require('events').EventEmitter;\n\nvar Hook = require('./hook');\n\nvar utils = require('./utils');\n\nvar inherits = utils.inherits;\n\nvar debug = require('debug')('mocha:suite');\n\nvar milliseconds = require('./ms'); /**\n                                     * Expose `Suite`.\n                                     */\n\nexports = module.exports = Suite; /**\n                                   * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\n                                   * with the same title is already present, that suite is returned to provide\n                                   * nicer reporter and more flexible meta-testing.\n                                   *\n                                   * @api public\n                                   * @param {Suite} parent\n                                   * @param {string} title\n                                   * @return {Suite}\n                                   */\n\nexports.create = function (parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n\n  if (parent.pending) {\n    suite.pending = true;\n  }\n\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n}; /**\n    * Initialize a new `Suite` with the given `title` and `ctx`.\n    *\n    * @api private\n    * @param {string} title\n    * @param {Context} parentContext\n    */\n\nfunction Suite(title, parentContext) {\n  this.title = title;\n\n  function Context() {}\n\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._retries = -1;\n  this.delayed = false;\n} /**\n   * Inherit from `EventEmitter.prototype`.\n   */\n\ninherits(Suite, EventEmitter); /**\n                                * Return a clone of this `Suite`.\n                                *\n                                * @api private\n                                * @return {Suite}\n                                */\n\nSuite.prototype.clone = function () {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n}; /**\n    * Set timeout `ms` or short-hand such as \"2s\".\n    *\n    * @api private\n    * @param {number|string} ms\n    * @return {Suite|number} for chaining\n    */\n\nSuite.prototype.timeout = function (ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n}; /**\n    * Set number of times to retry a failed test.\n    *\n    * @api private\n    * @param {number|string} n\n    * @return {Suite|number} for chaining\n    */\n\nSuite.prototype.retries = function (n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n}; /**\n     * Set timeout to `enabled`.\n     *\n     * @api private\n     * @param {boolean} enabled\n     * @return {Suite|boolean} self or enabled\n     */\n\nSuite.prototype.enableTimeouts = function (enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n}; /**\n    * Set slow `ms` or short-hand such as \"2s\".\n    *\n    * @api private\n    * @param {number|string} ms\n    * @return {Suite|number} for chaining\n    */\n\nSuite.prototype.slow = function (ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n}; /**\n    * Sets whether to bail after first error.\n    *\n    * @api private\n    * @param {boolean} bail\n    * @return {Suite|number} for chaining\n    */\n\nSuite.prototype.bail = function (bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n}; /**\n    * Run `fn(test[, done])` before running tests.\n    *\n    * @api private\n    * @param {string} title\n    * @param {Function} fn\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.beforeAll = function (title, fn) {\n  if (this.pending) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n\n  this._beforeAll.push(hook);\n\n  this.emit('beforeAll', hook);\n  return this;\n}; /**\n    * Run `fn(test[, done])` after running tests.\n    *\n    * @api private\n    * @param {string} title\n    * @param {Function} fn\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.afterAll = function (title, fn) {\n  if (this.pending) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n\n  this._afterAll.push(hook);\n\n  this.emit('afterAll', hook);\n  return this;\n}; /**\n    * Run `fn(test[, done])` before each test case.\n    *\n    * @api private\n    * @param {string} title\n    * @param {Function} fn\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.beforeEach = function (title, fn) {\n  if (this.pending) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n\n  this._beforeEach.push(hook);\n\n  this.emit('beforeEach', hook);\n  return this;\n}; /**\n    * Run `fn(test[, done])` after each test case.\n    *\n    * @api private\n    * @param {string} title\n    * @param {Function} fn\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.afterEach = function (title, fn) {\n  if (this.pending) {\n    return this;\n  }\n\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n\n  this._afterEach.push(hook);\n\n  this.emit('afterEach', hook);\n  return this;\n}; /**\n    * Add a test `suite`.\n    *\n    * @api private\n    * @param {Suite} suite\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.addSuite = function (suite) {\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n}; /**\n    * Add a `test` to this suite.\n    *\n    * @api private\n    * @param {Test} test\n    * @return {Suite} for chaining\n    */\n\nSuite.prototype.addTest = function (test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n}; /**\n    * Return the full title generated by recursively concatenating the parent's\n    * full title.\n    *\n    * @api public\n    * @return {string}\n    */\n\nSuite.prototype.fullTitle = function () {\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n\n    if (full) {\n      return full + ' ' + this.title;\n    }\n  }\n\n  return this.title;\n}; /**\n    * Return the total number of tests.\n    *\n    * @api public\n    * @return {number}\n    */\n\nSuite.prototype.total = function () {\n  return utils.reduce(this.suites, function (sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n}; /**\n    * Iterates through each suite recursively to find all tests. Applies a\n    * function in the format `fn(test)`.\n    *\n    * @api private\n    * @param {Function} fn\n    * @return {Suite}\n    */\n\nSuite.prototype.eachTest = function (fn) {\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function (suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n}; /**\n    * This will run the root suite if we happen to be running in delayed mode.\n    */\n\nSuite.prototype.run = function () {\n  function run() {\n    if (this.root) {\n      this.emit('run');\n    }\n  }\n\n  return run;\n}();","map":{"version":3,"sources":["packages/practicalmeteor:mocha/lib/suite.js"],"names":["EventEmitter","require","Hook","utils","inherits","debug","milliseconds","exports","module","Suite","create","parent","title","suite","ctx","pending","fullTitle","addSuite","parentContext","Context","prototype","suites","tests","_beforeEach","_beforeAll","_afterEach","_afterAll","root","_timeout","_enableTimeouts","_slow","_bail","_retries","delayed","clone","timeout","retries","enableTimeouts","slow","bail","ms","arguments","length","toString","parseInt","n","enabled","beforeAll","fn","name","hook","push","emit","afterAll","beforeEach","afterEach","addTest","test","full","total","reduce","sum","eachTest","forEach","run"],"mappings":"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","file":"packages/practicalmeteor:mocha/lib/suite.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Hook = require('./hook');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:suite');\nvar milliseconds = require('./ms');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\n * with the same title is already present, that suite is returned to provide\n * nicer reporter and more flexible meta-testing.\n *\n * @api public\n * @param {Suite} parent\n * @param {string} title\n * @return {Suite}\n */\nexports.create = function(parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  if (parent.pending) {\n    suite.pending = true;\n  }\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given `title` and `ctx`.\n *\n * @api private\n * @param {string} title\n * @param {Context} parentContext\n */\nfunction Suite(title, parentContext) {\n  this.title = title;\n  function Context() {}\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._retries = -1;\n  this.delayed = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Suite, EventEmitter);\n\n/**\n * Return a clone of this `Suite`.\n *\n * @api private\n * @return {Suite}\n */\nSuite.prototype.clone = function() {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set timeout `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set number of times to retry a failed test.\n *\n * @api private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\nSuite.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n\n/**\n  * Set timeout to `enabled`.\n  *\n  * @api private\n  * @param {boolean} enabled\n  * @return {Suite|boolean} self or enabled\n  */\nSuite.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set slow `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Sets whether to bail after first error.\n *\n * @api private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\nSuite.prototype.bail = function(bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @api private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\nSuite.prototype.addSuite = function(suite) {\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @api private\n * @param {Test} test\n * @return {Suite} for chaining\n */\nSuite.prototype.addTest = function(test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nSuite.prototype.fullTitle = function() {\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n    if (full) {\n      return full + ' ' + this.title;\n    }\n  }\n  return this.title;\n};\n\n/**\n * Return the total number of tests.\n *\n * @api public\n * @return {number}\n */\nSuite.prototype.total = function() {\n  return utils.reduce(this.suites, function(sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @api private\n * @param {Function} fn\n * @return {Suite}\n */\nSuite.prototype.eachTest = function(fn) {\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function(suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n */\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit('run');\n  }\n};\n"]},"hash":"6780f8ba4c9a1bcfaee4ef20e8167e41d83307af"}
