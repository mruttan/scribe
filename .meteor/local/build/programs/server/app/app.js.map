{"version":3,"sources":["meteor://ðŸ’»app/imports/api/notes.js","meteor://ðŸ’»app/imports/api/users.js","meteor://ðŸ’»app/imports/startup/simple-schema-configuration.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Notes","Mongo","watch","require","v","Meteor","moment","SimpleSchema","Collection","isServer","publish","find","userId","methods","Error","insert","title","body","updatedAt","valueOf","_id","type","String","min","validate","remove","updates","optional","update","$set","validateNewUser","Accounts","user","email","emails","address","regEx","RegEx","Email","defineValidationErrorTransform","e","message","WebApp","startup","console","log"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\nimport SimpleSchema from 'simpl-schema';\n\nexport const Notes = new Mongo.Collection('notes');\n\nif (Meteor.isServer) {\n  Meteor.publish('notes', function () {\n    return Notes.find({ userId: this.userId });\n  });\n}\n\nMeteor.methods({\n  'notes.insert'() {\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    return Notes.insert({\n      title: '',\n      body: '',\n      userId: this.userId,\n      updatedAt: moment().valueOf()\n    });\n  },\n  'notes.remove'(_id) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    new SimpleSchema({\n      _id: {\n        type: String,\n        min: 1\n      }\n    }).validate({ _id });\n    //ensures that note._id's userId is equal to the current userId\n    Notes.remove({ _id, userId: this.userId });\n  },\n  'notes.update'(_id, updates) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    new SimpleSchema({\n      _id: {\n        type: String,\n        min: 1\n      },\n      title: {\n        type: String,\n        optional: true\n      },\n      body: {\n        type: String,\n        optional: true\n      }\n    }).validate({\n      _id,\n      ...updates\n    });\n\n    Notes.update({\n      _id,\n      userId: this.userId\n    }, {\n      $set: {\n        updatedAt: moment().valueOf(),\n        ...updates\n      }\n    });\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport const validateNewUser = (user) => {\n\tconst email = user.emails[0].address;\n\n\tnew SimpleSchema({\n\t\temail: {\n\t\t\ttype: String,\n\t\t\tregEx: SimpleSchema.RegEx.Email\n\t\t}\n\t}).validate({ email });\n\n\n\treturn true;\n};\n\nif (Meteor.isServer) {\n\tAccounts.validateNewUser(validateNewUser);\n}\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nSimpleSchema.defineValidationErrorTransform((e) => {\n\treturn new Meteor.Error(400, e.message)\n});\n","import { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\n\nimport '../imports/api/users';\nimport '../imports/api/notes';\nimport '../imports/startup/simple-schema-configuration';\n\n\nMeteor.startup(() => {\n\n});\n\n\nconsole.log('Log from /server/main.js');\n"]}