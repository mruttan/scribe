[{"type":"js","data":"/* Imports for global scope */\n\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nRouterAutoscroll = Package['okgrow:router-autoscroll'].RouterAutoscroll;\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nReload = Package.reload.Reload;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"users.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/users.js                                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({                                                      // 1\n\tvalidateNewUser: function () {                                      // 1\n\t\treturn validateNewUser;                                            // 1\n\t}                                                                   // 1\n});                                                                  // 1\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n\tMeteor: function (v) {                                              // 1\n\t\tMeteor = v;                                                        // 1\n\t}                                                                   // 1\n}, 0);                                                               // 1\nvar SimpleSchema = void 0;                                           // 1\nmodule.watch(require(\"simpl-schema\"), {                              // 1\n\t\"default\": function (v) {                                           // 1\n\t\tSimpleSchema = v;                                                  // 1\n\t}                                                                   // 1\n}, 1);                                                               // 1\nvar Accounts = void 0;                                               // 1\nmodule.watch(require(\"meteor/accounts-base\"), {                      // 1\n\tAccounts: function (v) {                                            // 1\n\t\tAccounts = v;                                                      // 1\n\t}                                                                   // 1\n}, 2);                                                               // 1\n                                                                     //\nvar validateNewUser = function (user) {                              // 5\n\tvar email = user.emails[0].address;                                 // 6\n\tnew SimpleSchema({                                                  // 8\n\t\temail: {                                                           // 9\n\t\t\ttype: String,                                                     // 10\n\t\t\tregEx: SimpleSchema.RegEx.Email                                   // 11\n\t\t}                                                                  // 9\n\t}).validate({                                                       // 8\n\t\temail: email                                                       // 13\n\t});                                                                 // 13\n\treturn true;                                                        // 16\n};                                                                   // 17\n                                                                     //\nif (Meteor.isServer) {                                               // 19\n\tAccounts.validateNewUser(validateNewUser);                          // 20\n}                                                                    // 21\n///////////////////////////////////////////////////////////////////////\n\n},\"users.test.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/users.test.js                                         //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor = void 0;                                                 // 1\nmodule.watch(require(\"meteor/meteor\"), {                             // 1\n\tMeteor: function (v) {                                              // 1\n\t\tMeteor = v;                                                        // 1\n\t}                                                                   // 1\n}, 0);                                                               // 1\nvar expect = void 0;                                                 // 1\nmodule.watch(require(\"expect\"), {                                    // 1\n\t\"default\": function (v) {                                           // 1\n\t\texpect = v;                                                        // 1\n\t}                                                                   // 1\n}, 1);                                                               // 1\nvar validateNewUser = void 0;                                        // 1\nmodule.watch(require(\"./users\"), {                                   // 1\n\tvalidateNewUser: function (v) {                                     // 1\n\t\tvalidateNewUser = v;                                               // 1\n\t}                                                                   // 1\n}, 2);                                                               // 1\n                                                                     //\nif (Meteor.isServer) {                                               // 6\n\tdescribe('users', function () {                                     // 7\n\t\tit('should allow valid email address', function () {               // 9\n\t\t\tvar testUser = {                                                  // 10\n\t\t\t\temails: [{                                                       // 11\n\t\t\t\t\taddress: 'Test@example.com'                                     // 13\n\t\t\t\t}]                                                               // 12\n\t\t\t};                                                                // 10\n\t\t\tvar res = validateNewUser(testUser);                              // 17\n\t\t\texpect(res).toBe(true);                                           // 19\n\t\t});                                                                // 20\n\t\tit('should reject invalid email', function () {                    // 22\n\t\t\tvar testUser = {                                                  // 23\n\t\t\t\temails: [{                                                       // 24\n\t\t\t\t\taddress: 'Test'                                                 // 26\n\t\t\t\t}]                                                               // 25\n\t\t\t};                                                                // 23\n\t\t\texpect(function () {                                              // 31\n\t\t\t\tvalidateNewUser(testUser);                                       // 32\n\t\t\t}).toThrow();                                                     // 33\n\t\t});                                                                // 34\n\t});                                                                 // 36\n}                                                                    // 37\n///////////////////////////////////////////////////////////////////////\n\n}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\",\n    \".less\"\n  ]\n});\nrequire(\"./imports/api/users.test.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/users.js","imports/api/users.test.js"],"names":["module","export","validateNewUser","Meteor","watch","require","v","SimpleSchema","Accounts","user","email","emails","address","type","String","regEx","RegEx","Email","validate","isServer","expect","describe","it","testUser","res","toBe","toThrow"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,kBAAgB;AAAA,SAAIA,eAAJ;AAAA;AAAjB,CAAd;AAAqD,IAAIC,eAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,OAAD,YAAQG,CAAR,EAAU;AAACH,WAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,qBAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA,sBAASC,CAAT,EAAW;AAACC,iBAAaD,CAAb;AAAe;AAA3B,CAArC,EAAkE,CAAlE;AAAqE,IAAIE,iBAAJ;AAAaR,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,SAAD,YAAUF,CAAV,EAAY;AAACE,aAASF,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;;AAI3N,IAAMJ,kBAAkB,UAACO,IAAD,EAAU;AACxC,KAAMC,QAAQD,KAAKE,MAAL,CAAY,CAAZ,EAAeC,OAA7B;AAEA,KAAIL,YAAJ,CAAiB;AAChBG,SAAO;AACNG,SAAMC,MADA;AAENC,UAAOR,aAAaS,KAAb,CAAmBC;AAFpB;AADS,EAAjB,EAKGC,QALH,CAKY;AAAER;AAAF,EALZ;AAQA,QAAO,IAAP;AACA,CAZM;;AAcP,IAAIP,OAAOgB,QAAX,EAAqB;AACpBX,UAASN,eAAT,CAAyBA,eAAzB;AACA,0E;;;;;;;;;;;ACpBD,IAAIC,eAAJ;AAAWH,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,OAAD,YAAQG,CAAR,EAAU;AAACH,WAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIc,eAAJ;AAAWpB,OAAOI,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,sBAASC,CAAT,EAAW;AAACc,WAAOd,CAAP;AAAS;AAArB,CAA/B,EAAsD,CAAtD;AAAyD,IAAIJ,wBAAJ;AAAoBF,OAAOI,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAACH,gBAAD,YAAiBI,CAAjB,EAAmB;AAACJ,oBAAgBI,CAAhB;AAAkB;AAAtC,CAAhC,EAAwE,CAAxE;;AAKlK,IAAIH,OAAOgB,QAAX,EAAqB;AACpBE,UAAS,OAAT,EAAkB,YAAW;AAE5BC,KAAG,kCAAH,EAAuC,YAAW;AACjD,OAAMC,WAAW;AAChBZ,YAAQ,CACP;AACCC,cAAS;AADV,KADO;AADQ,IAAjB;AAOA,OAAMY,MAAMtB,gBAAgBqB,QAAhB,CAAZ;AAEAH,UAAOI,GAAP,EAAYC,IAAZ,CAAiB,IAAjB;AACA,GAXD;AAaAH,KAAG,6BAAH,EAAkC,YAAY;AAC7C,OAAMC,WAAW;AAChBZ,YAAQ,CACP;AACCC,cAAS;AADV,KADO;AADQ,IAAjB;AAQAQ,UAAO,YAAM;AACZlB,oBAAgBqB,QAAhB;AACA,IAFD,EAEGG,OAFH;AAGA,GAZD;AAcA,EA7BD;AA8BA,0E","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport const validateNewUser = (user) => {\n\tconst email = user.emails[0].address;\n\n\tnew SimpleSchema({\n\t\temail: {\n\t\t\ttype: String,\n\t\t\tregEx: SimpleSchema.RegEx.Email\n\t\t}\n\t}).validate({ email });\n\n\n\treturn true;\n};\n\nif (Meteor.isServer) {\n\tAccounts.validateNewUser(validateNewUser);\n}\n","import { Meteor } from 'meteor/meteor';\nimport expect from 'expect';\n\nimport { validateNewUser } from './users';\n\nif (Meteor.isServer) {\n\tdescribe('users', function() {\n\n\t\tit('should allow valid email address', function() {\n\t\t\tconst testUser = {\n\t\t\t\temails: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: 'Test@example.com'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tconst res = validateNewUser(testUser);\n\n\t\t\texpect(res).toBe(true);\n\t\t});\n\n\t\tit('should reject invalid email', function () {\n\t\t\tconst testUser = {\n\t\t\t\temails: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: 'Test'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\n\t\t\texpect(() => {\n\t\t\t\tvalidateNewUser(testUser);\n\t\t\t}).toThrow();\n\t\t});\n\n\t});\n}\n"]}}]