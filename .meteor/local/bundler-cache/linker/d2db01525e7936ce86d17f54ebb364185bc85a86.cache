[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar ReactMeteorData;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"react-meteor-data\":{\"react-meteor-data.jsx\":[\"./createContainer.jsx\",\"./withTracker.jsx\",\"./ReactMeteorData.jsx\",\"meteor/tmeasday:check-npm-versions\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/react-meteor-data/react-meteor-data.jsx                                                       //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.import('./createContainer.jsx',{\"default\":function(v){exports.createContainer=v}});module.import('./withTracker.jsx',{\"default\":function(v){exports.withTracker=v}});module.import('./ReactMeteorData.jsx',{\"ReactMeteorData\":function(v){exports.ReactMeteorData=v}});var checkNpmVersions;module.import('meteor/tmeasday:check-npm-versions',{\"checkNpmVersions\":function(v){checkNpmVersions=v}});\n                                                                                                          //\ncheckNpmVersions({                                                                                        // 3\n  react: '15.3 - 16'                                                                                      // 4\n}, 'react-meteor-data');                                                                                  // 3\n                                                                                                          //\n                                                                                                          // 7\n                                                                                                          // 8\n                                                                                                          // 9\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ReactMeteorData.jsx\":[\"babel-runtime/helpers/extends\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"babel-runtime/helpers/typeof\",\"babel-runtime/helpers/classCallCheck\",\"react\",\"meteor/meteor\",\"meteor/tracker\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/react-meteor-data/ReactMeteorData.jsx                                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({connect:function(){return connect},ReactMeteorData:function(){return ReactMeteorData}});var _extends;module.import('babel-runtime/helpers/extends',{\"default\":function(v){_extends=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var _typeof;module.import('babel-runtime/helpers/typeof',{\"default\":function(v){_typeof=v}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var React;module.import('react',{\"default\":function(v){React=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Tracker;module.import('meteor/tracker',{\"Tracker\":function(v){Tracker=v}});\n                                                                                                          //\n                                                                                                          //\n                                                                                                          //\n                                                                                                          //\n                                                                                                          //\n/* global Package */                                                                                      // 1\n/* eslint-disable react/prefer-stateless-function */                                                      // 2\n                                                                                                          //\n                                                                                                          // 4\n                                                                                                          // 5\n                                                                                                          // 6\n                                                                                                          //\n// A class to keep the state and utility methods needed to manage                                         // 8\n// the Meteor data for a component.                                                                       // 9\n                                                                                                          //\nvar MeteorDataManager = function () {                                                                     //\n  function MeteorDataManager(component) {                                                                 // 11\n    _classCallCheck(this, MeteorDataManager);                                                             // 11\n                                                                                                          //\n    this.component = component;                                                                           // 12\n    this.computation = null;                                                                              // 13\n    this.oldData = null;                                                                                  // 14\n  }                                                                                                       // 15\n                                                                                                          //\n  MeteorDataManager.prototype.dispose = function () {                                                     //\n    function dispose() {                                                                                  //\n      if (this.computation) {                                                                             // 18\n        this.computation.stop();                                                                          // 19\n        this.computation = null;                                                                          // 20\n      }                                                                                                   // 21\n    }                                                                                                     // 22\n                                                                                                          //\n    return dispose;                                                                                       //\n  }();                                                                                                    //\n                                                                                                          //\n  MeteorDataManager.prototype.calculateData = function () {                                               //\n    function calculateData() {                                                                            //\n      var component = this.component;                                                                     // 25\n                                                                                                          //\n      if (!component.getMeteorData) {                                                                     // 27\n        return null;                                                                                      // 28\n      }                                                                                                   // 29\n                                                                                                          //\n      // When rendering on the server, we don't want to use the Tracker.                                  // 31\n      // We only do the first rendering on the server so we can get the data right away                   // 32\n      if (Meteor.isServer) {                                                                              // 33\n        return component.getMeteorData();                                                                 // 34\n      }                                                                                                   // 35\n                                                                                                          //\n      if (this.computation) {                                                                             // 37\n        this.computation.stop();                                                                          // 38\n        this.computation = null;                                                                          // 39\n      }                                                                                                   // 40\n                                                                                                          //\n      var data = void 0;                                                                                  // 42\n      // Use Tracker.nonreactive in case we are inside a Tracker Computation.                             // 43\n      // This can happen if someone calls `ReactDOM.render` inside a Computation.                         // 44\n      // In that case, we want to opt out of the normal behavior of nested                                // 45\n      // Computations, where if the outer one is invalidated or stopped,                                  // 46\n      // it stops the inner one.                                                                          // 47\n      this.computation = Tracker.nonreactive(function () {                                                // 48\n        return Tracker.autorun(function (c) {                                                             // 48\n          if (c.firstRun) {                                                                               // 50\n            var savedSetState = component.setState;                                                       // 51\n            try {                                                                                         // 52\n              component.setState = function () {                                                          // 53\n                throw new Error('Can\\'t call `setState` inside `getMeteorData` as this could ' + 'cause an endless loop. To respond to Meteor data changing, ' + 'consider making this component a \\\"wrapper component\\\" that ' + 'only fetches data and passes it in as props to a child ' + 'component. Then you can use `componentWillReceiveProps` in ' + 'that child component.');\n              };                                                                                          // 61\n                                                                                                          //\n              data = component.getMeteorData();                                                           // 63\n            } finally {                                                                                   // 64\n              component.setState = savedSetState;                                                         // 65\n            }                                                                                             // 66\n          } else {                                                                                        // 67\n            // Stop this computation instead of using the re-run.                                         // 68\n            // We use a brand-new autorun for each call to getMeteorData                                  // 69\n            // to capture dependencies on any reactive data sources that                                  // 70\n            // are accessed.  The reason we can't use a single autorun                                    // 71\n            // for the lifetime of the component is that Tracker only                                     // 72\n            // re-runs autoruns at flush time, while we need to be able to                                // 73\n            // re-call getMeteorData synchronously whenever we want, e.g.                                 // 74\n            // from componentWillUpdate.                                                                  // 75\n            c.stop();                                                                                     // 76\n            // Calling forceUpdate() triggers componentWillUpdate which                                   // 77\n            // recalculates getMeteorData() and re-renders the component.                                 // 78\n            component.forceUpdate();                                                                      // 79\n          }                                                                                               // 80\n        });                                                                                               // 81\n      });                                                                                                 // 48\n                                                                                                          //\n      if (Package.mongo && Package.mongo.Mongo) {                                                         // 84\n        Object.keys(data).forEach(function (key) {                                                        // 85\n          if (data[key] instanceof Package.mongo.Mongo.Cursor) {                                          // 86\n            console.warn('Warning: you are returning a Mongo cursor from getMeteorData. ' + 'This value will not be reactive. You probably want to call ' + '`.fetch()` on the cursor before returning it.');\n          }                                                                                               // 92\n        });                                                                                               // 93\n      }                                                                                                   // 94\n                                                                                                          //\n      return data;                                                                                        // 96\n    }                                                                                                     // 97\n                                                                                                          //\n    return calculateData;                                                                                 //\n  }();                                                                                                    //\n                                                                                                          //\n  MeteorDataManager.prototype.updateData = function () {                                                  //\n    function updateData(newData) {                                                                        //\n      var component = this.component;                                                                     // 100\n      var oldData = this.oldData;                                                                         // 101\n                                                                                                          //\n      if (!(newData && (typeof newData === 'undefined' ? 'undefined' : _typeof(newData)) === 'object')) {\n        throw new Error('Expected object returned from getMeteorData');                                   // 104\n      }                                                                                                   // 105\n      // update componentData in place based on newData                                                   // 106\n      for (var key in meteorBabelHelpers.sanitizeForInObject(newData)) {                                  // 107\n        component.data[key] = newData[key];                                                               // 108\n      }                                                                                                   // 109\n      // if there is oldData (which is every time this method is called                                   // 110\n      // except the first), delete keys in newData that aren't in                                         // 111\n      // oldData.  don't interfere with other keys, in case we are                                        // 112\n      // co-existing with something else that writes to a component's                                     // 113\n      // this.data.                                                                                       // 114\n      if (oldData) {                                                                                      // 115\n        for (var _key in meteorBabelHelpers.sanitizeForInObject(oldData)) {                               // 116\n          if (!(_key in newData)) {                                                                       // 117\n            delete component.data[_key];                                                                  // 118\n          }                                                                                               // 119\n        }                                                                                                 // 120\n      }                                                                                                   // 121\n      this.oldData = newData;                                                                             // 122\n    }                                                                                                     // 123\n                                                                                                          //\n    return updateData;                                                                                    //\n  }();                                                                                                    //\n                                                                                                          //\n  return MeteorDataManager;                                                                               //\n}();                                                                                                      //\n                                                                                                          //\nvar ReactMeteorData = {                                                                                   // 126\n  componentWillMount: function () {                                                                       // 127\n    function componentWillMount() {                                                                       // 126\n      this.data = {};                                                                                     // 128\n      this._meteorDataManager = new MeteorDataManager(this);                                              // 129\n      var newData = this._meteorDataManager.calculateData();                                              // 130\n      this._meteorDataManager.updateData(newData);                                                        // 131\n    }                                                                                                     // 132\n                                                                                                          //\n    return componentWillMount;                                                                            // 126\n  }(),                                                                                                    // 126\n  componentWillUpdate: function () {                                                                      // 134\n    function componentWillUpdate(nextProps, nextState) {                                                  // 126\n      var saveProps = this.props;                                                                         // 135\n      var saveState = this.state;                                                                         // 136\n      var newData = void 0;                                                                               // 137\n      try {                                                                                               // 138\n        // Temporarily assign this.state and this.props,                                                  // 139\n        // so that they are seen by getMeteorData!                                                        // 140\n        // This is a simulation of how the proposed Observe API                                           // 141\n        // for React will work, which calls observe() after                                               // 142\n        // componentWillUpdate and after props and state are                                              // 143\n        // updated, but before render() is called.                                                        // 144\n        // See https://github.com/facebook/react/issues/3398.                                             // 145\n        this.props = nextProps;                                                                           // 146\n        this.state = nextState;                                                                           // 147\n        newData = this._meteorDataManager.calculateData();                                                // 148\n      } finally {                                                                                         // 149\n        this.props = saveProps;                                                                           // 150\n        this.state = saveState;                                                                           // 151\n      }                                                                                                   // 152\n                                                                                                          //\n      this._meteorDataManager.updateData(newData);                                                        // 154\n    }                                                                                                     // 155\n                                                                                                          //\n    return componentWillUpdate;                                                                           // 126\n  }(),                                                                                                    // 126\n  componentWillUnmount: function () {                                                                     // 157\n    function componentWillUnmount() {                                                                     // 126\n      this._meteorDataManager.dispose();                                                                  // 158\n    }                                                                                                     // 159\n                                                                                                          //\n    return componentWillUnmount;                                                                          // 126\n  }()                                                                                                     // 126\n};                                                                                                        // 126\n                                                                                                          //\nvar ReactComponent = function (_React$Component) {                                                        //\n  _inherits(ReactComponent, _React$Component);                                                            //\n                                                                                                          //\n  function ReactComponent() {                                                                             //\n    _classCallCheck(this, ReactComponent);                                                                //\n                                                                                                          //\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));                     //\n  }                                                                                                       //\n                                                                                                          //\n  return ReactComponent;                                                                                  //\n}(React.Component);                                                                                       //\n                                                                                                          //\nObject.assign(ReactComponent.prototype, ReactMeteorData);                                                 // 163\n                                                                                                          //\nvar ReactPureComponent = function (_React$PureComponent) {                                                //\n  _inherits(ReactPureComponent, _React$PureComponent);                                                    //\n                                                                                                          //\n  function ReactPureComponent() {                                                                         //\n    _classCallCheck(this, ReactPureComponent);                                                            //\n                                                                                                          //\n    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));                 //\n  }                                                                                                       //\n                                                                                                          //\n  return ReactPureComponent;                                                                              //\n}(React.PureComponent);                                                                                   //\n                                                                                                          //\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);                                             // 165\n                                                                                                          //\nfunction connect(_ref) {                                                                                  // 167\n  var _getMeteorData = _ref.getMeteorData;                                                                // 167\n  var _ref$pure = _ref.pure;                                                                              // 167\n  var pure = _ref$pure === undefined ? true : _ref$pure;                                                  // 167\n                                                                                                          //\n  var BaseComponent = pure ? ReactPureComponent : ReactComponent;                                         // 168\n  return function (WrappedComponent) {                                                                    // 169\n    return function (_BaseComponent) {                                                                    // 169\n      _inherits(ReactMeteorDataComponent, _BaseComponent);                                                // 169\n                                                                                                          //\n      function ReactMeteorDataComponent() {                                                               // 169\n        _classCallCheck(this, ReactMeteorDataComponent);                                                  // 169\n                                                                                                          //\n        return _possibleConstructorReturn(this, _BaseComponent.apply(this, arguments));                   // 169\n      }                                                                                                   // 169\n                                                                                                          //\n      ReactMeteorDataComponent.prototype.getMeteorData = function () {                                    // 169\n        function getMeteorData() {                                                                        // 169\n          return _getMeteorData(this.props);                                                              // 172\n        }                                                                                                 // 173\n                                                                                                          //\n        return getMeteorData;                                                                             // 169\n      }();                                                                                                // 169\n                                                                                                          //\n      ReactMeteorDataComponent.prototype.render = function () {                                           // 169\n        function render() {                                                                               // 169\n          return React.createElement(WrappedComponent, _extends({}, this.props, this.data));              // 175\n        }                                                                                                 // 176\n                                                                                                          //\n        return render;                                                                                    // 169\n      }();                                                                                                // 169\n                                                                                                          //\n      return ReactMeteorDataComponent;                                                                    // 169\n    }(BaseComponent);                                                                                     // 169\n  };                                                                                                      // 169\n}                                                                                                         // 179\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"createContainer.jsx\":[\"react\",\"./ReactMeteorData.jsx\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/react-meteor-data/createContainer.jsx                                                         //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nmodule.export({default:function(){return createContainer}});var React;module.import('react',{\"default\":function(v){React=v}});var connect;module.import('./ReactMeteorData.jsx',{\"connect\":function(v){connect=v}});/**\n * Container helper using react-meteor-data.                                                              //\n */                                                                                                       //\n                                                                                                          //\n                                                                                                          // 5\n                                                                                                          // 6\n                                                                                                          //\nfunction createContainer() {                                                                              // 8\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};                   // 8\n  var Component = arguments[1];                                                                           // 8\n                                                                                                          //\n  var expandedOptions = options;                                                                          // 9\n  if (typeof options === 'function') {                                                                    // 10\n    expandedOptions = {                                                                                   // 11\n      getMeteorData: options                                                                              // 12\n    };                                                                                                    // 11\n  }                                                                                                       // 14\n                                                                                                          //\n  return connect(expandedOptions)(Component);                                                             // 16\n}                                                                                                         // 17\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"withTracker.jsx\":[\"./createContainer\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/react-meteor-data/withTracker.jsx                                                             //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nvar createContainer;module.import('./createContainer',{\"default\":function(v){createContainer=v}});        // 1\n                                                                                                          //\nvar withTracker = function withTracker(fn) {                                                              // 3\n  return function (C) {                                                                                   // 3\n    return createContainer(fn, C);                                                                        // 3\n  };                                                                                                      // 3\n};                                                                                                        // 3\n                                                                                                          //\nmodule.export(\"default\",exports.default=(withTracker));                                                   // 5\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nvar exports = require(\"./node_modules/meteor/react-meteor-data/react-meteor-data.jsx\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['react-meteor-data'] = exports, {\n  ReactMeteorData: ReactMeteorData\n});\n\n})();\n","servePath":"/packages/react-meteor-data.js","sourceMap":{"version":3,"sources":["/packages/react-meteor-data/react-meteor-data.jsx","/packages/react-meteor-data/ReactMeteorData.jsx","/packages/react-meteor-data/createContainer.jsx","/packages/react-meteor-data/withTracker.jsx"],"names":["checkNpmVersions","react","default","createContainer","withTracker","ReactMeteorData","React","Meteor","Tracker","MeteorDataManager","component","computation","oldData","dispose","stop","calculateData","getMeteorData","isServer","data","nonreactive","autorun","c","firstRun","savedSetState","setState","Error","forceUpdate","Package","mongo","Mongo","Object","keys","forEach","key","Cursor","console","warn","updateData","newData","componentWillMount","_meteorDataManager","componentWillUpdate","nextProps","nextState","saveProps","props","saveState","state","componentWillUnmount","ReactComponent","Component","assign","prototype","ReactPureComponent","PureComponent","connect","pure","BaseComponent","WrappedComponent","render","options","expandedOptions","fn","C"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,oCAAjC;;AAEAA,iBAAiB;AACfC,SAAO;AADQ,CAAjB,EAEG,mBAFH;;AAIA,SAASC,WAAWC,eAApB,QAA2C,uBAA3C;AACA,SAASD,WAAWE,WAApB,QAAuC,mBAAvC;AACA,SAASC,eAAT,QAAgC,uBAAhC,uD;;;;;;;;;;;;;;;;;ACRA;AACA;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA;AACA;;IACMC,iB;AACJ,6BAAYC,SAAZ,EAAuB;AAAA;;AACrB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;8BAEDC,O;uBAAU;AACR,UAAI,KAAKF,WAAT,EAAsB;AACpB,aAAKA,WAAL,CAAiBG,IAAjB;AACA,aAAKH,WAAL,GAAmB,IAAnB;AACD;AACF;;;;;8BAEDI,a;6BAAgB;AACd,UAAML,YAAY,KAAKA,SAAvB;;AAEA,UAAI,CAACA,UAAUM,aAAf,EAA8B;AAC5B,eAAO,IAAP;AACD;;AAED;AACA;AACA,UAAIT,OAAOU,QAAX,EAAqB;AACnB,eAAOP,UAAUM,aAAV,EAAP;AACD;;AAED,UAAI,KAAKL,WAAT,EAAsB;AACpB,aAAKA,WAAL,CAAiBG,IAAjB;AACA,aAAKH,WAAL,GAAmB,IAAnB;AACD;;AAED,UAAIO,aAAJ;AACA;AACA;AACA;AACA;AACA;AACA,WAAKP,WAAL,GAAmBH,QAAQW,WAAR,CAAoB;AAAA,eACrCX,QAAQY,OAAR,CAAgB,UAACC,CAAD,EAAO;AACrB,cAAIA,EAAEC,QAAN,EAAgB;AACd,gBAAMC,gBAAgBb,UAAUc,QAAhC;AACA,gBAAI;AACFd,wBAAUc,QAAV,GAAqB,YAAM;AACzB,sBAAM,IAAIC,KAAJ,CACJ,iEACE,6DADF,GAEE,8DAFF,GAGE,yDAHF,GAIE,6DAJF,GAKE,uBANE,CAAN;AAOD,eARD;;AAUAP,qBAAOR,UAAUM,aAAV,EAAP;AACD,aAZD,SAYU;AACRN,wBAAUc,QAAV,GAAqBD,aAArB;AACD;AACF,WAjBD,MAiBO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,cAAEP,IAAF;AACA;AACA;AACAJ,sBAAUgB,WAAV;AACD;AACF,SAhCD,CADqC;AAAA,OAApB,CAAnB;;AAoCA,UAAIC,QAAQC,KAAR,IAAiBD,QAAQC,KAAR,CAAcC,KAAnC,EAA0C;AACxCC,eAAOC,IAAP,CAAYb,IAAZ,EAAkBc,OAAlB,CAA0B,UAACC,GAAD,EAAS;AACjC,cAAIf,KAAKe,GAAL,aAAqBN,QAAQC,KAAR,CAAcC,KAAd,CAAoBK,MAA7C,EAAqD;AACnDC,oBAAQC,IAAR,CACE,mEACE,6DADF,GAEE,+CAHJ;AAKD;AACF,SARD;AASD;;AAED,aAAOlB,IAAP;AACD;;;;;8BAEDmB,U;wBAAWC,O,EAAS;AAClB,UAAM5B,YAAY,KAAKA,SAAvB;AACA,UAAME,UAAU,KAAKA,OAArB;;AAEA,UAAI,EAAE0B,WAAW,QAAQA,OAAR,yCAAQA,OAAR,OAAqB,QAAlC,CAAJ,EAAiD;AAC/C,cAAM,IAAIb,KAAJ,CAAU,6CAAV,CAAN;AACD;AACD;AACA,WAAK,IAAIQ,GAAT,2CAAgBK,OAAhB,GAAyB;AACvB5B,kBAAUQ,IAAV,CAAee,GAAf,IAAsBK,QAAQL,GAAR,CAAtB;AACD;AACD;AACA;AACA;AACA;AACA;AACA,UAAIrB,OAAJ,EAAa;AACX,aAAK,IAAIqB,IAAT,2CAAgBrB,OAAhB,GAAyB;AACvB,cAAI,EAAEqB,QAAOK,OAAT,CAAJ,EAAuB;AACrB,mBAAO5B,UAAUQ,IAAV,CAAee,IAAf,CAAP;AACD;AACF;AACF;AACD,WAAKrB,OAAL,GAAe0B,OAAf;AACD;;;;;;;;AAGH,OAAO,IAAMjC,kBAAkB;AAC7BkC,oBAD6B;AAAA,kCACR;AACnB,WAAKrB,IAAL,GAAY,EAAZ;AACA,WAAKsB,kBAAL,GAA0B,IAAI/B,iBAAJ,CAAsB,IAAtB,CAA1B;AACA,UAAM6B,UAAU,KAAKE,kBAAL,CAAwBzB,aAAxB,EAAhB;AACA,WAAKyB,kBAAL,CAAwBH,UAAxB,CAAmCC,OAAnC;AACD;;AAN4B;AAAA;AAQ7BG,qBAR6B;AAAA,iCAQTC,SARS,EAQEC,SARF,EAQa;AACxC,UAAMC,YAAY,KAAKC,KAAvB;AACA,UAAMC,YAAY,KAAKC,KAAvB;AACA,UAAIT,gBAAJ;AACA,UAAI;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKO,KAAL,GAAaH,SAAb;AACA,aAAKK,KAAL,GAAaJ,SAAb;AACAL,kBAAU,KAAKE,kBAAL,CAAwBzB,aAAxB,EAAV;AACD,OAXD,SAWU;AACR,aAAK8B,KAAL,GAAaD,SAAb;AACA,aAAKG,KAAL,GAAaD,SAAb;AACD;;AAED,WAAKN,kBAAL,CAAwBH,UAAxB,CAAmCC,OAAnC;AACD;;AA7B4B;AAAA;AA+B7BU,sBA/B6B;AAAA,oCA+BN;AACrB,WAAKR,kBAAL,CAAwB3B,OAAxB;AACD;;AAjC4B;AAAA;AAAA,CAAxB;;IAoCDoC,c;;;;;;;;;;EAAuB3C,MAAM4C,S;;AACnCpB,OAAOqB,MAAP,CAAcF,eAAeG,SAA7B,EAAwC/C,eAAxC;;IACMgD,kB;;;;;;;;;;EAA2B/C,MAAMgD,a;;AACvCxB,OAAOqB,MAAP,CAAcE,mBAAmBD,SAAjC,EAA4C/C,eAA5C;;AAEO,SAASkD,OAAT,OAAiD;AAAA,MAA9BvC,cAA8B,QAA9BA,aAA8B;AAAA,uBAAfwC,IAAe;AAAA,MAAfA,IAAe,6BAAR,IAAQ;;AACtD,MAAMC,gBAAgBD,OAAOH,kBAAP,GAA4BJ,cAAlD;AACA,SAAO,UAACS,gBAAD;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA,yCAEH1C,aAFG;AAAA,iCAEa;AACd,iBAAOA,eAAc,KAAK6B,KAAnB,CAAP;AACD;;AAJE;AAAA;;AAAA,yCAKHc,MALG;AAAA,0BAKM;AACP,iBAAO,oBAAC,gBAAD,eAAsB,KAAKd,KAA3B,EAAsC,KAAK3B,IAA3C,EAAP;AACD;;AAPE;AAAA;;AAAA;AAAA,MACkCuC,aADlC;AAAA,GAAP;AAUD,gH;;;;;;;;;;;AClLD;;;;AAIA,OAAOnD,KAAP,MAAkB,OAAlB;AACA,SAASiD,OAAT,QAAwB,uBAAxB;;AAEA,eAAe,SAASpD,eAAT,GAAkD;AAAA,MAAzByD,OAAyB,uEAAf,EAAe;AAAA,MAAXV,SAAW;;AAC/D,MAAIW,kBAAkBD,OAAtB;AACA,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,sBAAkB;AAChB7C,qBAAe4C;AADC,KAAlB;AAGD;;AAED,SAAOL,QAAQM,eAAR,EAAyBX,SAAzB,CAAP;AACD,+G;;;;;;;;;;;AChBD,OAAO/C,eAAP,MAA4B,mBAA5B;;AAEA,IAAMC,cAAc,SAAdA,WAAc;AAAA,SAAM;AAAA,WAAKD,gBAAgB2D,EAAhB,EAAoBC,CAApB,CAAL;AAAA,GAAN;AAAA,CAApB;;AAEA,eAAe3D,WAAf,oF","file":"/packages/react-meteor-data.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.3 - 16',\n}, 'react-meteor-data');\n\nexport { default as createContainer } from './createContainer.jsx';\nexport { default as withTracker } from './withTracker.jsx';\nexport { ReactMeteorData } from './ReactMeteorData.jsx';\n","/* global Package */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => (\n      Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n                'Can\\'t call `setState` inside `getMeteorData` as this could '\n                + 'cause an endless loop. To respond to Meteor data changing, '\n                + 'consider making this component a \\\"wrapper component\\\" that '\n                + 'only fetches data and passes it in as props to a child '\n                + 'component. Then you can use `componentWillReceiveProps` in '\n                + 'that child component.');\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      })\n    ));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\n            + 'This value will not be reactive. You probably want to call '\n            + '`.fetch()` on the cursor before returning it.'\n          );\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && (typeof newData) === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\nclass ReactComponent extends React.Component {}\nObject.assign(ReactComponent.prototype, ReactMeteorData);\nclass ReactPureComponent extends React.PureComponent {}\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nexport function connect({ getMeteorData, pure = true }) {\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return (WrappedComponent) => (\n    class ReactMeteorDataComponent extends BaseComponent {\n      getMeteorData() {\n        return getMeteorData(this.props);\n      }\n      render() {\n        return <WrappedComponent {...this.props} {...this.data} />;\n      }\n    }\n  );\n}\n","/**\n * Container helper using react-meteor-data.\n */\n\nimport React from 'react';\nimport { connect } from './ReactMeteorData.jsx';\n\nexport default function createContainer(options = {}, Component) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  return connect(expandedOptions)(Component);\n}\n","import createContainer from './createContainer';\n\nconst withTracker = fn => C => createContainer(fn, C);\n\nexport default withTracker;\n"]}}]